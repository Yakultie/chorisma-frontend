{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"SVGStringList\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'SVGStringList'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"SVGStringList\"].prototype;\n  }\n  return Object.create(proto);\n}\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n  return new Proxy(wrapper, proxyHandler);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  let wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class SVGStringList {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n    clear() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'clear' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol].clear();\n    }\n    initialize(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'initialize' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].initialize(...args);\n    }\n    getItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'getItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].getItem(...args);\n    }\n    insertItemBefore(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'insertItemBefore' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].insertItemBefore(...args);\n    }\n    replaceItem(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'replaceItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].replaceItem(...args);\n    }\n    removeItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'removeItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].removeItem(...args);\n    }\n    appendItem(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'appendItem' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].appendItem(...args);\n    }\n    get length() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get length' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol][\"length\"];\n    }\n    get numberOfItems() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get numberOfItems' called on an object that is not a valid instance of SVGStringList.\");\n      }\n      return esValue[implSymbol][\"numberOfItems\"];\n    }\n  }\n  Object.defineProperties(SVGStringList.prototype, {\n    clear: {\n      enumerable: true\n    },\n    initialize: {\n      enumerable: true\n    },\n    getItem: {\n      enumerable: true\n    },\n    insertItemBefore: {\n      enumerable: true\n    },\n    replaceItem: {\n      enumerable: true\n    },\n    removeItem: {\n      enumerable: true\n    },\n    appendItem: {\n      enumerable: true\n    },\n    length: {\n      enumerable: true\n    },\n    numberOfItems: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"SVGStringList\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: globalObject.Array.prototype[Symbol.iterator],\n      configurable: true,\n      writable: true\n    }\n  });\n  ctorRegistry[interfaceName] = SVGStringList;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: SVGStringList\n  });\n};\nconst proxyHandlerCache = new WeakMap();\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  }\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  }\n  ownKeys(target) {\n    const keys = new Set();\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\n      keys.add(`${key}`);\n    }\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  }\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        return {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n      ignoreNamedProps = true;\n    }\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\n      const globalObject = this._globalObject;\n      if (utils.isArrayIndexPropName(P)) {\n        const index = P >>> 0;\n        let indexedValue = V;\n        indexedValue = conversions[\"DOMString\"](indexedValue, {\n          context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\",\n          globals: globalObject\n        });\n        const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n        if (creating) {\n          target[implSymbol][utils.indexedSetNew](index, indexedValue);\n        } else {\n          target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n        }\n        return true;\n      }\n    }\n    let ownDesc;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        ownDesc = {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: undefined\n      };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = {\n        value: V\n      };\n    } else {\n      valueDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: V\n      };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n    const globalObject = this._globalObject;\n    if (utils.isArrayIndexPropName(P)) {\n      if (desc.get || desc.set) {\n        return false;\n      }\n      const index = P >>> 0;\n      let indexedValue = desc.value;\n      indexedValue = conversions[\"DOMString\"](indexedValue, {\n        context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\",\n        globals: globalObject\n      });\n      const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n      if (creating) {\n        target[implSymbol][utils.indexedSetNew](index, indexedValue);\n      } else {\n        target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n      }\n      return true;\n    }\n    return Reflect.defineProperty(target, P, desc);\n  }\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n    const globalObject = this._globalObject;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      return !target[implSymbol][utils.supportsPropertyIndex](index);\n    }\n    return Reflect.deleteProperty(target, P);\n  }\n  preventExtensions() {\n    return false;\n  }\n}\nconst Impl = require(\"../svg/SVGStringList-impl.js\");","map":{"version":3,"names":["conversions","require","utils","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","makeProxy","wrapper","proxyHandler","proxyHandlerCache","get","ProxyHandler","set","Proxy","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","SVGStringList","constructor","clear","esValue","initialize","newItem","args","curArg","globals","push","getItem","index","insertItemBefore","replaceItem","removeItem","appendItem","numberOfItems","defineProperties","enumerable","Symbol","toStringTag","iterator","Array","writable","WeakMap","_globalObject","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","apply","ownKeys","keys","key","supportedPropertyIndices","add","ignoreNamedProps","isArrayIndexPropName","supportsPropertyIndex","indexedValue","tryWrapperForImpl","V","creating","indexedSetNew","indexedSetExisting","ownDesc","existingDesc","valueDesc","deleteProperty","preventExtensions"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/SVGStringList.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"SVGStringList\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'SVGStringList'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"SVGStringList\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n  return new Proxy(wrapper, proxyHandler);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  let wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class SVGStringList {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n\n    clear() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'clear' called on an object that is not a valid instance of SVGStringList.\");\n      }\n\n      return esValue[implSymbol].clear();\n    }\n\n    initialize(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'initialize' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'initialize' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'initialize' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].initialize(...args);\n    }\n\n    getItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'getItem' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'getItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'getItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].getItem(...args);\n    }\n\n    insertItemBefore(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'insertItemBefore' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'insertItemBefore' on 'SVGStringList': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'insertItemBefore' on 'SVGStringList': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].insertItemBefore(...args);\n    }\n\n    replaceItem(newItem, index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'replaceItem' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'replaceItem' on 'SVGStringList': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'replaceItem' on 'SVGStringList': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].replaceItem(...args);\n    }\n\n    removeItem(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'removeItem' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'removeItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'removeItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].removeItem(...args);\n    }\n\n    appendItem(newItem) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'appendItem' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'appendItem' on 'SVGStringList': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'appendItem' on 'SVGStringList': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].appendItem(...args);\n    }\n\n    get length() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get length' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      return esValue[implSymbol][\"length\"];\n    }\n\n    get numberOfItems() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get numberOfItems' called on an object that is not a valid instance of SVGStringList.\"\n        );\n      }\n\n      return esValue[implSymbol][\"numberOfItems\"];\n    }\n  }\n  Object.defineProperties(SVGStringList.prototype, {\n    clear: { enumerable: true },\n    initialize: { enumerable: true },\n    getItem: { enumerable: true },\n    insertItemBefore: { enumerable: true },\n    replaceItem: { enumerable: true },\n    removeItem: { enumerable: true },\n    appendItem: { enumerable: true },\n    length: { enumerable: true },\n    numberOfItems: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"SVGStringList\", configurable: true },\n    [Symbol.iterator]: { value: globalObject.Array.prototype[Symbol.iterator], configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = SVGStringList;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: SVGStringList\n  });\n};\n\nconst proxyHandlerCache = new WeakMap();\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  }\n\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  }\n\n  ownKeys(target) {\n    const keys = new Set();\n\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\n      keys.add(`${key}`);\n    }\n\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  }\n\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        return {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n      ignoreNamedProps = true;\n    }\n\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\n      const globalObject = this._globalObject;\n\n      if (utils.isArrayIndexPropName(P)) {\n        const index = P >>> 0;\n        let indexedValue = V;\n\n        indexedValue = conversions[\"DOMString\"](indexedValue, {\n          context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\",\n          globals: globalObject\n        });\n\n        const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n        if (creating) {\n          target[implSymbol][utils.indexedSetNew](index, indexedValue);\n        } else {\n          target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n        }\n\n        return true;\n      }\n    }\n    let ownDesc;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n\n      if (target[implSymbol][utils.supportsPropertyIndex](index)) {\n        const indexedValue = target[implSymbol].getItem(index);\n        ownDesc = {\n          writable: true,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = { value: V };\n    } else {\n      valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (utils.isArrayIndexPropName(P)) {\n      if (desc.get || desc.set) {\n        return false;\n      }\n\n      const index = P >>> 0;\n      let indexedValue = desc.value;\n\n      indexedValue = conversions[\"DOMString\"](indexedValue, {\n        context: \"Failed to set the \" + index + \" property on 'SVGStringList': The provided value\",\n        globals: globalObject\n      });\n\n      const creating = !target[implSymbol][utils.supportsPropertyIndex](index);\n      if (creating) {\n        target[implSymbol][utils.indexedSetNew](index, indexedValue);\n      } else {\n        target[implSymbol][utils.indexedSetExisting](index, indexedValue);\n      }\n\n      return true;\n    }\n\n    return Reflect.defineProperty(target, P, desc);\n  }\n\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      return !target[implSymbol][utils.supportsPropertyIndex](index);\n    }\n\n    return Reflect.deleteProperty(target, P);\n  }\n\n  preventExtensions() {\n    return false;\n  }\n}\n\nconst Impl = require(\"../svg/SVGStringList-impl.js\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAME,UAAU,GAAGD,KAAK,CAACC,UAAU;AACnC,MAAMC,kBAAkB,GAAGF,KAAK,CAACE,kBAAkB;AAEnD,MAAMC,aAAa,GAAG,eAAe;AAErCC,OAAO,CAACC,EAAE,GAAGC,KAAK,IAAI;EACpB,OAAON,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAC,IAAIN,KAAK,CAACQ,MAAM,CAACF,KAAK,EAAEL,UAAU,CAAC,IAAIK,KAAK,CAACL,UAAU,CAAC,YAAYQ,IAAI,CAACC,cAAc;AACrH,CAAC;AACDN,OAAO,CAACO,MAAM,GAAGL,KAAK,IAAI;EACxB,OAAON,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,YAAYG,IAAI,CAACC,cAAc;AACtE,CAAC;AACDN,OAAO,CAACQ,OAAO,GAAG,UAACC,YAAY,EAAEP,KAAK,EAA8C;EAAA,IAA5C;IAAEQ,OAAO,GAAG;EAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7E,IAAIX,OAAO,CAACC,EAAE,CAACC,KAAK,CAAC,EAAE;IACrB,OAAON,KAAK,CAACkB,cAAc,CAACZ,KAAK,CAAC;EACpC;EACA,MAAM,IAAIO,YAAY,CAACM,SAAS,CAAE,GAAEL,OAAQ,kCAAiC,CAAC;AAChF,CAAC;AAED,SAASM,WAAWA,CAACP,YAAY,EAAEQ,SAAS,EAAE;EAC5C,IAAIC,KAAK;EACT,IAAID,SAAS,KAAKJ,SAAS,EAAE;IAC3BK,KAAK,GAAGD,SAAS,CAACE,SAAS;EAC7B;EAEA,IAAI,CAACvB,KAAK,CAACO,QAAQ,CAACe,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAGT,YAAY,CAACX,kBAAkB,CAAC,CAAC,eAAe,CAAC,CAACqB,SAAS;EACrE;EAEA,OAAOC,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC;AAC7B;AAEA,SAASI,SAASA,CAACC,OAAO,EAAEd,YAAY,EAAE;EACxC,IAAIe,YAAY,GAAGC,iBAAiB,CAACC,GAAG,CAACjB,YAAY,CAAC;EACtD,IAAIe,YAAY,KAAKX,SAAS,EAAE;IAC9BW,YAAY,GAAG,IAAIG,YAAY,CAAClB,YAAY,CAAC;IAC7CgB,iBAAiB,CAACG,GAAG,CAACnB,YAAY,EAAEe,YAAY,CAAC;EACnD;EACA,OAAO,IAAIK,KAAK,CAACN,OAAO,EAAEC,YAAY,CAAC;AACzC;AAEAxB,OAAO,CAACqB,MAAM,GAAG,CAACZ,YAAY,EAAEqB,eAAe,EAAEC,WAAW,KAAK;EAC/D,MAAMR,OAAO,GAAGP,WAAW,CAACP,YAAY,CAAC;EACzC,OAAOT,OAAO,CAACgC,KAAK,CAACT,OAAO,EAAEd,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;AAC3E,CAAC;AAED/B,OAAO,CAACiC,UAAU,GAAG,CAACxB,YAAY,EAAEqB,eAAe,EAAEC,WAAW,KAAK;EACnE,MAAMR,OAAO,GAAGvB,OAAO,CAACqB,MAAM,CAACZ,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;EAC1E,OAAOnC,KAAK,CAACkB,cAAc,CAACS,OAAO,CAAC;AACtC,CAAC;AAEDvB,OAAO,CAACkC,cAAc,GAAG,CAACX,OAAO,EAAEd,YAAY,KAAK,CAAC,CAAC;AAEtDT,OAAO,CAACgC,KAAK,GAAG,UAACT,OAAO,EAAEd,YAAY,EAA6C;EAAA,IAA3CqB,eAAe,GAAAnB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEoB,WAAW,GAAApB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC5EoB,WAAW,CAACR,OAAO,GAAGA,OAAO;EAE7BvB,OAAO,CAACkC,cAAc,CAACX,OAAO,EAAEd,YAAY,CAAC;EAC7CW,MAAM,CAACe,cAAc,CAACZ,OAAO,EAAE1B,UAAU,EAAE;IACzCK,KAAK,EAAE,IAAIG,IAAI,CAACC,cAAc,CAACG,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;IAC1EK,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFb,OAAO,GAAGD,SAAS,CAACC,OAAO,EAAEd,YAAY,CAAC;EAE1Cc,OAAO,CAAC1B,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,GAAGd,OAAO;EAClD,IAAIlB,IAAI,CAACiC,IAAI,EAAE;IACbjC,IAAI,CAACiC,IAAI,CAACf,OAAO,CAAC1B,UAAU,CAAC,CAAC;EAChC;EACA,OAAO0B,OAAO;AAChB,CAAC;AAEDvB,OAAO,CAACuC,GAAG,GAAG,CAAC9B,YAAY,EAAEQ,SAAS,KAAK;EACzC,IAAIM,OAAO,GAAGP,WAAW,CAACP,YAAY,EAAEQ,SAAS,CAAC;EAElDjB,OAAO,CAACkC,cAAc,CAACX,OAAO,EAAEd,YAAY,CAAC;EAC7CW,MAAM,CAACe,cAAc,CAACZ,OAAO,EAAE1B,UAAU,EAAE;IACzCK,KAAK,EAAEkB,MAAM,CAACC,MAAM,CAAChB,IAAI,CAACC,cAAc,CAACa,SAAS,CAAC;IACnDiB,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFb,OAAO,GAAGD,SAAS,CAACC,OAAO,EAAEd,YAAY,CAAC;EAE1Cc,OAAO,CAAC1B,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,GAAGd,OAAO;EAClD,IAAIlB,IAAI,CAACiC,IAAI,EAAE;IACbjC,IAAI,CAACiC,IAAI,CAACf,OAAO,CAAC1B,UAAU,CAAC,CAAC;EAChC;EACA,OAAO0B,OAAO,CAAC1B,UAAU,CAAC;AAC5B,CAAC;AAED,MAAM2C,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAEnCzC,OAAO,CAAC0C,OAAO,GAAG,CAACjC,YAAY,EAAEkC,WAAW,KAAK;EAC/C,IAAI,CAACA,WAAW,CAACC,IAAI,CAACC,UAAU,IAAIL,OAAO,CAACM,GAAG,CAACD,UAAU,CAAC,CAAC,EAAE;IAC5D;EACF;EAEA,MAAME,YAAY,GAAGnD,KAAK,CAACoD,gBAAgB,CAACvC,YAAY,CAAC;EACzD,MAAMwC,aAAa,CAAC;IAClBC,WAAWA,CAAA,EAAG;MACZ,MAAM,IAAIzC,YAAY,CAACM,SAAS,CAAC,qBAAqB,CAAC;IACzD;IAEAoC,KAAKA,CAAA,EAAG;MACN,MAAMC,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAAC,4EAA4E,CAAC;MAChH;MAEA,OAAOqC,OAAO,CAACvD,UAAU,CAAC,CAACsD,KAAK,CAAC,CAAC;IACpC;IAEAE,UAAUA,CAACC,OAAO,EAAE;MAClB,MAAMF,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,iFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,oFAAmFJ,SAAS,CAACC,MAAO,WACvG,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,MAAM,EAAE;UACxC9C,OAAO,EAAE,gEAAgE;UACzE+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAACwD,UAAU,CAAC,GAAGE,IAAI,CAAC;IAChD;IAEAI,OAAOA,CAACC,KAAK,EAAE;MACb,MAAMR,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,8EACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,iFAAgFJ,SAAS,CAACC,MAAO,WACpG,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,eAAe,CAAC,CAAC8D,MAAM,EAAE;UAC5C9C,OAAO,EAAE,6DAA6D;UACtE+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAAC8D,OAAO,CAAC,GAAGJ,IAAI,CAAC;IAC7C;IAEAM,gBAAgBA,CAACP,OAAO,EAAEM,KAAK,EAAE;MAC/B,MAAMR,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,uFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,2FAA0FJ,SAAS,CAACC,MAAO,WAC9G,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,MAAM,EAAE;UACxC9C,OAAO,EAAE,sEAAsE;UAC/E+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA;QACE,IAAIA,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,eAAe,CAAC,CAAC8D,MAAM,EAAE;UAC5C9C,OAAO,EAAE,sEAAsE;UAC/E+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAACgE,gBAAgB,CAAC,GAAGN,IAAI,CAAC;IACtD;IAEAO,WAAWA,CAACR,OAAO,EAAEM,KAAK,EAAE;MAC1B,MAAMR,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,kFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,sFAAqFJ,SAAS,CAACC,MAAO,WACzG,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,MAAM,EAAE;UACxC9C,OAAO,EAAE,iEAAiE;UAC1E+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA;QACE,IAAIA,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,eAAe,CAAC,CAAC8D,MAAM,EAAE;UAC5C9C,OAAO,EAAE,iEAAiE;UAC1E+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAACiE,WAAW,CAAC,GAAGP,IAAI,CAAC;IACjD;IAEAQ,UAAUA,CAACH,KAAK,EAAE;MAChB,MAAMR,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,iFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,oFAAmFJ,SAAS,CAACC,MAAO,WACvG,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,eAAe,CAAC,CAAC8D,MAAM,EAAE;UAC5C9C,OAAO,EAAE,gEAAgE;UACzE+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAACkE,UAAU,CAAC,GAAGR,IAAI,CAAC;IAChD;IAEAS,UAAUA,CAACV,OAAO,EAAE;MAClB,MAAMF,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,iFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,oFAAmFJ,SAAS,CAACC,MAAO,WACvG,CAAC;MACH;MACA,MAAM2C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG7C,SAAS,CAAC,CAAC,CAAC;QACzB6C,MAAM,GAAG9D,WAAW,CAAC,WAAW,CAAC,CAAC8D,MAAM,EAAE;UACxC9C,OAAO,EAAE,gEAAgE;UACzE+C,OAAO,EAAEhD;QACX,CAAC,CAAC;QACF8C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOJ,OAAO,CAACvD,UAAU,CAAC,CAACmE,UAAU,CAAC,GAAGT,IAAI,CAAC;IAChD;IAEA,IAAI3C,MAAMA,CAAA,EAAG;MACX,MAAMwC,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MAEzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,iFACF,CAAC;MACH;MAEA,OAAOqC,OAAO,CAACvD,UAAU,CAAC,CAAC,QAAQ,CAAC;IACtC;IAEA,IAAIoE,aAAaA,CAAA,EAAG;MAClB,MAAMb,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKvC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MAEzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACmD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI3C,YAAY,CAACM,SAAS,CAC9B,wFACF,CAAC;MACH;MAEA,OAAOqC,OAAO,CAACvD,UAAU,CAAC,CAAC,eAAe,CAAC;IAC7C;EACF;EACAuB,MAAM,CAAC8C,gBAAgB,CAACjB,aAAa,CAAC9B,SAAS,EAAE;IAC/CgC,KAAK,EAAE;MAAEgB,UAAU,EAAE;IAAK,CAAC;IAC3Bd,UAAU,EAAE;MAAEc,UAAU,EAAE;IAAK,CAAC;IAChCR,OAAO,EAAE;MAAEQ,UAAU,EAAE;IAAK,CAAC;IAC7BN,gBAAgB,EAAE;MAAEM,UAAU,EAAE;IAAK,CAAC;IACtCL,WAAW,EAAE;MAAEK,UAAU,EAAE;IAAK,CAAC;IACjCJ,UAAU,EAAE;MAAEI,UAAU,EAAE;IAAK,CAAC;IAChCH,UAAU,EAAE;MAAEG,UAAU,EAAE;IAAK,CAAC;IAChCvD,MAAM,EAAE;MAAEuD,UAAU,EAAE;IAAK,CAAC;IAC5BF,aAAa,EAAE;MAAEE,UAAU,EAAE;IAAK,CAAC;IACnC,CAACC,MAAM,CAACC,WAAW,GAAG;MAAEnE,KAAK,EAAE,eAAe;MAAEkC,YAAY,EAAE;IAAK,CAAC;IACpE,CAACgC,MAAM,CAACE,QAAQ,GAAG;MAAEpE,KAAK,EAAEO,YAAY,CAAC8D,KAAK,CAACpD,SAAS,CAACiD,MAAM,CAACE,QAAQ,CAAC;MAAElC,YAAY,EAAE,IAAI;MAAEoC,QAAQ,EAAE;IAAK;EAChH,CAAC,CAAC;EACFzB,YAAY,CAAChD,aAAa,CAAC,GAAGkD,aAAa;EAE3C7B,MAAM,CAACe,cAAc,CAAC1B,YAAY,EAAEV,aAAa,EAAE;IACjDqC,YAAY,EAAE,IAAI;IAClBoC,QAAQ,EAAE,IAAI;IACdtE,KAAK,EAAE+C;EACT,CAAC,CAAC;AACJ,CAAC;AAED,MAAMxB,iBAAiB,GAAG,IAAIgD,OAAO,CAAC,CAAC;AACvC,MAAM9C,YAAY,CAAC;EACjBuB,WAAWA,CAACzC,YAAY,EAAE;IACxB,IAAI,CAACiE,aAAa,GAAGjE,YAAY;EACnC;EAEAiB,GAAGA,CAACiD,MAAM,EAAEC,CAAC,EAAEC,QAAQ,EAAE;IACvB,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACpD,GAAG,CAACiD,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;IACzC;IACA,MAAME,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACrD,IAAIG,IAAI,KAAKlE,SAAS,EAAE;MACtB,MAAMoE,MAAM,GAAG7D,MAAM,CAAC8D,cAAc,CAACP,MAAM,CAAC;MAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;QACnB,OAAOpE,SAAS;MAClB;MACA,OAAOiE,OAAO,CAACpD,GAAG,CAACiD,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;IACzC;IACA,IAAI,CAACE,IAAI,CAACrD,GAAG,IAAI,CAACqD,IAAI,CAACnD,GAAG,EAAE;MAC1B,OAAOmD,IAAI,CAAC7E,KAAK;IACnB;IACA,MAAMiF,MAAM,GAAGJ,IAAI,CAACrD,GAAG;IACvB,IAAIyD,MAAM,KAAKtE,SAAS,EAAE;MACxB,OAAOA,SAAS;IAClB;IACA,OAAOiE,OAAO,CAACM,KAAK,CAACD,MAAM,EAAEN,QAAQ,EAAE,EAAE,CAAC;EAC5C;EAEA/B,GAAGA,CAAC6B,MAAM,EAAEC,CAAC,EAAE;IACb,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAChC,GAAG,CAAC6B,MAAM,EAAEC,CAAC,CAAC;IAC/B;IACA,MAAMG,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACrD,IAAIG,IAAI,KAAKlE,SAAS,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAMoE,MAAM,GAAG7D,MAAM,CAAC8D,cAAc,CAACP,MAAM,CAAC;IAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;MACnB,OAAOH,OAAO,CAAChC,GAAG,CAACmC,MAAM,EAAEL,CAAC,CAAC;IAC/B;IACA,OAAO,KAAK;EACd;EAEAS,OAAOA,CAACV,MAAM,EAAE;IACd,MAAMW,IAAI,GAAG,IAAI7C,GAAG,CAAC,CAAC;IAEtB,KAAK,MAAM8C,GAAG,IAAIZ,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAAC4F,wBAAwB,CAAC,EAAE;MACpEF,IAAI,CAACG,GAAG,CAAE,GAAEF,GAAI,EAAC,CAAC;IACpB;IAEA,KAAK,MAAMA,GAAG,IAAIT,OAAO,CAACO,OAAO,CAACV,MAAM,CAAC,EAAE;MACzCW,IAAI,CAACG,GAAG,CAACF,GAAG,CAAC;IACf;IACA,OAAO,CAAC,GAAGD,IAAI,CAAC;EAClB;EAEAN,wBAAwBA,CAACL,MAAM,EAAEC,CAAC,EAAE;IAClC,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACpD;IACA,IAAIc,gBAAgB,GAAG,KAAK;IAE5B,IAAI9F,KAAK,CAAC+F,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMhB,KAAK,GAAGgB,CAAC,KAAK,CAAC;MAErB,IAAID,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACgG,qBAAqB,CAAC,CAAChC,KAAK,CAAC,EAAE;QAC1D,MAAMiC,YAAY,GAAGlB,MAAM,CAAC9E,UAAU,CAAC,CAAC8D,OAAO,CAACC,KAAK,CAAC;QACtD,OAAO;UACLY,QAAQ,EAAE,IAAI;UACdL,UAAU,EAAE,IAAI;UAChB/B,YAAY,EAAE,IAAI;UAClBlC,KAAK,EAAEN,KAAK,CAACkG,iBAAiB,CAACD,YAAY;QAC7C,CAAC;MACH;MACAH,gBAAgB,GAAG,IAAI;IACzB;IAEA,OAAOZ,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;EACpD;EAEAhD,GAAGA,CAAC+C,MAAM,EAAEC,CAAC,EAAEmB,CAAC,EAAElB,QAAQ,EAAE;IAC1B,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAClD,GAAG,CAAC+C,MAAM,EAAEC,CAAC,EAAEmB,CAAC,EAAElB,QAAQ,CAAC;IAC5C;IACA;IACA;IACA,IAAIF,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,KAAKwC,QAAQ,EAAE;MACxD,MAAMpE,YAAY,GAAG,IAAI,CAACiE,aAAa;MAEvC,IAAI9E,KAAK,CAAC+F,oBAAoB,CAACf,CAAC,CAAC,EAAE;QACjC,MAAMhB,KAAK,GAAGgB,CAAC,KAAK,CAAC;QACrB,IAAIiB,YAAY,GAAGE,CAAC;QAEpBF,YAAY,GAAGnG,WAAW,CAAC,WAAW,CAAC,CAACmG,YAAY,EAAE;UACpDnF,OAAO,EAAE,oBAAoB,GAAGkD,KAAK,GAAG,kDAAkD;UAC1FH,OAAO,EAAEhD;QACX,CAAC,CAAC;QAEF,MAAMuF,QAAQ,GAAG,CAACrB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACgG,qBAAqB,CAAC,CAAChC,KAAK,CAAC;QACxE,IAAIoC,QAAQ,EAAE;UACZrB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACqG,aAAa,CAAC,CAACrC,KAAK,EAAEiC,YAAY,CAAC;QAC9D,CAAC,MAAM;UACLlB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACsG,kBAAkB,CAAC,CAACtC,KAAK,EAAEiC,YAAY,CAAC;QACnE;QAEA,OAAO,IAAI;MACb;IACF;IACA,IAAIM,OAAO;IAEX,IAAIvG,KAAK,CAAC+F,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMhB,KAAK,GAAGgB,CAAC,KAAK,CAAC;MAErB,IAAID,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACgG,qBAAqB,CAAC,CAAChC,KAAK,CAAC,EAAE;QAC1D,MAAMiC,YAAY,GAAGlB,MAAM,CAAC9E,UAAU,CAAC,CAAC8D,OAAO,CAACC,KAAK,CAAC;QACtDuC,OAAO,GAAG;UACR3B,QAAQ,EAAE,IAAI;UACdL,UAAU,EAAE,IAAI;UAChB/B,YAAY,EAAE,IAAI;UAClBlC,KAAK,EAAEN,KAAK,CAACkG,iBAAiB,CAACD,YAAY;QAC7C,CAAC;MACH;IACF;IAEA,IAAIM,OAAO,KAAKtF,SAAS,EAAE;MACzBsF,OAAO,GAAGrB,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACvD;IACA,IAAIuB,OAAO,KAAKtF,SAAS,EAAE;MACzB,MAAMoE,MAAM,GAAGH,OAAO,CAACI,cAAc,CAACP,MAAM,CAAC;MAC7C,IAAIM,MAAM,KAAK,IAAI,EAAE;QACnB,OAAOH,OAAO,CAAClD,GAAG,CAACqD,MAAM,EAAEL,CAAC,EAAEmB,CAAC,EAAElB,QAAQ,CAAC;MAC5C;MACAsB,OAAO,GAAG;QAAE3B,QAAQ,EAAE,IAAI;QAAEL,UAAU,EAAE,IAAI;QAAE/B,YAAY,EAAE,IAAI;QAAElC,KAAK,EAAEW;MAAU,CAAC;IACtF;IACA,IAAI,CAACsF,OAAO,CAAC3B,QAAQ,EAAE;MACrB,OAAO,KAAK;IACd;IACA,IAAI,CAAC5E,KAAK,CAACO,QAAQ,CAAC0E,QAAQ,CAAC,EAAE;MAC7B,OAAO,KAAK;IACd;IACA,MAAMuB,YAAY,GAAGtB,OAAO,CAACE,wBAAwB,CAACH,QAAQ,EAAED,CAAC,CAAC;IAClE,IAAIyB,SAAS;IACb,IAAID,YAAY,KAAKvF,SAAS,EAAE;MAC9B,IAAIuF,YAAY,CAAC1E,GAAG,IAAI0E,YAAY,CAACxE,GAAG,EAAE;QACxC,OAAO,KAAK;MACd;MACA,IAAI,CAACwE,YAAY,CAAC5B,QAAQ,EAAE;QAC1B,OAAO,KAAK;MACd;MACA6B,SAAS,GAAG;QAAEnG,KAAK,EAAE6F;MAAE,CAAC;IAC1B,CAAC,MAAM;MACLM,SAAS,GAAG;QAAE7B,QAAQ,EAAE,IAAI;QAAEL,UAAU,EAAE,IAAI;QAAE/B,YAAY,EAAE,IAAI;QAAElC,KAAK,EAAE6F;MAAE,CAAC;IAChF;IACA,OAAOjB,OAAO,CAAC3C,cAAc,CAAC0C,QAAQ,EAAED,CAAC,EAAEyB,SAAS,CAAC;EACvD;EAEAlE,cAAcA,CAACwC,MAAM,EAAEC,CAAC,EAAEG,IAAI,EAAE;IAC9B,IAAI,OAAOH,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAC3C,cAAc,CAACwC,MAAM,EAAEC,CAAC,EAAEG,IAAI,CAAC;IAChD;IAEA,MAAMtE,YAAY,GAAG,IAAI,CAACiE,aAAa;IAEvC,IAAI9E,KAAK,CAAC+F,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,IAAIG,IAAI,CAACrD,GAAG,IAAIqD,IAAI,CAACnD,GAAG,EAAE;QACxB,OAAO,KAAK;MACd;MAEA,MAAMgC,KAAK,GAAGgB,CAAC,KAAK,CAAC;MACrB,IAAIiB,YAAY,GAAGd,IAAI,CAAC7E,KAAK;MAE7B2F,YAAY,GAAGnG,WAAW,CAAC,WAAW,CAAC,CAACmG,YAAY,EAAE;QACpDnF,OAAO,EAAE,oBAAoB,GAAGkD,KAAK,GAAG,kDAAkD;QAC1FH,OAAO,EAAEhD;MACX,CAAC,CAAC;MAEF,MAAMuF,QAAQ,GAAG,CAACrB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACgG,qBAAqB,CAAC,CAAChC,KAAK,CAAC;MACxE,IAAIoC,QAAQ,EAAE;QACZrB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACqG,aAAa,CAAC,CAACrC,KAAK,EAAEiC,YAAY,CAAC;MAC9D,CAAC,MAAM;QACLlB,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACsG,kBAAkB,CAAC,CAACtC,KAAK,EAAEiC,YAAY,CAAC;MACnE;MAEA,OAAO,IAAI;IACb;IAEA,OAAOf,OAAO,CAAC3C,cAAc,CAACwC,MAAM,EAAEC,CAAC,EAAEG,IAAI,CAAC;EAChD;EAEAuB,cAAcA,CAAC3B,MAAM,EAAEC,CAAC,EAAE;IACxB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACwB,cAAc,CAAC3B,MAAM,EAAEC,CAAC,CAAC;IAC1C;IAEA,MAAMnE,YAAY,GAAG,IAAI,CAACiE,aAAa;IAEvC,IAAI9E,KAAK,CAAC+F,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMhB,KAAK,GAAGgB,CAAC,KAAK,CAAC;MACrB,OAAO,CAACD,MAAM,CAAC9E,UAAU,CAAC,CAACD,KAAK,CAACgG,qBAAqB,CAAC,CAAChC,KAAK,CAAC;IAChE;IAEA,OAAOkB,OAAO,CAACwB,cAAc,CAAC3B,MAAM,EAAEC,CAAC,CAAC;EAC1C;EAEA2B,iBAAiBA,CAAA,EAAG;IAClB,OAAO,KAAK;EACd;AACF;AAEA,MAAMlG,IAAI,GAAGV,OAAO,CAAC,8BAA8B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}