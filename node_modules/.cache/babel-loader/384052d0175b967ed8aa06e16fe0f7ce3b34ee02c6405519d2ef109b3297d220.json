{"ast":null,"code":"\"use strict\";\n\nconst cssom = require(\"rrweb-cssom\");\nconst {\n  CSSStyleDeclaration\n} = require(\"cssstyle\");\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\nconst {\n  getSpecifiedColor,\n  getComputedOrUsedColor\n} = require(\"./colors\");\nconst {\n  matchesDontThrow\n} = require(\"./selectors\");\nconst {\n  forEach,\n  indexOf\n} = Array.prototype;\nlet parsedDefaultStyleSheet;\n\n// Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\nexports.propertiesWithResolvedValueImplemented = {\n  \"__proto__\": null,\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  \"visibility\": {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  },\n  // https://svgwg.org/svg2-draft/interact.html#PointerEventsProperty\n  \"pointer-events\": {\n    inherited: true,\n    initial: \"auto\",\n    computedValue: \"as-specified\"\n  },\n  // https://drafts.csswg.org/css-backgrounds-3/#propdef-background-color\n  \"background-color\": {\n    inherited: false,\n    initial: \"transparent\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-logical-1/#propdef-border-block-end-color\n  \"border-block-start-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-block-end-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-inline-start-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-inline-end-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-backgrounds-3/#propdef-border-bottom-color\n  \"border-top-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-right-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-bottom-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-left-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-ui-4/#propdef-caret-color\n  \"caret-color\": {\n    inherited: true,\n    initial: \"auto\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-color-4/#propdef-color\n  \"color\": {\n    inherited: true,\n    initial: \"CanvasText\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-ui-4/#propdef-outline-color\n  \"outline-color\": {\n    inherited: false,\n    initial: \"invert\",\n    computedValue: \"computed-color\"\n  }\n};\nfunction forEachMatchingSheetRuleOfElement(elementImpl, handleRule) {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n}\nexports.invalidateStyleCache = elementImpl => {\n  if (elementImpl._attached) {\n    elementImpl._ownerDocument._styleCache = null;\n  }\n};\nexports.getDeclarationForElement = elementImpl => {\n  let styleCache = elementImpl._ownerDocument._styleCache;\n  if (!styleCache) {\n    styleCache = elementImpl._ownerDocument._styleCache = new WeakMap();\n  }\n  const cachedDeclaration = styleCache.get(elementImpl);\n  if (cachedDeclaration) {\n    return cachedDeclaration;\n  }\n  const declaration = new CSSStyleDeclaration();\n  function handleProperty(style, property) {\n    const value = style.getPropertyValue(property);\n    // https://drafts.csswg.org/css-cascade-4/#valdef-all-unset\n    if (value === \"unset\") {\n      declaration.removeProperty(property);\n    } else {\n      declaration.setProperty(property, value, style.getPropertyPriority(property));\n    }\n  }\n  forEachMatchingSheetRuleOfElement(elementImpl, rule => {\n    forEach.call(rule.style, property => {\n      handleProperty(rule.style, property);\n    });\n  });\n  forEach.call(elementImpl.style, property => {\n    handleProperty(elementImpl.style, property);\n  });\n  styleCache.set(elementImpl, declaration);\n  return declaration;\n};\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n}\n\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\nfunction getCascadedPropertyValue(element, property) {\n  return exports.getDeclarationForElement(element).getPropertyValue(property);\n}\n\n// https://drafts.csswg.org/css-cascade-4/#specified-value\nfunction getSpecifiedValue(element, property) {\n  const {\n    initial,\n    inherited,\n    computedValue\n  } = exports.propertiesWithResolvedValueImplemented[property];\n  const cascade = getCascadedPropertyValue(element, property);\n  if (cascade !== \"\") {\n    if (computedValue === \"computed-color\") {\n      return getSpecifiedColor(cascade);\n    }\n    return cascade;\n  }\n\n  // Defaulting\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  }\n\n  // root element without parent element or inherited property\n  return initial;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#computed-value\nfunction getComputedValue(element, property) {\n  const {\n    computedValue,\n    initial\n  } = exports.propertiesWithResolvedValueImplemented[property];\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  } else if (computedValue === \"computed-color\") {\n    const specifiedValue = getSpecifiedValue(element, property);\n\n    // https://drafts.csswg.org/css-color-4/#resolving-other-colors\n    if (specifiedValue === \"currentcolor\") {\n      if (property === \"color\") {\n        if (element.parentElement !== null) {\n          return getComputedValue(element.parentElement, \"color\");\n        }\n        return initial;\n      }\n      return getComputedValue(element, \"color\");\n    }\n    return getComputedOrUsedColor(specifiedValue);\n  }\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n}\n\n// https://drafts.csswg.org/cssom/#resolved-value\n// Only implements the properties that are defined in propertiesWithResolvedValueImplemented.\nexports.getResolvedValue = (element, property) => {\n  // We can always use the computed value with the current set of propertiesWithResolvedValueImplemented:\n  // * Color properties end up with the used value, but we don't implement any actual differences between used and\n  //   computed that https://drafts.csswg.org/css-cascade-5/#used-value gestures at.\n  // * The other properties fall back to the \"any other property: The resolved value is the computed value.\" case.\n  return getComputedValue(element, property);\n};\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;","map":{"version":3,"names":["cssom","require","CSSStyleDeclaration","defaultStyleSheet","getSpecifiedColor","getComputedOrUsedColor","matchesDontThrow","forEach","indexOf","Array","prototype","parsedDefaultStyleSheet","exports","propertiesWithResolvedValueImplemented","inherited","initial","computedValue","forEachMatchingSheetRuleOfElement","elementImpl","handleRule","handleSheet","sheet","call","cssRules","rule","media","innerRule","matches","parse","_ownerDocument","styleSheets","_list","invalidateStyleCache","_attached","_styleCache","getDeclarationForElement","styleCache","WeakMap","cachedDeclaration","get","declaration","handleProperty","style","property","value","getPropertyValue","removeProperty","setProperty","getPropertyPriority","set","element","selectorText","getCascadedPropertyValue","getSpecifiedValue","cascade","parentElement","getComputedValue","specifiedValue","TypeError","getResolvedValue","SHADOW_DOM_PSEUDO_REGEXP"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/helpers/style-rules.js"],"sourcesContent":["\"use strict\";\nconst cssom = require(\"rrweb-cssom\");\nconst { CSSStyleDeclaration } = require(\"cssstyle\");\nconst defaultStyleSheet = require(\"../../browser/default-stylesheet\");\nconst { getSpecifiedColor, getComputedOrUsedColor } = require(\"./colors\");\nconst { matchesDontThrow } = require(\"./selectors\");\n\nconst { forEach, indexOf } = Array.prototype;\n\nlet parsedDefaultStyleSheet;\n\n// Properties for which getResolvedValue is implemented. This is less than\n// every supported property.\n// https://drafts.csswg.org/indexes/#properties\nexports.propertiesWithResolvedValueImplemented = {\n  \"__proto__\": null,\n\n  // https://drafts.csswg.org/css2/visufx.html#visibility\n  \"visibility\": {\n    inherited: true,\n    initial: \"visible\",\n    computedValue: \"as-specified\"\n  },\n  // https://svgwg.org/svg2-draft/interact.html#PointerEventsProperty\n  \"pointer-events\": {\n    inherited: true,\n    initial: \"auto\",\n    computedValue: \"as-specified\"\n  },\n  // https://drafts.csswg.org/css-backgrounds-3/#propdef-background-color\n  \"background-color\": {\n    inherited: false,\n    initial: \"transparent\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-logical-1/#propdef-border-block-end-color\n  \"border-block-start-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-block-end-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-inline-start-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-inline-end-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-backgrounds-3/#propdef-border-bottom-color\n  \"border-top-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-right-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-bottom-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  \"border-left-color\": {\n    inherited: false,\n    initial: \"currentcolor\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-ui-4/#propdef-caret-color\n  \"caret-color\": {\n    inherited: true,\n    initial: \"auto\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-color-4/#propdef-color\n  \"color\": {\n    inherited: true,\n    initial: \"CanvasText\",\n    computedValue: \"computed-color\"\n  },\n  // https://drafts.csswg.org/css-ui-4/#propdef-outline-color\n  \"outline-color\": {\n    inherited: false,\n    initial: \"invert\",\n    computedValue: \"computed-color\"\n  }\n};\n\nfunction forEachMatchingSheetRuleOfElement(elementImpl, handleRule) {\n  function handleSheet(sheet) {\n    forEach.call(sheet.cssRules, rule => {\n      if (rule.media) {\n        if (indexOf.call(rule.media, \"screen\") !== -1) {\n          forEach.call(rule.cssRules, innerRule => {\n            if (matches(innerRule, elementImpl)) {\n              handleRule(innerRule);\n            }\n          });\n        }\n      } else if (matches(rule, elementImpl)) {\n        handleRule(rule);\n      }\n    });\n  }\n\n  if (!parsedDefaultStyleSheet) {\n    parsedDefaultStyleSheet = cssom.parse(defaultStyleSheet);\n  }\n\n  handleSheet(parsedDefaultStyleSheet);\n  forEach.call(elementImpl._ownerDocument.styleSheets._list, handleSheet);\n}\n\nexports.invalidateStyleCache = elementImpl => {\n  if (elementImpl._attached) {\n    elementImpl._ownerDocument._styleCache = null;\n  }\n};\n\nexports.getDeclarationForElement = elementImpl => {\n  let styleCache = elementImpl._ownerDocument._styleCache;\n  if (!styleCache) {\n    styleCache = elementImpl._ownerDocument._styleCache = new WeakMap();\n  }\n\n  const cachedDeclaration = styleCache.get(elementImpl);\n  if (cachedDeclaration) {\n    return cachedDeclaration;\n  }\n\n  const declaration = new CSSStyleDeclaration();\n\n  function handleProperty(style, property) {\n    const value = style.getPropertyValue(property);\n    // https://drafts.csswg.org/css-cascade-4/#valdef-all-unset\n    if (value === \"unset\") {\n      declaration.removeProperty(property);\n    } else {\n      declaration.setProperty(\n        property,\n        value,\n        style.getPropertyPriority(property)\n      );\n    }\n  }\n\n  forEachMatchingSheetRuleOfElement(elementImpl, rule => {\n    forEach.call(rule.style, property => {\n      handleProperty(rule.style, property);\n    });\n  });\n\n  forEach.call(elementImpl.style, property => {\n    handleProperty(elementImpl.style, property);\n  });\n\n  styleCache.set(elementImpl, declaration);\n\n  return declaration;\n};\n\nfunction matches(rule, element) {\n  return matchesDontThrow(element, rule.selectorText);\n}\n\n// Naive implementation of https://drafts.csswg.org/css-cascade-4/#cascading\n// based on the previous jsdom implementation of getComputedStyle.\n// Does not implement https://drafts.csswg.org/css-cascade-4/#cascade-specificity,\n// or rather specificity is only implemented by the order in which the matching\n// rules appear. The last rule is the most specific while the first rule is\n// the least specific.\nfunction getCascadedPropertyValue(element, property) {\n  return exports.getDeclarationForElement(element).getPropertyValue(property);\n}\n\n// https://drafts.csswg.org/css-cascade-4/#specified-value\nfunction getSpecifiedValue(element, property) {\n  const { initial, inherited, computedValue } = exports.propertiesWithResolvedValueImplemented[property];\n  const cascade = getCascadedPropertyValue(element, property);\n\n  if (cascade !== \"\") {\n    if (computedValue === \"computed-color\") {\n      return getSpecifiedColor(cascade);\n    }\n\n    return cascade;\n  }\n\n  // Defaulting\n  if (inherited && element.parentElement !== null) {\n    return getComputedValue(element.parentElement, property);\n  }\n\n  // root element without parent element or inherited property\n  return initial;\n}\n\n// https://drafts.csswg.org/css-cascade-4/#computed-value\nfunction getComputedValue(element, property) {\n  const { computedValue, initial } = exports.propertiesWithResolvedValueImplemented[property];\n  if (computedValue === \"as-specified\") {\n    return getSpecifiedValue(element, property);\n  } else if (computedValue === \"computed-color\") {\n    const specifiedValue = getSpecifiedValue(element, property);\n\n    // https://drafts.csswg.org/css-color-4/#resolving-other-colors\n    if (specifiedValue === \"currentcolor\") {\n      if (property === \"color\") {\n        if (element.parentElement !== null) {\n          return getComputedValue(element.parentElement, \"color\");\n        }\n        return initial;\n      }\n\n      return getComputedValue(element, \"color\");\n    }\n\n    return getComputedOrUsedColor(specifiedValue);\n  }\n\n  throw new TypeError(`Internal error: unrecognized computed value instruction '${computedValue}'`);\n}\n\n// https://drafts.csswg.org/cssom/#resolved-value\n// Only implements the properties that are defined in propertiesWithResolvedValueImplemented.\nexports.getResolvedValue = (element, property) => {\n  // We can always use the computed value with the current set of propertiesWithResolvedValueImplemented:\n  // * Color properties end up with the used value, but we don't implement any actual differences between used and\n  //   computed that https://drafts.csswg.org/css-cascade-5/#used-value gestures at.\n  // * The other properties fall back to the \"any other property: The resolved value is the computed value.\" case.\n  return getComputedValue(element, property);\n};\n\nexports.SHADOW_DOM_PSEUDO_REGEXP = /^::(?:part|slotted)\\(/i;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}