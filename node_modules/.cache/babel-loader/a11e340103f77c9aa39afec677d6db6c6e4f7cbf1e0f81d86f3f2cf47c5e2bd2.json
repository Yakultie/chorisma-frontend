{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst DOMRectInit = require(\"./DOMRectInit.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst DOMRectReadOnly = require(\"./DOMRectReadOnly.js\");\nconst interfaceName = \"DOMRect\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'DOMRect'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"DOMRect\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  DOMRectReadOnly._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\", \"Worker\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class DOMRect extends globalObject.DOMRectReadOnly {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 2\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 3\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[3];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 4\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n    get x() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get x' called on an object that is not a valid instance of DOMRect.\");\n      }\n      return esValue[implSymbol][\"x\"];\n    }\n    set x(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set x' called on an object that is not a valid instance of DOMRect.\");\n      }\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'x' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n      esValue[implSymbol][\"x\"] = V;\n    }\n    get y() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get y' called on an object that is not a valid instance of DOMRect.\");\n      }\n      return esValue[implSymbol][\"y\"];\n    }\n    set y(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set y' called on an object that is not a valid instance of DOMRect.\");\n      }\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'y' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n      esValue[implSymbol][\"y\"] = V;\n    }\n    get width() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get width' called on an object that is not a valid instance of DOMRect.\");\n      }\n      return esValue[implSymbol][\"width\"];\n    }\n    set width(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set width' called on an object that is not a valid instance of DOMRect.\");\n      }\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'width' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n      esValue[implSymbol][\"width\"] = V;\n    }\n    get height() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get height' called on an object that is not a valid instance of DOMRect.\");\n      }\n      return esValue[implSymbol][\"height\"];\n    }\n    set height(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set height' called on an object that is not a valid instance of DOMRect.\");\n      }\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'height' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n      esValue[implSymbol][\"height\"] = V;\n    }\n    static fromRect() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = DOMRectInit.convert(globalObject, curArg, {\n          context: \"Failed to execute 'fromRect' on 'DOMRect': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(Impl.implementation.fromRect(globalObject, ...args));\n    }\n  }\n  Object.defineProperties(DOMRect.prototype, {\n    x: {\n      enumerable: true\n    },\n    y: {\n      enumerable: true\n    },\n    width: {\n      enumerable: true\n    },\n    height: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"DOMRect\",\n      configurable: true\n    }\n  });\n  Object.defineProperties(DOMRect, {\n    fromRect: {\n      enumerable: true\n    }\n  });\n  ctorRegistry[interfaceName] = DOMRect;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMRect\n  });\n};\nconst Impl = require(\"../geometry/DOMRect-impl.js\");","map":{"version":3,"names":["conversions","require","utils","DOMRectInit","implSymbol","ctorRegistrySymbol","DOMRectReadOnly","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","DOMRect","constructor","args","curArg","globals","push","target","x","esValue","V","y","width","height","fromRect","tryWrapperForImpl","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/DOMRect.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst DOMRectInit = require(\"./DOMRectInit.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst DOMRectReadOnly = require(\"./DOMRectReadOnly.js\");\n\nconst interfaceName = \"DOMRect\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'DOMRect'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"DOMRect\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  DOMRectReadOnly._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class DOMRect extends globalObject.DOMRectReadOnly {\n    constructor() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 2\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 3\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[3];\n        if (curArg !== undefined) {\n          curArg = conversions[\"unrestricted double\"](curArg, {\n            context: \"Failed to construct 'DOMRect': parameter 4\",\n            globals: globalObject\n          });\n        } else {\n          curArg = 0;\n        }\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    get x() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get x' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      return esValue[implSymbol][\"x\"];\n    }\n\n    set x(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set x' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'x' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"x\"] = V;\n    }\n\n    get y() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get y' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      return esValue[implSymbol][\"y\"];\n    }\n\n    set y(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set y' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'y' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"y\"] = V;\n    }\n\n    get width() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get width' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      return esValue[implSymbol][\"width\"];\n    }\n\n    set width(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set width' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'width' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"width\"] = V;\n    }\n\n    get height() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get height' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      return esValue[implSymbol][\"height\"];\n    }\n\n    set height(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set height' called on an object that is not a valid instance of DOMRect.\");\n      }\n\n      V = conversions[\"unrestricted double\"](V, {\n        context: \"Failed to set the 'height' property on 'DOMRect': The provided value\",\n        globals: globalObject\n      });\n\n      esValue[implSymbol][\"height\"] = V;\n    }\n\n    static fromRect() {\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = DOMRectInit.convert(globalObject, curArg, {\n          context: \"Failed to execute 'fromRect' on 'DOMRect': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(Impl.implementation.fromRect(globalObject, ...args));\n    }\n  }\n  Object.defineProperties(DOMRect.prototype, {\n    x: { enumerable: true },\n    y: { enumerable: true },\n    width: { enumerable: true },\n    height: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"DOMRect\", configurable: true }\n  });\n  Object.defineProperties(DOMRect, { fromRect: { enumerable: true } });\n  ctorRegistry[interfaceName] = DOMRect;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMRect\n  });\n};\n\nconst Impl = require(\"../geometry/DOMRect-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}