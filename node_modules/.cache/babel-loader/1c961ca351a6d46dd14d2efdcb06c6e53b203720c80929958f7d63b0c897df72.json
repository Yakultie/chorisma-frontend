{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\nconst interfaceName = \"HTMLMeterElement\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'HTMLMeterElement'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"HTMLMeterElement\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class HTMLMeterElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n    get value() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get value' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"value\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set value(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set value' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'value' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"value\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get min() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get min' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"min\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set min(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set min' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'min' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"min\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get max() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get max' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"max\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set max(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set max' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'max' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"max\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get low() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get low' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"low\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set low(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set low' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'low' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"low\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get high() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get high' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"high\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set high(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set high' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'high' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"high\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get optimum() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get optimum' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"optimum\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set optimum(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set optimum' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'optimum' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"optimum\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get labels() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get labels' called on an object that is not a valid instance of HTMLMeterElement.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"labels\"]);\n    }\n  }\n  Object.defineProperties(HTMLMeterElement.prototype, {\n    value: {\n      enumerable: true\n    },\n    min: {\n      enumerable: true\n    },\n    max: {\n      enumerable: true\n    },\n    low: {\n      enumerable: true\n    },\n    high: {\n      enumerable: true\n    },\n    optimum: {\n      enumerable: true\n    },\n    labels: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"HTMLMeterElement\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = HTMLMeterElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLMeterElement\n  });\n};\nconst Impl = require(\"../nodes/HTMLMeterElement-impl.js\");","map":{"version":3,"names":["conversions","require","utils","HTMLConstructor_helpers_html_constructor","HTMLConstructor","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","HTMLElement","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","HTMLMeterElement","constructor","target","esValue","V","globals","min","max","low","high","optimum","labels","tryWrapperForImpl","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLMeterElement.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nconst interfaceName = \"HTMLMeterElement\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'HTMLMeterElement'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"HTMLMeterElement\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class HTMLMeterElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n\n    get value() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get value' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"value\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set value(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set value' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'value' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"value\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get min() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get min' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"min\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set min(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set min' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'min' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"min\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get max() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get max' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"max\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set max(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set max' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'max' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"max\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get low() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get low' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"low\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set low(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set low' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'low' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"low\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get high() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get high' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"high\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set high(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set high' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'high' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"high\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get optimum() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get optimum' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol][\"optimum\"];\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set optimum(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set optimum' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      V = conversions[\"double\"](V, {\n        context: \"Failed to set the 'optimum' property on 'HTMLMeterElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol][\"optimum\"] = V;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get labels() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get labels' called on an object that is not a valid instance of HTMLMeterElement.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"labels\"]);\n    }\n  }\n  Object.defineProperties(HTMLMeterElement.prototype, {\n    value: { enumerable: true },\n    min: { enumerable: true },\n    max: { enumerable: true },\n    low: { enumerable: true },\n    high: { enumerable: true },\n    optimum: { enumerable: true },\n    labels: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"HTMLMeterElement\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = HTMLMeterElement;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLMeterElement\n  });\n};\n\nconst Impl = require(\"../nodes/HTMLMeterElement-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}