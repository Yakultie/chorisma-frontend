{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n  function invokeTheCallbackFunction(mutations, observer) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n    observer = utils.tryWrapperForImpl(observer);\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"names":["conversions","require","utils","exports","convert","globalObject","value","context","arguments","length","undefined","TypeError","invokeTheCallbackFunction","mutations","observer","thisArg","tryWrapperForImpl","callResult","Reflect","apply","construct","wrapperSymbol","objectReference"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/MutationCallback.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(mutations, observer) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    callResult = Reflect.apply(value, thisArg, [mutations, observer]);\n  }\n\n  invokeTheCallbackFunction.construct = (mutations, observer) => {\n    mutations = utils.tryWrapperForImpl(mutations);\n\n    observer = utils.tryWrapperForImpl(observer);\n\n    let callResult = Reflect.construct(value, [mutations, observer]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnCE,OAAO,CAACC,OAAO,GAAG,UAACC,YAAY,EAAEC,KAAK,EAA8C;EAAA,IAA5C;IAAEC,OAAO,GAAG;EAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7E,IAAI,OAAOF,KAAK,KAAK,UAAU,EAAE;IAC/B,MAAM,IAAID,YAAY,CAACM,SAAS,CAACJ,OAAO,GAAG,oBAAoB,CAAC;EAClE;EAEA,SAASK,yBAAyBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IACtD,MAAMC,OAAO,GAAGb,KAAK,CAACc,iBAAiB,CAAC,IAAI,CAAC;IAC7C,IAAIC,UAAU;IAEdJ,SAAS,GAAGX,KAAK,CAACc,iBAAiB,CAACH,SAAS,CAAC;IAE9CC,QAAQ,GAAGZ,KAAK,CAACc,iBAAiB,CAACF,QAAQ,CAAC;IAE5CG,UAAU,GAAGC,OAAO,CAACC,KAAK,CAACb,KAAK,EAAES,OAAO,EAAE,CAACF,SAAS,EAAEC,QAAQ,CAAC,CAAC;EACnE;EAEAF,yBAAyB,CAACQ,SAAS,GAAG,CAACP,SAAS,EAAEC,QAAQ,KAAK;IAC7DD,SAAS,GAAGX,KAAK,CAACc,iBAAiB,CAACH,SAAS,CAAC;IAE9CC,QAAQ,GAAGZ,KAAK,CAACc,iBAAiB,CAACF,QAAQ,CAAC;IAE5C,IAAIG,UAAU,GAAGC,OAAO,CAACE,SAAS,CAACd,KAAK,EAAE,CAACO,SAAS,EAAEC,QAAQ,CAAC,CAAC;EAClE,CAAC;EAEDF,yBAAyB,CAACV,KAAK,CAACmB,aAAa,CAAC,GAAGf,KAAK;EACtDM,yBAAyB,CAACU,eAAe,GAAGhB,KAAK;EAEjD,OAAOM,yBAAyB;AAClC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}