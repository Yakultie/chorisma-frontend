{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n  function invokeTheCallbackFunction(blob) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n    blob = utils.tryWrapperForImpl(blob);\n    callResult = Reflect.apply(value, thisArg, [blob]);\n  }\n  invokeTheCallbackFunction.construct = blob => {\n    blob = utils.tryWrapperForImpl(blob);\n    let callResult = Reflect.construct(value, [blob]);\n  };\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n  return invokeTheCallbackFunction;\n};","map":{"version":3,"names":["conversions","require","utils","exports","convert","globalObject","value","context","arguments","length","undefined","TypeError","invokeTheCallbackFunction","blob","thisArg","tryWrapperForImpl","callResult","Reflect","apply","construct","wrapperSymbol","objectReference"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/BlobCallback.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (typeof value !== \"function\") {\n    throw new globalObject.TypeError(context + \" is not a function\");\n  }\n\n  function invokeTheCallbackFunction(blob) {\n    const thisArg = utils.tryWrapperForImpl(this);\n    let callResult;\n\n    blob = utils.tryWrapperForImpl(blob);\n\n    callResult = Reflect.apply(value, thisArg, [blob]);\n  }\n\n  invokeTheCallbackFunction.construct = blob => {\n    blob = utils.tryWrapperForImpl(blob);\n\n    let callResult = Reflect.construct(value, [blob]);\n  };\n\n  invokeTheCallbackFunction[utils.wrapperSymbol] = value;\n  invokeTheCallbackFunction.objectReference = value;\n\n  return invokeTheCallbackFunction;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnCE,OAAO,CAACC,OAAO,GAAG,UAACC,YAAY,EAAEC,KAAK,EAA8C;EAAA,IAA5C;IAAEC,OAAO,GAAG;EAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7E,IAAI,OAAOF,KAAK,KAAK,UAAU,EAAE;IAC/B,MAAM,IAAID,YAAY,CAACM,SAAS,CAACJ,OAAO,GAAG,oBAAoB,CAAC;EAClE;EAEA,SAASK,yBAAyBA,CAACC,IAAI,EAAE;IACvC,MAAMC,OAAO,GAAGZ,KAAK,CAACa,iBAAiB,CAAC,IAAI,CAAC;IAC7C,IAAIC,UAAU;IAEdH,IAAI,GAAGX,KAAK,CAACa,iBAAiB,CAACF,IAAI,CAAC;IAEpCG,UAAU,GAAGC,OAAO,CAACC,KAAK,CAACZ,KAAK,EAAEQ,OAAO,EAAE,CAACD,IAAI,CAAC,CAAC;EACpD;EAEAD,yBAAyB,CAACO,SAAS,GAAGN,IAAI,IAAI;IAC5CA,IAAI,GAAGX,KAAK,CAACa,iBAAiB,CAACF,IAAI,CAAC;IAEpC,IAAIG,UAAU,GAAGC,OAAO,CAACE,SAAS,CAACb,KAAK,EAAE,CAACO,IAAI,CAAC,CAAC;EACnD,CAAC;EAEDD,yBAAyB,CAACV,KAAK,CAACkB,aAAa,CAAC,GAAGd,KAAK;EACtDM,yBAAyB,CAACS,eAAe,GAAGf,KAAK;EAEjD,OAAOM,yBAAyB;AAClC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}