{"ast":null,"code":"\"use strict\";\n\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst {\n  XML_NS,\n  XMLNS_NS\n} = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = (globalObject, name) => {\n  if (!xnv.name(name)) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production`, \"InvalidCharacterError\"]);\n  }\n};\nexports.qname = (globalObject, qname) => {\n  if (!xnv.qname(qname)) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production`, \"InvalidCharacterError\"]);\n  }\n};\nexports.validateAndExtract = (globalObject, namespace, qualifiedName) => {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n  exports.qname(globalObject, qualifiedName);\n  let prefix = null;\n  let localName = qualifiedName;\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\"A namespace was given but a prefix was also extracted from the qualifiedName\", \"NamespaceError\"]);\n  }\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\", \"NamespaceError\"]);\n  }\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\", \"NamespaceError\"]);\n  }\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\", \"NamespaceError\"]);\n  }\n  return {\n    namespace,\n    prefix,\n    localName\n  };\n};","map":{"version":3,"names":["xnv","require","DOMException","XML_NS","XMLNS_NS","exports","name","globalObject","create","qname","validateAndExtract","namespace","qualifiedName","prefix","localName","colonIndex","indexOf","substring"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/helpers/validate-names.js"],"sourcesContent":["\"use strict\";\nconst xnv = require(\"xml-name-validator\");\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst { XML_NS, XMLNS_NS } = require(\"../helpers/namespaces\");\n\n// https://dom.spec.whatwg.org/#validate\n\nexports.name = (globalObject, name) => {\n  if (!xnv.name(name)) {\n    throw DOMException.create(globalObject, [`\"${name}\" did not match the Name production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.qname = (globalObject, qname) => {\n  if (!xnv.qname(qname)) {\n    throw DOMException.create(globalObject, [`\"${qname}\" did not match the QName production`, \"InvalidCharacterError\"]);\n  }\n};\n\nexports.validateAndExtract = (globalObject, namespace, qualifiedName) => {\n  if (namespace === \"\") {\n    namespace = null;\n  }\n\n  exports.qname(globalObject, qualifiedName);\n\n  let prefix = null;\n  let localName = qualifiedName;\n\n  const colonIndex = qualifiedName.indexOf(\":\");\n  if (colonIndex !== -1) {\n    prefix = qualifiedName.substring(0, colonIndex);\n    localName = qualifiedName.substring(colonIndex + 1);\n  }\n\n  if (prefix !== null && namespace === null) {\n    throw DOMException.create(globalObject, [\n      \"A namespace was given but a prefix was also extracted from the qualifiedName\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (prefix === \"xml\" && namespace !== XML_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix of \\\"xml\\\" was given but the namespace was not the XML namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if ((qualifiedName === \"xmlns\" || prefix === \"xmlns\") && namespace !== XMLNS_NS) {\n    throw DOMException.create(globalObject, [\n      \"A prefix or qualifiedName of \\\"xmlns\\\" was given but the namespace was not the XMLNS namespace\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  if (namespace === XMLNS_NS && qualifiedName !== \"xmlns\" && prefix !== \"xmlns\") {\n    throw DOMException.create(globalObject, [\n      \"The XMLNS namespace was given but neither the prefix nor qualifiedName was \\\"xmlns\\\"\",\n      \"NamespaceError\"\n    ]);\n  }\n\n  return { namespace, prefix, localName };\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,GAAG,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACzC,MAAMC,YAAY,GAAGD,OAAO,CAAC,gCAAgC,CAAC;AAC9D,MAAM;EAAEE,MAAM;EAAEC;AAAS,CAAC,GAAGH,OAAO,CAAC,uBAAuB,CAAC;;AAE7D;;AAEAI,OAAO,CAACC,IAAI,GAAG,CAACC,YAAY,EAAED,IAAI,KAAK;EACrC,IAAI,CAACN,GAAG,CAACM,IAAI,CAACA,IAAI,CAAC,EAAE;IACnB,MAAMJ,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CAAE,IAAGD,IAAK,qCAAoC,EAAE,uBAAuB,CAAC,CAAC;EACnH;AACF,CAAC;AAEDD,OAAO,CAACI,KAAK,GAAG,CAACF,YAAY,EAAEE,KAAK,KAAK;EACvC,IAAI,CAACT,GAAG,CAACS,KAAK,CAACA,KAAK,CAAC,EAAE;IACrB,MAAMP,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CAAE,IAAGE,KAAM,sCAAqC,EAAE,uBAAuB,CAAC,CAAC;EACrH;AACF,CAAC;AAEDJ,OAAO,CAACK,kBAAkB,GAAG,CAACH,YAAY,EAAEI,SAAS,EAAEC,aAAa,KAAK;EACvE,IAAID,SAAS,KAAK,EAAE,EAAE;IACpBA,SAAS,GAAG,IAAI;EAClB;EAEAN,OAAO,CAACI,KAAK,CAACF,YAAY,EAAEK,aAAa,CAAC;EAE1C,IAAIC,MAAM,GAAG,IAAI;EACjB,IAAIC,SAAS,GAAGF,aAAa;EAE7B,MAAMG,UAAU,GAAGH,aAAa,CAACI,OAAO,CAAC,GAAG,CAAC;EAC7C,IAAID,UAAU,KAAK,CAAC,CAAC,EAAE;IACrBF,MAAM,GAAGD,aAAa,CAACK,SAAS,CAAC,CAAC,EAAEF,UAAU,CAAC;IAC/CD,SAAS,GAAGF,aAAa,CAACK,SAAS,CAACF,UAAU,GAAG,CAAC,CAAC;EACrD;EAEA,IAAIF,MAAM,KAAK,IAAI,IAAIF,SAAS,KAAK,IAAI,EAAE;IACzC,MAAMT,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CACtC,8EAA8E,EAC9E,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAIM,MAAM,KAAK,KAAK,IAAIF,SAAS,KAAKR,MAAM,EAAE;IAC5C,MAAMD,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CACtC,2EAA2E,EAC3E,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAI,CAACK,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,KAAKF,SAAS,KAAKP,QAAQ,EAAE;IAC/E,MAAMF,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CACtC,gGAAgG,EAChG,gBAAgB,CACjB,CAAC;EACJ;EAEA,IAAII,SAAS,KAAKP,QAAQ,IAAIQ,aAAa,KAAK,OAAO,IAAIC,MAAM,KAAK,OAAO,EAAE;IAC7E,MAAMX,YAAY,CAACM,MAAM,CAACD,YAAY,EAAE,CACtC,sFAAsF,EACtF,gBAAgB,CACjB,CAAC;EACJ;EAEA,OAAO;IAAEI,SAAS;IAAEE,MAAM;IAAEC;EAAU,CAAC;AACzC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}