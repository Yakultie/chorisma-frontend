{"ast":null,"code":"\"use strict\";\n\n// https://drafts.csswg.org/css-color-4/#named-color\nconst namedColors = {\n  __proto__: null,\n  aliceblue: [0xF0, 0xF8, 0xFF],\n  antiquewhite: [0xFA, 0xEB, 0xD7],\n  aqua: [0x00, 0xFF, 0xFF],\n  aquamarine: [0x7F, 0xFF, 0xD4],\n  azure: [0xF0, 0xFF, 0xFF],\n  beige: [0xF5, 0xF5, 0xDC],\n  bisque: [0xFF, 0xE4, 0xC4],\n  black: [0x00, 0x00, 0x00],\n  blanchedalmond: [0xFF, 0xEB, 0xCD],\n  blue: [0x00, 0x00, 0xFF],\n  blueviolet: [0x8A, 0x2B, 0xE2],\n  brown: [0xA5, 0x2A, 0x2A],\n  burlywood: [0xDE, 0xB8, 0x87],\n  cadetblue: [0x5F, 0x9E, 0xA0],\n  chartreuse: [0x7F, 0xFF, 0x00],\n  chocolate: [0xD2, 0x69, 0x1E],\n  coral: [0xFF, 0x7F, 0x50],\n  cornflowerblue: [0x64, 0x95, 0xED],\n  cornsilk: [0xFF, 0xF8, 0xDC],\n  crimson: [0xDC, 0x14, 0x3C],\n  cyan: [0x00, 0xFF, 0xFF],\n  darkblue: [0x00, 0x00, 0x8B],\n  darkcyan: [0x00, 0x8B, 0x8B],\n  darkgoldenrod: [0xB8, 0x86, 0x0B],\n  darkgray: [0xA9, 0xA9, 0xA9],\n  darkgreen: [0x00, 0x64, 0x00],\n  darkgrey: [0xA9, 0xA9, 0xA9],\n  darkkhaki: [0xBD, 0xB7, 0x6B],\n  darkmagenta: [0x8B, 0x00, 0x8B],\n  darkolivegreen: [0x55, 0x6B, 0x2F],\n  darkorange: [0xFF, 0x8C, 0x00],\n  darkorchid: [0x99, 0x32, 0xCC],\n  darkred: [0x8B, 0x00, 0x00],\n  darksalmon: [0xE9, 0x96, 0x7A],\n  darkseagreen: [0x8F, 0xBC, 0x8F],\n  darkslateblue: [0x48, 0x3D, 0x8B],\n  darkslategray: [0x2F, 0x4F, 0x4F],\n  darkslategrey: [0x2F, 0x4F, 0x4F],\n  darkturquoise: [0x00, 0xCE, 0xD1],\n  darkviolet: [0x94, 0x00, 0xD3],\n  deeppink: [0xFF, 0x14, 0x93],\n  deepskyblue: [0x00, 0xBF, 0xFF],\n  dimgray: [0x69, 0x69, 0x69],\n  dimgrey: [0x69, 0x69, 0x69],\n  dodgerblue: [0x1E, 0x90, 0xFF],\n  firebrick: [0xB2, 0x22, 0x22],\n  floralwhite: [0xFF, 0xFA, 0xF0],\n  forestgreen: [0x22, 0x8B, 0x22],\n  fuchsia: [0xFF, 0x00, 0xFF],\n  gainsboro: [0xDC, 0xDC, 0xDC],\n  ghostwhite: [0xF8, 0xF8, 0xFF],\n  gold: [0xFF, 0xD7, 0x00],\n  goldenrod: [0xDA, 0xA5, 0x20],\n  gray: [0x80, 0x80, 0x80],\n  green: [0x00, 0x80, 0x00],\n  greenyellow: [0xAD, 0xFF, 0x2F],\n  grey: [0x80, 0x80, 0x80],\n  honeydew: [0xF0, 0xFF, 0xF0],\n  hotpink: [0xFF, 0x69, 0xB4],\n  indianred: [0xCD, 0x5C, 0x5C],\n  indigo: [0x4B, 0x00, 0x82],\n  ivory: [0xFF, 0xFF, 0xF0],\n  khaki: [0xF0, 0xE6, 0x8C],\n  lavender: [0xE6, 0xE6, 0xFA],\n  lavenderblush: [0xFF, 0xF0, 0xF5],\n  lawngreen: [0x7C, 0xFC, 0x00],\n  lemonchiffon: [0xFF, 0xFA, 0xCD],\n  lightblue: [0xAD, 0xD8, 0xE6],\n  lightcoral: [0xF0, 0x80, 0x80],\n  lightcyan: [0xE0, 0xFF, 0xFF],\n  lightgoldenrodyellow: [0xFA, 0xFA, 0xD2],\n  lightgray: [0xD3, 0xD3, 0xD3],\n  lightgreen: [0x90, 0xEE, 0x90],\n  lightgrey: [0xD3, 0xD3, 0xD3],\n  lightpink: [0xFF, 0xB6, 0xC1],\n  lightsalmon: [0xFF, 0xA0, 0x7A],\n  lightseagreen: [0x20, 0xB2, 0xAA],\n  lightskyblue: [0x87, 0xCE, 0xFA],\n  lightslategray: [0x77, 0x88, 0x99],\n  lightslategrey: [0x77, 0x88, 0x99],\n  lightsteelblue: [0xB0, 0xC4, 0xDE],\n  lightyellow: [0xFF, 0xFF, 0xE0],\n  lime: [0x00, 0xFF, 0x00],\n  limegreen: [0x32, 0xCD, 0x32],\n  linen: [0xFA, 0xF0, 0xE6],\n  magenta: [0xFF, 0x00, 0xFF],\n  maroon: [0x80, 0x00, 0x00],\n  mediumaquamarine: [0x66, 0xCD, 0xAA],\n  mediumblue: [0x00, 0x00, 0xCD],\n  mediumorchid: [0xBA, 0x55, 0xD3],\n  mediumpurple: [0x93, 0x70, 0xDB],\n  mediumseagreen: [0x3C, 0xB3, 0x71],\n  mediumslateblue: [0x7B, 0x68, 0xEE],\n  mediumspringgreen: [0x00, 0xFA, 0x9A],\n  mediumturquoise: [0x48, 0xD1, 0xCC],\n  mediumvioletred: [0xC7, 0x15, 0x85],\n  midnightblue: [0x19, 0x19, 0x70],\n  mintcream: [0xF5, 0xFF, 0xFA],\n  mistyrose: [0xFF, 0xE4, 0xE1],\n  moccasin: [0xFF, 0xE4, 0xB5],\n  navajowhite: [0xFF, 0xDE, 0xAD],\n  navy: [0x00, 0x00, 0x80],\n  oldlace: [0xFD, 0xF5, 0xE6],\n  olive: [0x80, 0x80, 0x00],\n  olivedrab: [0x6B, 0x8E, 0x23],\n  orange: [0xFF, 0xA5, 0x00],\n  orangered: [0xFF, 0x45, 0x00],\n  orchid: [0xDA, 0x70, 0xD6],\n  palegoldenrod: [0xEE, 0xE8, 0xAA],\n  palegreen: [0x98, 0xFB, 0x98],\n  paleturquoise: [0xAF, 0xEE, 0xEE],\n  palevioletred: [0xDB, 0x70, 0x93],\n  papayawhip: [0xFF, 0xEF, 0xD5],\n  peachpuff: [0xFF, 0xDA, 0xB9],\n  peru: [0xCD, 0x85, 0x3F],\n  pink: [0xFF, 0xC0, 0xCB],\n  plum: [0xDD, 0xA0, 0xDD],\n  powderblue: [0xB0, 0xE0, 0xE6],\n  purple: [0x80, 0x00, 0x80],\n  rebeccapurple: [0x66, 0x33, 0x99],\n  red: [0xFF, 0x00, 0x00],\n  rosybrown: [0xBC, 0x8F, 0x8F],\n  royalblue: [0x41, 0x69, 0xE1],\n  saddlebrown: [0x8B, 0x45, 0x13],\n  salmon: [0xFA, 0x80, 0x72],\n  sandybrown: [0xF4, 0xA4, 0x60],\n  seagreen: [0x2E, 0x8B, 0x57],\n  seashell: [0xFF, 0xF5, 0xEE],\n  sienna: [0xA0, 0x52, 0x2D],\n  silver: [0xC0, 0xC0, 0xC0],\n  skyblue: [0x87, 0xCE, 0xEB],\n  slateblue: [0x6A, 0x5A, 0xCD],\n  slategray: [0x70, 0x80, 0x90],\n  slategrey: [0x70, 0x80, 0x90],\n  snow: [0xFF, 0xFA, 0xFA],\n  springgreen: [0x00, 0xFF, 0x7F],\n  steelblue: [0x46, 0x82, 0xB4],\n  tan: [0xD2, 0xB4, 0x8C],\n  teal: [0x00, 0x80, 0x80],\n  thistle: [0xD8, 0xBF, 0xD8],\n  tomato: [0xFF, 0x63, 0x47],\n  turquoise: [0x40, 0xE0, 0xD0],\n  violet: [0xEE, 0x82, 0xEE],\n  wheat: [0xF5, 0xDE, 0xB3],\n  white: [0xFF, 0xFF, 0xFF],\n  whitesmoke: [0xF5, 0xF5, 0xF5],\n  yellow: [0xFF, 0xFF, 0x00],\n  yellowgreen: [0x9A, 0xCD, 0x32]\n};\n\n// Implements some of https://drafts.csswg.org/css-color-4/#resolving-sRGB-values and\n// https://drafts.csswg.org/css-color-4/#serializing-sRGB-values, in a somewhat fragile way since\n// we're not using a real parser/serializer. Attempts to cover:\n// * hex colors\n// * 'rgb()' and 'rgba()' values\n// * named colors\n// * 'transparent'\n\nexports.getSpecifiedColor = color => {\n  const lowercasedColor = color.toLowerCase();\n  if (Object.hasOwn(namedColors, lowercasedColor) || lowercasedColor === \"transparent\") {\n    return lowercasedColor;\n  }\n  return sharedSpecifiedAndComputedAndUsed(color);\n};\nexports.getComputedOrUsedColor = color => {\n  const lowercasedColor = color.toLowerCase();\n  const fromNamedColors = namedColors[lowercasedColor];\n  if (fromNamedColors !== undefined) {\n    return `rgb(${fromNamedColors.join(\", \")})`;\n  }\n  if (lowercasedColor === \"transparent\") {\n    return \"rgba(0, 0, 0, 0)\";\n  }\n  return sharedSpecifiedAndComputedAndUsed(color);\n};\nfunction sharedSpecifiedAndComputedAndUsed(color) {\n  if (/^#[0-9A-Fa-f]{6}$/.test(color) || /^#[0-9A-Fa-f]{3}$/.test(color)) {\n    return hexToRGB(color.slice(1));\n  }\n  if (/^#[0-9A-Fa-f]{8}$/.test(color) || /^#[0-9A-Fa-f]{4}$/.test(color)) {\n    return hexToRGBA(color.slice(1));\n  }\n  if (/^rgba?\\(/.test(color)) {\n    return color.split(\",\").map(s => s.trim()).join(\", \");\n  }\n  return color;\n}\nfunction hexToRGB(color) {\n  if (color.length === 6) {\n    const [r1, r2, g1, g2, b1, b2] = color.split(\"\");\n    return `rgb(${hexesToDecimals([r1, r2], [g1, g2], [b1, b2]).join(\", \")})`;\n  }\n  if (color.length === 3) {\n    const [r1, g1, b1] = color.split(\"\");\n    return `rgb(${hexesToDecimals([r1, r1], [g1, g1], [b1, b1]).join(\", \")})`;\n  }\n  return \"rgb(0, 0, 0)\";\n}\nfunction hexToRGBA(color) {\n  if (color.length === 8) {\n    const [r1, r2, g1, g2, b1, b2, a1, a2] = color.split(\"\");\n    return `rgba(${hexesToDecimals([r1, r2], [g1, g2], [b1, b2]).join(\", \")}, ${hexToPercent(a1, a2)})`;\n  }\n  if (color.length === 4) {\n    const [r1, g1, b1, a1] = color.split(\"\");\n    return `rgba(${hexesToDecimals([r1, r1], [g1, g1], [b1, b1]).join(\", \")}, ${hexToPercent(a1, a1)})`;\n  }\n  return \"rgba(0, 0, 0, 1)\";\n}\nfunction hexToDecimal(d1, d2) {\n  return parseInt(d1, 16) * 16 + parseInt(d2, 16);\n}\nfunction hexesToDecimals() {\n  for (var _len = arguments.length, hexes = new Array(_len), _key = 0; _key < _len; _key++) {\n    hexes[_key] = arguments[_key];\n  }\n  return hexes.map(pair => hexToDecimal(pair[0], pair[1]));\n}\nfunction hexToPercent(d1, d2) {\n  return Math.floor(1000 * hexToDecimal(d1, d2) / 255) / 1000;\n}","map":{"version":3,"names":["namedColors","__proto__","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","exports","getSpecifiedColor","color","lowercasedColor","toLowerCase","Object","hasOwn","sharedSpecifiedAndComputedAndUsed","getComputedOrUsedColor","fromNamedColors","undefined","join","test","hexToRGB","slice","hexToRGBA","split","map","s","trim","length","r1","r2","g1","g2","b1","b2","hexesToDecimals","a1","a2","hexToPercent","hexToDecimal","d1","d2","parseInt","_len","arguments","hexes","Array","_key","pair","Math","floor"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/helpers/colors.js"],"sourcesContent":["\"use strict\";\n\n// https://drafts.csswg.org/css-color-4/#named-color\nconst namedColors = {\n  __proto__: null,\n  aliceblue: [0xF0, 0xF8, 0xFF],\n  antiquewhite: [0xFA, 0xEB, 0xD7],\n  aqua: [0x00, 0xFF, 0xFF],\n  aquamarine: [0x7F, 0xFF, 0xD4],\n  azure: [0xF0, 0xFF, 0xFF],\n  beige: [0xF5, 0xF5, 0xDC],\n  bisque: [0xFF, 0xE4, 0xC4],\n  black: [0x00, 0x00, 0x00],\n  blanchedalmond: [0xFF, 0xEB, 0xCD],\n  blue: [0x00, 0x00, 0xFF],\n  blueviolet: [0x8A, 0x2B, 0xE2],\n  brown: [0xA5, 0x2A, 0x2A],\n  burlywood: [0xDE, 0xB8, 0x87],\n  cadetblue: [0x5F, 0x9E, 0xA0],\n  chartreuse: [0x7F, 0xFF, 0x00],\n  chocolate: [0xD2, 0x69, 0x1E],\n  coral: [0xFF, 0x7F, 0x50],\n  cornflowerblue: [0x64, 0x95, 0xED],\n  cornsilk: [0xFF, 0xF8, 0xDC],\n  crimson: [0xDC, 0x14, 0x3C],\n  cyan: [0x00, 0xFF, 0xFF],\n  darkblue: [0x00, 0x00, 0x8B],\n  darkcyan: [0x00, 0x8B, 0x8B],\n  darkgoldenrod: [0xB8, 0x86, 0x0B],\n  darkgray: [0xA9, 0xA9, 0xA9],\n  darkgreen: [0x00, 0x64, 0x00],\n  darkgrey: [0xA9, 0xA9, 0xA9],\n  darkkhaki: [0xBD, 0xB7, 0x6B],\n  darkmagenta: [0x8B, 0x00, 0x8B],\n  darkolivegreen: [0x55, 0x6B, 0x2F],\n  darkorange: [0xFF, 0x8C, 0x00],\n  darkorchid: [0x99, 0x32, 0xCC],\n  darkred: [0x8B, 0x00, 0x00],\n  darksalmon: [0xE9, 0x96, 0x7A],\n  darkseagreen: [0x8F, 0xBC, 0x8F],\n  darkslateblue: [0x48, 0x3D, 0x8B],\n  darkslategray: [0x2F, 0x4F, 0x4F],\n  darkslategrey: [0x2F, 0x4F, 0x4F],\n  darkturquoise: [0x00, 0xCE, 0xD1],\n  darkviolet: [0x94, 0x00, 0xD3],\n  deeppink: [0xFF, 0x14, 0x93],\n  deepskyblue: [0x00, 0xBF, 0xFF],\n  dimgray: [0x69, 0x69, 0x69],\n  dimgrey: [0x69, 0x69, 0x69],\n  dodgerblue: [0x1E, 0x90, 0xFF],\n  firebrick: [0xB2, 0x22, 0x22],\n  floralwhite: [0xFF, 0xFA, 0xF0],\n  forestgreen: [0x22, 0x8B, 0x22],\n  fuchsia: [0xFF, 0x00, 0xFF],\n  gainsboro: [0xDC, 0xDC, 0xDC],\n  ghostwhite: [0xF8, 0xF8, 0xFF],\n  gold: [0xFF, 0xD7, 0x00],\n  goldenrod: [0xDA, 0xA5, 0x20],\n  gray: [0x80, 0x80, 0x80],\n  green: [0x00, 0x80, 0x00],\n  greenyellow: [0xAD, 0xFF, 0x2F],\n  grey: [0x80, 0x80, 0x80],\n  honeydew: [0xF0, 0xFF, 0xF0],\n  hotpink: [0xFF, 0x69, 0xB4],\n  indianred: [0xCD, 0x5C, 0x5C],\n  indigo: [0x4B, 0x00, 0x82],\n  ivory: [0xFF, 0xFF, 0xF0],\n  khaki: [0xF0, 0xE6, 0x8C],\n  lavender: [0xE6, 0xE6, 0xFA],\n  lavenderblush: [0xFF, 0xF0, 0xF5],\n  lawngreen: [0x7C, 0xFC, 0x00],\n  lemonchiffon: [0xFF, 0xFA, 0xCD],\n  lightblue: [0xAD, 0xD8, 0xE6],\n  lightcoral: [0xF0, 0x80, 0x80],\n  lightcyan: [0xE0, 0xFF, 0xFF],\n  lightgoldenrodyellow: [0xFA, 0xFA, 0xD2],\n  lightgray: [0xD3, 0xD3, 0xD3],\n  lightgreen: [0x90, 0xEE, 0x90],\n  lightgrey: [0xD3, 0xD3, 0xD3],\n  lightpink: [0xFF, 0xB6, 0xC1],\n  lightsalmon: [0xFF, 0xA0, 0x7A],\n  lightseagreen: [0x20, 0xB2, 0xAA],\n  lightskyblue: [0x87, 0xCE, 0xFA],\n  lightslategray: [0x77, 0x88, 0x99],\n  lightslategrey: [0x77, 0x88, 0x99],\n  lightsteelblue: [0xB0, 0xC4, 0xDE],\n  lightyellow: [0xFF, 0xFF, 0xE0],\n  lime: [0x00, 0xFF, 0x00],\n  limegreen: [0x32, 0xCD, 0x32],\n  linen: [0xFA, 0xF0, 0xE6],\n  magenta: [0xFF, 0x00, 0xFF],\n  maroon: [0x80, 0x00, 0x00],\n  mediumaquamarine: [0x66, 0xCD, 0xAA],\n  mediumblue: [0x00, 0x00, 0xCD],\n  mediumorchid: [0xBA, 0x55, 0xD3],\n  mediumpurple: [0x93, 0x70, 0xDB],\n  mediumseagreen: [0x3C, 0xB3, 0x71],\n  mediumslateblue: [0x7B, 0x68, 0xEE],\n  mediumspringgreen: [0x00, 0xFA, 0x9A],\n  mediumturquoise: [0x48, 0xD1, 0xCC],\n  mediumvioletred: [0xC7, 0x15, 0x85],\n  midnightblue: [0x19, 0x19, 0x70],\n  mintcream: [0xF5, 0xFF, 0xFA],\n  mistyrose: [0xFF, 0xE4, 0xE1],\n  moccasin: [0xFF, 0xE4, 0xB5],\n  navajowhite: [0xFF, 0xDE, 0xAD],\n  navy: [0x00, 0x00, 0x80],\n  oldlace: [0xFD, 0xF5, 0xE6],\n  olive: [0x80, 0x80, 0x00],\n  olivedrab: [0x6B, 0x8E, 0x23],\n  orange: [0xFF, 0xA5, 0x00],\n  orangered: [0xFF, 0x45, 0x00],\n  orchid: [0xDA, 0x70, 0xD6],\n  palegoldenrod: [0xEE, 0xE8, 0xAA],\n  palegreen: [0x98, 0xFB, 0x98],\n  paleturquoise: [0xAF, 0xEE, 0xEE],\n  palevioletred: [0xDB, 0x70, 0x93],\n  papayawhip: [0xFF, 0xEF, 0xD5],\n  peachpuff: [0xFF, 0xDA, 0xB9],\n  peru: [0xCD, 0x85, 0x3F],\n  pink: [0xFF, 0xC0, 0xCB],\n  plum: [0xDD, 0xA0, 0xDD],\n  powderblue: [0xB0, 0xE0, 0xE6],\n  purple: [0x80, 0x00, 0x80],\n  rebeccapurple: [0x66, 0x33, 0x99],\n  red: [0xFF, 0x00, 0x00],\n  rosybrown: [0xBC, 0x8F, 0x8F],\n  royalblue: [0x41, 0x69, 0xE1],\n  saddlebrown: [0x8B, 0x45, 0x13],\n  salmon: [0xFA, 0x80, 0x72],\n  sandybrown: [0xF4, 0xA4, 0x60],\n  seagreen: [0x2E, 0x8B, 0x57],\n  seashell: [0xFF, 0xF5, 0xEE],\n  sienna: [0xA0, 0x52, 0x2D],\n  silver: [0xC0, 0xC0, 0xC0],\n  skyblue: [0x87, 0xCE, 0xEB],\n  slateblue: [0x6A, 0x5A, 0xCD],\n  slategray: [0x70, 0x80, 0x90],\n  slategrey: [0x70, 0x80, 0x90],\n  snow: [0xFF, 0xFA, 0xFA],\n  springgreen: [0x00, 0xFF, 0x7F],\n  steelblue: [0x46, 0x82, 0xB4],\n  tan: [0xD2, 0xB4, 0x8C],\n  teal: [0x00, 0x80, 0x80],\n  thistle: [0xD8, 0xBF, 0xD8],\n  tomato: [0xFF, 0x63, 0x47],\n  turquoise: [0x40, 0xE0, 0xD0],\n  violet: [0xEE, 0x82, 0xEE],\n  wheat: [0xF5, 0xDE, 0xB3],\n  white: [0xFF, 0xFF, 0xFF],\n  whitesmoke: [0xF5, 0xF5, 0xF5],\n  yellow: [0xFF, 0xFF, 0x00],\n  yellowgreen: [0x9A, 0xCD, 0x32]\n};\n\n// Implements some of https://drafts.csswg.org/css-color-4/#resolving-sRGB-values and\n// https://drafts.csswg.org/css-color-4/#serializing-sRGB-values, in a somewhat fragile way since\n// we're not using a real parser/serializer. Attempts to cover:\n// * hex colors\n// * 'rgb()' and 'rgba()' values\n// * named colors\n// * 'transparent'\n\nexports.getSpecifiedColor = color => {\n  const lowercasedColor = color.toLowerCase();\n  if (Object.hasOwn(namedColors, lowercasedColor) || lowercasedColor === \"transparent\") {\n    return lowercasedColor;\n  }\n\n  return sharedSpecifiedAndComputedAndUsed(color);\n};\n\nexports.getComputedOrUsedColor = color => {\n  const lowercasedColor = color.toLowerCase();\n  const fromNamedColors = namedColors[lowercasedColor];\n  if (fromNamedColors !== undefined) {\n    return `rgb(${fromNamedColors.join(\", \")})`;\n  }\n\n  if (lowercasedColor === \"transparent\") {\n    return \"rgba(0, 0, 0, 0)\";\n  }\n\n  return sharedSpecifiedAndComputedAndUsed(color);\n};\n\nfunction sharedSpecifiedAndComputedAndUsed(color) {\n  if (/^#[0-9A-Fa-f]{6}$/.test(color) || /^#[0-9A-Fa-f]{3}$/.test(color)) {\n    return hexToRGB(color.slice(1));\n  }\n\n  if (/^#[0-9A-Fa-f]{8}$/.test(color) || /^#[0-9A-Fa-f]{4}$/.test(color)) {\n    return hexToRGBA(color.slice(1));\n  }\n\n  if (/^rgba?\\(/.test(color)) {\n    return color.split(\",\").map(s => s.trim()).join(\", \");\n  }\n\n  return color;\n}\n\nfunction hexToRGB(color) {\n  if (color.length === 6) {\n    const [r1, r2, g1, g2, b1, b2] = color.split(\"\");\n\n    return `rgb(${hexesToDecimals([r1, r2], [g1, g2], [b1, b2]).join(\", \")})`;\n  }\n\n  if (color.length === 3) {\n    const [r1, g1, b1] = color.split(\"\");\n\n    return `rgb(${hexesToDecimals([r1, r1], [g1, g1], [b1, b1]).join(\", \")})`;\n  }\n\n  return \"rgb(0, 0, 0)\";\n}\n\nfunction hexToRGBA(color) {\n  if (color.length === 8) {\n    const [r1, r2, g1, g2, b1, b2, a1, a2] = color.split(\"\");\n\n    return `rgba(${hexesToDecimals([r1, r2], [g1, g2], [b1, b2]).join(\", \")}, ${hexToPercent(a1, a2)})`;\n  }\n\n  if (color.length === 4) {\n    const [r1, g1, b1, a1] = color.split(\"\");\n\n    return `rgba(${hexesToDecimals([r1, r1], [g1, g1], [b1, b1]).join(\", \")}, ${hexToPercent(a1, a1)})`;\n  }\n\n  return \"rgba(0, 0, 0, 1)\";\n}\n\nfunction hexToDecimal(d1, d2) {\n  return parseInt(d1, 16) * 16 + parseInt(d2, 16);\n}\n\nfunction hexesToDecimals(...hexes) {\n  return hexes.map(pair => hexToDecimal(pair[0], pair[1]));\n}\n\nfunction hexToPercent(d1, d2) {\n  return Math.floor(1000 * hexToDecimal(d1, d2) / 255) / 1000;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}