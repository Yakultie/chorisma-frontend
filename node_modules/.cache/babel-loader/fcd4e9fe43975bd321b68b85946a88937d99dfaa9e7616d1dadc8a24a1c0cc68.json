{"ast":null,"code":"//.CommonJS\nvar CSSOM = {\n  CSSRule: require(\"./CSSRule\").CSSRule,\n  parse: require('./parse').parse\n};\n///CommonJS\n\n/**\n * @constructor\n * @see https://drafts.csswg.org/cssom/#the-cssgroupingrule-interface\n */\nCSSOM.CSSGroupingRule = function CSSGroupingRule() {\n  CSSOM.CSSRule.call(this);\n  this.cssRules = [];\n};\nCSSOM.CSSGroupingRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSGroupingRule.prototype.constructor = CSSOM.CSSGroupingRule;\n\n/**\n * Used to insert a new CSS rule to a list of CSS rules.\n *\n * @example\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *   cssGroupingRule.insertRule(\"img{border:none;}\", 1)\n *   -> 1\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}img{border:none;}\"\n *\n * @param {string} rule\n * @param {number} [index]\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-insertrule\n * @return {number} The index within the grouping rule's collection of the newly inserted rule.\n */\nCSSOM.CSSGroupingRule.prototype.insertRule = function insertRule(rule, index) {\n  if (index < 0 || index > this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n  var cssRule = CSSOM.parse(rule).cssRules[0];\n  cssRule.parentRule = this;\n  this.cssRules.splice(index, 0, cssRule);\n  return index;\n};\n\n/**\n * Used to delete a rule from the grouping rule.\n *\n *   cssGroupingRule.cssText\n *   -> \"img{border:none;}body{margin:0;}\"\n *   cssGroupingRule.deleteRule(0)\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the grouping rule's rule list of the rule to remove.\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-deleterule\n */\nCSSOM.CSSGroupingRule.prototype.deleteRule = function deleteRule(index) {\n  if (index < 0 || index >= this.cssRules.length) {\n    throw new RangeError(\"INDEX_SIZE_ERR\");\n  }\n  this.cssRules.splice(index, 1)[0].parentRule = null;\n};\n\n//.CommonJS\nexports.CSSGroupingRule = CSSOM.CSSGroupingRule;\n///CommonJS","map":{"version":3,"names":["CSSOM","CSSRule","require","parse","CSSGroupingRule","call","cssRules","prototype","constructor","insertRule","rule","index","length","RangeError","cssRule","parentRule","splice","deleteRule","exports"],"sources":["/Users/bernard/Downloads/my-app/node_modules/rrweb-cssom/lib/CSSGroupingRule.js"],"sourcesContent":["//.CommonJS\nvar CSSOM = {\n\tCSSRule: require(\"./CSSRule\").CSSRule,\n\tparse: require('./parse').parse\n};\n///CommonJS\n\n\n/**\n * @constructor\n * @see https://drafts.csswg.org/cssom/#the-cssgroupingrule-interface\n */\nCSSOM.CSSGroupingRule = function CSSGroupingRule() {\n\tCSSOM.CSSRule.call(this);\n\tthis.cssRules = [];\n};\n\nCSSOM.CSSGroupingRule.prototype = new CSSOM.CSSRule();\nCSSOM.CSSGroupingRule.prototype.constructor = CSSOM.CSSGroupingRule;\n\n\n/**\n * Used to insert a new CSS rule to a list of CSS rules.\n *\n * @example\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *   cssGroupingRule.insertRule(\"img{border:none;}\", 1)\n *   -> 1\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}img{border:none;}\"\n *\n * @param {string} rule\n * @param {number} [index]\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-insertrule\n * @return {number} The index within the grouping rule's collection of the newly inserted rule.\n */\n CSSOM.CSSGroupingRule.prototype.insertRule = function insertRule(rule, index) {\n\tif (index < 0 || index > this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tvar cssRule = CSSOM.parse(rule).cssRules[0];\n\tcssRule.parentRule = this;\n\tthis.cssRules.splice(index, 0, cssRule);\n\treturn index;\n};\n\n/**\n * Used to delete a rule from the grouping rule.\n *\n *   cssGroupingRule.cssText\n *   -> \"img{border:none;}body{margin:0;}\"\n *   cssGroupingRule.deleteRule(0)\n *   cssGroupingRule.cssText\n *   -> \"body{margin:0;}\"\n *\n * @param {number} index within the grouping rule's rule list of the rule to remove.\n * @see https://www.w3.org/TR/cssom-1/#dom-cssgroupingrule-deleterule\n */\n CSSOM.CSSGroupingRule.prototype.deleteRule = function deleteRule(index) {\n\tif (index < 0 || index >= this.cssRules.length) {\n\t\tthrow new RangeError(\"INDEX_SIZE_ERR\");\n\t}\n\tthis.cssRules.splice(index, 1)[0].parentRule = null;\n};\n\n//.CommonJS\nexports.CSSGroupingRule = CSSOM.CSSGroupingRule;\n///CommonJS\n"],"mappings":"AAAA;AACA,IAAIA,KAAK,GAAG;EACXC,OAAO,EAAEC,OAAO,CAAC,WAAW,CAAC,CAACD,OAAO;EACrCE,KAAK,EAAED,OAAO,CAAC,SAAS,CAAC,CAACC;AAC3B,CAAC;AACD;;AAGA;AACA;AACA;AACA;AACAH,KAAK,CAACI,eAAe,GAAG,SAASA,eAAeA,CAAA,EAAG;EAClDJ,KAAK,CAACC,OAAO,CAACI,IAAI,CAAC,IAAI,CAAC;EACxB,IAAI,CAACC,QAAQ,GAAG,EAAE;AACnB,CAAC;AAEDN,KAAK,CAACI,eAAe,CAACG,SAAS,GAAG,IAAIP,KAAK,CAACC,OAAO,CAAC,CAAC;AACrDD,KAAK,CAACI,eAAe,CAACG,SAAS,CAACC,WAAW,GAAGR,KAAK,CAACI,eAAe;;AAGnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCJ,KAAK,CAACI,eAAe,CAACG,SAAS,CAACE,UAAU,GAAG,SAASA,UAAUA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9E,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,IAAI,CAACL,QAAQ,CAACM,MAAM,EAAE;IAC9C,MAAM,IAAIC,UAAU,CAAC,gBAAgB,CAAC;EACvC;EACA,IAAIC,OAAO,GAAGd,KAAK,CAACG,KAAK,CAACO,IAAI,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAAC;EAC3CQ,OAAO,CAACC,UAAU,GAAG,IAAI;EACzB,IAAI,CAACT,QAAQ,CAACU,MAAM,CAACL,KAAK,EAAE,CAAC,EAAEG,OAAO,CAAC;EACvC,OAAOH,KAAK;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCX,KAAK,CAACI,eAAe,CAACG,SAAS,CAACU,UAAU,GAAG,SAASA,UAAUA,CAACN,KAAK,EAAE;EACxE,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,IAAI,IAAI,CAACL,QAAQ,CAACM,MAAM,EAAE;IAC/C,MAAM,IAAIC,UAAU,CAAC,gBAAgB,CAAC;EACvC;EACA,IAAI,CAACP,QAAQ,CAACU,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACI,UAAU,GAAG,IAAI;AACpD,CAAC;;AAED;AACAG,OAAO,CAACd,eAAe,GAAGJ,KAAK,CAACI,eAAe;AAC/C"},"metadata":{},"sourceType":"script","externalDependencies":[]}