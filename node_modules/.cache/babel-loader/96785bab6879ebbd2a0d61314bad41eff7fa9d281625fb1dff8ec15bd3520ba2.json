{"ast":null,"code":"\"use strict\";\n\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst FileList = require(\"../generated/FileList\");\nconst Decimal = require(\"decimal.js\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst {\n  mixin\n} = require(\"../../utils\");\nconst {\n  domSymbolTree,\n  cloningSteps\n} = require(\"../helpers/internal-constants\");\nconst {\n  getLabelsForLabelable,\n  formOwner\n} = require(\"../helpers/form-controls\");\nconst {\n  fireAnEvent\n} = require(\"../helpers/events\");\nconst {\n  isDisabled,\n  isValidEmailAddress,\n  isValidAbsoluteURL,\n  sanitizeValueByType\n} = require(\"../helpers/form-controls\");\nconst {\n  asciiCaseInsensitiveMatch,\n  asciiLowercase,\n  parseFloatingPointNumber,\n  splitOnCommas\n} = require(\"../helpers/strings\");\nconst {\n  isDate\n} = require(\"../helpers/dates-and-times\");\nconst {\n  convertStringToNumberByType,\n  convertStringToDateByType,\n  serializeDateByType,\n  convertNumberToStringByType\n} = require(\"../helpers/number-and-date-inputs\");\nconst filesSymbol = Symbol(\"files\");\n\n// https://html.spec.whatwg.org/multipage/input.html#attr-input-type\nconst inputAllowedTypes = new Set([\"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\", \"file\", \"submit\", \"image\", \"reset\", \"button\"]);\n\n// https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\n\nconst variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"url\", \"tel\", \"password\"]);\nconst numericTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\"]);\nconst applicableTypesForIDLMember = {\n  valueAsDate: new Set([\"date\", \"month\", \"week\", \"time\"]),\n  valueAsNumber: numericTypes,\n  select: new Set([\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"color\", \"file\"]),\n  selectionStart: variableLengthSelectionAllowedTypes,\n  selectionEnd: variableLengthSelectionAllowedTypes,\n  selectionDirection: variableLengthSelectionAllowedTypes,\n  setRangeText: variableLengthSelectionAllowedTypes,\n  setSelectionRange: variableLengthSelectionAllowedTypes,\n  stepDown: numericTypes,\n  stepUp: numericTypes\n};\nconst lengthPatternSizeTypes = new Set([\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]);\nconst readonlyTypes = new Set([...lengthPatternSizeTypes, \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\"]);\nconst applicableTypesForContentAttribute = {\n  list: new Set([\"text\", \"search\", \"url\", \"tel\", \"email\", ...numericTypes, \"color\"]),\n  max: numericTypes,\n  maxlength: lengthPatternSizeTypes,\n  min: numericTypes,\n  minlength: lengthPatternSizeTypes,\n  multiple: new Set([\"email\", \"file\"]),\n  pattern: lengthPatternSizeTypes,\n  readonly: readonlyTypes,\n  required: new Set([...readonlyTypes, \"checkbox\", \"radio\", \"file\"]),\n  step: numericTypes\n};\nconst valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nconst valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n  if (type === \"file\") {\n    return \"filename\";\n  }\n  return \"value\";\n}\nfunction getTypeFromAttribute(typeAttribute) {\n  if (typeof typeAttribute !== \"string\") {\n    return \"text\";\n  }\n  const type = asciiLowercase(typeAttribute);\n  return inputAllowedTypes.has(type) ? type : \"text\";\n}\nclass HTMLInputElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._value = \"\";\n    this._dirtyValue = false;\n    this._checkedness = false;\n    this._dirtyCheckedness = false;\n    this._preCheckedRadioState = null;\n    this._legacyActivationBehaviorPreviousIndeterminateState = false;\n    this.indeterminate = false;\n    this._customValidityErrorMessage = \"\";\n    this._labels = null;\n    this._hasActivationBehavior = true;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n  get _convertStringToNumber() {\n    return convertStringToNumberByType[this.type];\n  }\n  get _convertNumberToString() {\n    return convertNumberToStringByType[this.type];\n  }\n  get _convertDateToString() {\n    return serializeDateByType[this.type];\n  }\n  get _convertStringToDate() {\n    return convertStringToDateByType[this.type];\n  }\n  _isStepAligned(v) {\n    return new Decimal(v).minus(this._stepBase).modulo(this._allowedValueStep).isZero();\n  }\n\n  // Returns a Decimal.\n  _stepAlign(v, roundUp) {\n    const allowedValueStep = this._allowedValueStep;\n    const stepBase = this._stepBase;\n    return new Decimal(v).minus(stepBase).toNearest(allowedValueStep, roundUp ? Decimal.ROUND_UP : Decimal.ROUND_DOWN).add(stepBase);\n  }\n\n  // For <input>, https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-value\n  // is a simple value that is gotten and set, not computed.\n  _getValue() {\n    return this._value;\n  }\n  _legacyPreActivationBehavior() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n      this._legacyActivationBehaviorPreviousIndeterminateState = this.indeterminate;\n      this.indeterminate = false;\n    } else if (this.type === \"radio\") {\n      this._preCheckedRadioState = this.checked;\n      this.checked = true;\n    }\n  }\n  _legacyCanceledActivationBehavior() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n      this.indeterminate = this._legacyActivationBehaviorPreviousIndeterminateState;\n    } else if (this.type === \"radio\") {\n      if (this._preCheckedRadioState !== null) {\n        this.checked = this._preCheckedRadioState;\n        this._preCheckedRadioState = null;\n      }\n    }\n  }\n  _activationBehavior(event) {\n    if (!this._mutable && this.type !== \"checkbox\" && this.type !== \"radio\") {\n      return;\n    }\n    const {\n      form\n    } = this;\n    if (this.type === \"checkbox\" || this.type === \"radio\" && !this._preCheckedRadioState) {\n      if (this.isConnected) {\n        fireAnEvent(\"input\", this, undefined, {\n          bubbles: true\n        });\n        fireAnEvent(\"change\", this, undefined, {\n          bubbles: true\n        });\n      }\n    } else if (form && this.type === \"image\") {\n      // https://html.spec.whatwg.org/multipage/input.html#image-button-state-(type=image):input-activation-behavior\n\n      // TODO: if/when layout is implemented, record the selected coordinate at the start of dispatch and use it here,\n      // rather than relying on these getters that just mirror pageX/Y outside of dispatch\n      this._selectedCoordinate = {\n        x: event.offsetX,\n        y: event.offsetY\n      };\n      form._doRequestSubmit(this);\n    } else if (form && this.type === \"submit\") {\n      form._doRequestSubmit(this);\n    } else if (form && this.type === \"reset\") {\n      form._doReset();\n    }\n  }\n  _attrModified(name, value, oldVal) {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (!this._dirtyValue && name === \"value\") {\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    }\n    if (!this._dirtyCheckedness && name === \"checked\") {\n      this._checkedness = wrapper.defaultChecked;\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n    if (name === \"name\" || name === \"type\") {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n    if (name === \"type\") {\n      const prevType = getTypeFromAttribute(oldVal);\n      const curType = getTypeFromAttribute(value);\n      // When an input element's type attribute changes stateâ€¦\n      if (prevType !== curType) {\n        const prevValueMode = valueAttributeMode(prevType);\n        const curValueMode = valueAttributeMode(curType);\n        if (prevValueMode === \"value\" && this._value !== \"\" && (curValueMode === \"default\" || curValueMode === \"default/on\")) {\n          this.setAttributeNS(null, \"value\", this._value);\n        } else if (prevValueMode !== \"value\" && curValueMode === \"value\") {\n          this._value = this.getAttributeNS(null, \"value\") || \"\";\n          this._dirtyValue = false;\n        } else if (prevValueMode !== \"filename\" && curValueMode === \"filename\") {\n          this._value = \"\";\n        }\n        this._signalATypeChange();\n        this._value = sanitizeValueByType(this, this._value);\n        const previouslySelectable = this._idlMemberApplies(\"setRangeText\", prevType);\n        const nowSelectable = this._idlMemberApplies(\"setRangeText\", curType);\n        if (!previouslySelectable && nowSelectable) {\n          this._selectionStart = 0;\n          this._selectionEnd = 0;\n          this._selectionDirection = \"none\";\n        }\n      }\n    }\n    super._attrModified(name, value, oldVal);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#signal-a-type-change\n  _signalATypeChange() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  _formReset() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    this._dirtyValue = false;\n    this._checkedness = wrapper.defaultChecked;\n    this._dirtyCheckedness = false;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  _changedFormOwner() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  get _otherRadioGroupElements() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    const root = this._radioButtonGroupRoot;\n    if (!root) {\n      return [];\n    }\n    const result = [];\n    const descendants = domSymbolTree.treeIterator(root);\n    for (const candidate of descendants) {\n      if (candidate._radioButtonGroupRoot !== root) {\n        continue;\n      }\n      const candidateWrapper = idlUtils.wrapperForImpl(candidate);\n      if (!candidateWrapper.name || candidateWrapper.name !== wrapper.name) {\n        continue;\n      }\n      if (candidate !== this) {\n        result.push(candidate);\n      }\n    }\n    return result;\n  }\n  _removeOtherRadioCheckedness() {\n    for (const radioGroupElement of this._otherRadioGroupElements) {\n      radioGroupElement._checkedness = false;\n    }\n  }\n  get _radioButtonGroupRoot() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (this.type !== \"radio\" || !wrapper.name) {\n      return null;\n    }\n    let e = domSymbolTree.parent(this);\n    while (e) {\n      // root node of this home sub tree\n      // or the form element we belong to\n      if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n  _someInRadioGroup(name) {\n    if (this[name]) {\n      return true;\n    }\n    return this._otherRadioGroupElements.some(radioGroupElement => radioGroupElement[name]);\n  }\n  get _mutable() {\n    return !isDisabled(this) && !this._hasAttributeAndApplies(\"readonly\");\n  }\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n  get form() {\n    return formOwner(this);\n  }\n  get checked() {\n    return this._checkedness;\n  }\n  set checked(checked) {\n    this._checkedness = Boolean(checked);\n    this._dirtyCheckedness = true;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n  get value() {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        return this._getValue();\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      case \"default\":\n        {\n          const attr = this.getAttributeNS(null, \"value\");\n          return attr !== null ? attr : \"\";\n        }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default/on\":\n        {\n          const attr = this.getAttributeNS(null, \"value\");\n          return attr !== null ? attr : \"on\";\n        }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n  set value(val) {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        {\n          const oldValue = this._value;\n          this._value = sanitizeValueByType(this, val);\n          this._dirtyValue = true;\n          if (oldValue !== this._value) {\n            this._selectionStart = this._selectionEnd = this._getValueLength();\n            this._selectionDirection = \"none\";\n          }\n          break;\n        }\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default\":\n      case \"default/on\":\n        this.setAttributeNS(null, \"value\", val);\n        break;\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        if (val === \"\") {\n          this.files.length = 0;\n        } else {\n          throw DOMException.create(this._globalObject, [\"This input element accepts a filename, which may only be programmatically set to the empty string.\", \"InvalidStateError\"]);\n        }\n        break;\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-valueasdate\n  get valueAsDate() {\n    if (!this._idlMemberApplies(\"valueAsDate\")) {\n      return null;\n    }\n    const window = this._ownerDocument._defaultView;\n    const convertedValue = this._convertStringToDate(this._value);\n    if (convertedValue instanceof Date) {\n      return new window.Date(convertedValue.getTime());\n    }\n    return null;\n  }\n  set valueAsDate(v) {\n    if (!this._idlMemberApplies(\"valueAsDate\")) {\n      throw DOMException.create(this._globalObject, [\"Failed to set the 'valueAsDate' property on 'HTMLInputElement': This input element does not support Date \" + \"values.\", \"InvalidStateError\"]);\n    }\n    if (v !== null && !isDate(v)) {\n      throw new TypeError(\"Failed to set the 'valueAsDate' property on 'HTMLInputElement': The provided value is \" + \"not a Date.\");\n    }\n    if (v === null || isNaN(v)) {\n      this._value = \"\";\n      return;\n    }\n    this._value = this._convertDateToString(v);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-valueasnumber\n  get valueAsNumber() {\n    if (!this._idlMemberApplies(\"valueAsNumber\")) {\n      return NaN;\n    }\n    const parsedValue = this._convertStringToNumber(this._value);\n    return parsedValue !== null ? parsedValue : NaN;\n  }\n  set valueAsNumber(v) {\n    if (!isFinite(v)) {\n      throw new TypeError(\"Failed to set infinite value as Number\");\n    }\n    if (!this._idlMemberApplies(\"valueAsNumber\")) {\n      throw DOMException.create(this._globalObject, [\"Failed to set the 'valueAsNumber' property on 'HTMLInputElement': This input element does not support \" + \"Number values.\", \"InvalidStateError\"]);\n    }\n    this._value = this._convertNumberToString(v);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-stepup\n  _stepUpdate(n, isUp) {\n    const methodName = isUp ? \"stepUp\" : \"stepDown\";\n    if (!this._idlMemberApplies(methodName)) {\n      throw DOMException.create(this._globalObject, [`Failed to invoke '${methodName}' method on 'HTMLInputElement': ` + \"This input element does not support Number values.\", \"InvalidStateError\"]);\n    }\n    const allowedValueStep = this._allowedValueStep;\n    if (allowedValueStep === null) {\n      throw DOMException.create(this._globalObject, [`Failed to invoke '${methodName}' method on 'HTMLInputElement': ` + \"This input element does not support value step.\", \"InvalidStateError\"]);\n    }\n    const min = this._minimum;\n    const max = this._maximum;\n    if (min !== null && max !== null) {\n      if (min > max) {\n        return;\n      }\n      const candidateStepValue = this._stepAlign(Decimal.add(min, allowedValueStep), /* roundUp = */false);\n      if (candidateStepValue.lt(min) || candidateStepValue.gt(max)) {\n        return;\n      }\n    }\n    let value = 0;\n    try {\n      value = this.valueAsNumber;\n      if (isNaN(value)) {\n        // Empty value is parsed as NaN.\n        value = 0;\n      }\n    } catch (error) {\n      // Step 5. Default value is 0.\n    }\n    value = new Decimal(value);\n    const valueBeforeStepping = value;\n    if (!this._isStepAligned(value)) {\n      value = this._stepAlign(value, /* roundUp = */isUp);\n    } else {\n      let delta = Decimal.mul(n, allowedValueStep);\n      if (!isUp) {\n        delta = delta.neg();\n      }\n      value = value.add(delta);\n    }\n    if (min !== null && value.lt(min)) {\n      value = this._stepAlign(min, /* roundUp = */true);\n    }\n    if (max !== null && value.gt(max)) {\n      value = this._stepAlign(max, /* roundUp = */false);\n    }\n    if (isUp ? value.lt(valueBeforeStepping) : value.gt(valueBeforeStepping)) {\n      return;\n    }\n    this._value = this._convertNumberToString(value.toNumber());\n  }\n  stepDown() {\n    let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return this._stepUpdate(n, false);\n  }\n  stepUp() {\n    let n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return this._stepUpdate(n, true);\n  }\n  get files() {\n    if (this.type === \"file\") {\n      this[filesSymbol] ||= FileList.createImpl(this._globalObject);\n    } else {\n      this[filesSymbol] = null;\n    }\n    return this[filesSymbol];\n  }\n  set files(value) {\n    if (this.type === \"file\" && value !== null) {\n      this[filesSymbol] = value;\n    }\n  }\n  get type() {\n    const typeAttribute = this.getAttributeNS(null, \"type\");\n    return getTypeFromAttribute(typeAttribute);\n  }\n  set type(type) {\n    this.setAttributeNS(null, \"type\", type);\n  }\n  _dispatchSelectEvent() {\n    setTimeout(() => fireAnEvent(\"select\", this, undefined, {\n      bubbles: true,\n      cancelable: false\n    }), 0);\n  }\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n  select() {\n    if (!this._idlMemberApplies(\"select\")) {\n      return;\n    }\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n  get selectionStart() {\n    if (!this._idlMemberApplies(\"selectionStart\")) {\n      return null;\n    }\n    return this._selectionStart;\n  }\n  set selectionStart(start) {\n    if (!this._idlMemberApplies(\"selectionStart\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n  get selectionEnd() {\n    if (!this._idlMemberApplies(\"selectionEnd\")) {\n      return null;\n    }\n    return this._selectionEnd;\n  }\n  set selectionEnd(end) {\n    if (!this._idlMemberApplies(\"selectionEnd\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n  get selectionDirection() {\n    if (!this._idlMemberApplies(\"selectionDirection\")) {\n      return null;\n    }\n    return this._selectionDirection;\n  }\n  set selectionDirection(dir) {\n    if (!this._idlMemberApplies(\"selectionDirection\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n  setSelectionRange(start, end, dir) {\n    if (!this._idlMemberApplies(\"setSelectionRange\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n  setRangeText(repl, start, end) {\n    let selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n    if (!this._idlMemberApplies(\"setRangeText\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n    this.value = val.slice(0, start) + repl + val.slice(end);\n    const newEnd = start + repl.length;\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else {\n      // preserve\n      const delta = repl.length - (end - start);\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-list-attribute\n  get list() {\n    const id = this._getAttributeIfApplies(\"list\");\n    if (!id) {\n      return null;\n    }\n    const el = this.getRootNode({}).getElementById(id);\n    if (el && el.localName === \"datalist\") {\n      return el;\n    }\n    return null;\n  }\n\n  // Reflected IDL attribute does not care about whether the content attribute applies.\n  get maxLength() {\n    if (!this.hasAttributeNS(null, \"maxlength\")) {\n      return 524288; // stole this from chrome\n    }\n\n    return parseInt(this.getAttributeNS(null, \"maxlength\"));\n  }\n  set maxLength(value) {\n    if (value < 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"maxlength\", String(value));\n  }\n  get minLength() {\n    if (!this.hasAttributeNS(null, \"minlength\")) {\n      return 0;\n    }\n    return parseInt(this.getAttributeNS(null, \"minlength\"));\n  }\n  set minLength(value) {\n    if (value < 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"minlength\", String(value));\n  }\n  get size() {\n    if (!this.hasAttributeNS(null, \"size\")) {\n      return 20;\n    }\n    return parseInt(this.getAttributeNS(null, \"size\"));\n  }\n  set size(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"size\", String(value));\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n  get _minimum() {\n    let min = this._defaultMinimum;\n    const attr = this._getAttributeIfApplies(\"min\");\n    if (attr !== null && this._convertStringToNumber !== undefined) {\n      const parsed = this._convertStringToNumber(attr);\n      if (parsed !== null) {\n        min = parsed;\n      }\n    }\n    return min;\n  }\n  get _maximum() {\n    let max = this._defaultMaximum;\n    const attr = this._getAttributeIfApplies(\"max\");\n    if (attr !== null && this._convertStringToNumber !== undefined) {\n      const parsed = this._convertStringToNumber(attr);\n      if (parsed !== null) {\n        max = parsed;\n      }\n    }\n    return max;\n  }\n  get _defaultMinimum() {\n    if (this.type === \"range\") {\n      return 0;\n    }\n    return null;\n  }\n  get _defaultMaximum() {\n    if (this.type === \"range\") {\n      return 100;\n    }\n    return null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step\n  get _allowedValueStep() {\n    if (!this._contentAttributeApplies(\"step\")) {\n      return null;\n    }\n    const attr = this.getAttributeNS(null, \"step\");\n    if (attr === null) {\n      return this._defaultStep * this._stepScaleFactor;\n    }\n    if (asciiCaseInsensitiveMatch(attr, \"any\")) {\n      return null;\n    }\n    const parsedStep = parseFloatingPointNumber(attr);\n    if (parsedStep === null || parsedStep <= 0) {\n      return this._defaultStep * this._stepScaleFactor;\n    }\n    return parsedStep * this._stepScaleFactor;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n  get _stepScaleFactor() {\n    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n    switch (this.type) {\n      case \"week\":\n        return 7 * dayInMilliseconds;\n      case \"date\":\n        return dayInMilliseconds;\n      case \"datetime-local\":\n      case \"datetime\":\n      case \"time\":\n        return 1000;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n  get _defaultStep() {\n    if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n      return 60;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n  get _stepBase() {\n    if (this._hasAttributeAndApplies(\"min\")) {\n      const min = this._convertStringToNumber(this.getAttributeNS(null, \"min\"));\n      if (min !== null) {\n        return min;\n      }\n    }\n    if (this.hasAttributeNS(null, \"value\")) {\n      const value = this._convertStringToNumber(this.getAttributeNS(null, \"value\"));\n      if (value !== null) {\n        return value;\n      }\n    }\n    if (this._defaultStepBase !== null) {\n      return this._defaultStepBase;\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n  get _defaultStepBase() {\n    if (this.type === \"week\") {\n      // The start of week 1970-W01\n      return -259200000;\n    }\n    return null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#common-input-element-attributes\n  // When an attribute doesn't apply to an input element, user agents must ignore the attribute.\n  _contentAttributeApplies(attribute) {\n    return applicableTypesForContentAttribute[attribute].has(this.type);\n  }\n  _hasAttributeAndApplies(attribute) {\n    return this._contentAttributeApplies(attribute) && this.hasAttributeNS(null, attribute);\n  }\n  _getAttributeIfApplies(attribute) {\n    if (this._contentAttributeApplies(attribute)) {\n      return this.getAttributeNS(null, attribute);\n    }\n    return null;\n  }\n  _idlMemberApplies(member) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.type;\n    return applicableTypesForIDLMember[member].has(type);\n  }\n  _barredFromConstraintValidationSpecialization() {\n    // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n    // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n    // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n    const willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]);\n    // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n    const readOnly = this._hasAttributeAndApplies(\"readonly\");\n\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return willNotValidateTypes.has(this.type) || readOnly;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-required\n  get _required() {\n    return this._hasAttributeAndApplies(\"required\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#has-a-periodic-domain\n  get _hasAPeriodicDomain() {\n    return this.type === \"time\";\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#has-a-reversed-range\n  get _hasAReversedRange() {\n    return this._hasAPeriodicDomain && this._maximum < this._minimum;\n  }\n  get validity() {\n    if (!this._validity) {\n      // Constraint validation: When an element has a reversed range, and the result of applying\n      // the algorithm to convert a string to a number to the string given by the element's value\n      // is a number, and the number obtained from that algorithm is more than the maximum and less\n      // than the minimum, the element is simultaneously suffering from an underflow and suffering\n      // from an overflow.\n      const reversedRangeSufferingOverUnderflow = () => {\n        const parsedValue = this._convertStringToNumber(this._value);\n        return parsedValue !== null && parsedValue > this._maximum && parsedValue < this._minimum;\n      };\n      const state = {\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n        valueMissing: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-required-attribute\n          // Constraint validation: If the element is required, and its value IDL attribute applies\n          // and is in the mode value, and the element is mutable, and the element's value is the\n          // empty string, then the element is suffering from being missing.\n          //\n          // Note: As of today, the value IDL attribute always applies.\n          if (this._required && valueAttributeMode(this.type) === \"value\" && this._mutable && this._value === \"\") {\n            return true;\n          }\n          switch (this.type) {\n            // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n            // Constraint validation: If the element is required and its checkedness is\n            // false, then the element is suffering from being missing.\n            case \"checkbox\":\n              if (this._required && !this._checkedness) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n            // Constraint validation: If an element in the radio button group is required,\n            // and all of the input elements in the radio button group have a checkedness\n            // that is false, then the element is suffering from being missing.\n            case \"radio\":\n              if (this._someInRadioGroup(\"_required\") && !this._someInRadioGroup(\"checked\")) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#file-upload-state-(type=file)\n            // Constraint validation: If the element is required and the list of selected files is\n            // empty, then the element is suffering from being missing.\n            case \"file\":\n              if (this._required && this.files.length === 0) {\n                return true;\n              }\n              break;\n          }\n          return false;\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n        // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n        // to be set to false.\n        tooLong: () => false,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n        tooShort: () => false,\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n        rangeOverflow: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n          if (this._hasAReversedRange) {\n            return reversedRangeSufferingOverUnderflow();\n          }\n          // Constraint validation: When the element has a maximum and does not have a reversed\n          // range, and the result of applying the algorithm to convert a string to a number to the\n          // string given by the element's value is a number, and the number obtained from that\n          // algorithm is more than the maximum, the element is suffering from an overflow.\n          if (this._maximum !== null) {\n            const parsedValue = this._convertStringToNumber(this._value);\n            if (parsedValue !== null && parsedValue > this._maximum) {\n              return true;\n            }\n          }\n          return false;\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n        rangeUnderflow: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n          if (this._hasAReversedRange) {\n            return reversedRangeSufferingOverUnderflow();\n          }\n          // Constraint validation: When the element has a minimum and does not have a reversed\n          // range, and the result of applying the algorithm to convert a string to a number to the\n          // string given by the element's value is a number, and the number obtained from that\n          // algorithm is less than the minimum, the element is suffering from an underflow.\n          if (this._minimum !== null) {\n            const parsedValue = this._convertStringToNumber(this._value);\n            if (parsedValue !== null && parsedValue < this._minimum) {\n              return true;\n            }\n          }\n          return false;\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n        patternMismatch: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-pattern-attribute\n          if (this._value === \"\" || !this._hasAttributeAndApplies(\"pattern\")) {\n            return false;\n          }\n          let regExp;\n          try {\n            const pattern = this.getAttributeNS(null, \"pattern\");\n            // The pattern attribute should be matched against the entire value, not just any\n            // subset, so add ^ and $ anchors. But also check the validity of the regex itself\n            // first.\n            new RegExp(pattern, \"u\"); // eslint-disable-line no-new\n            regExp = new RegExp(\"^(?:\" + pattern + \")$\", \"u\");\n          } catch (e) {\n            return false;\n          }\n          if (this._hasAttributeAndApplies(\"multiple\")) {\n            return !splitOnCommas(this._value).every(value => regExp.test(value));\n          }\n          return !regExp.test(this._value);\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n        stepMismatch: () => {\n          const allowedValueStep = this._allowedValueStep;\n          if (allowedValueStep === null) {\n            return false;\n          }\n          const number = this._convertStringToNumber(this._value);\n          return number !== null && !this._isStepAligned(number);\n        },\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n        typeMismatch: () => {\n          switch (this.type) {\n            // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n            // Constraint validation: While the value of the element is neither the empty string\n            // nor a valid absolute URL, the element is suffering from a type mismatch.\n            case \"url\":\n              if (this._value !== \"\" && !isValidAbsoluteURL(this._value)) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n            // Constraint validation [multiple=false]: While the value of the element is neither the empty\n            // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n            // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n            // the element is suffering from a type mismatch.\n            case \"email\":\n              if (this._value !== \"\" && !isValidEmailAddress(this._getValue(), this.hasAttributeNS(null, \"multiple\"))) {\n                return true;\n              }\n              break;\n          }\n          return false;\n        }\n      };\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\n        element: this,\n        state\n      });\n    }\n    return this._validity;\n  }\n  [cloningSteps](copy, node) {\n    copy._value = node._value;\n    copy._checkedness = node._checkedness;\n    copy._dirtyValue = node._dirtyValue;\n    copy._dirtyCheckedness = node._dirtyCheckedness;\n  }\n}\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};","map":{"version":3,"names":["DOMException","require","FileList","Decimal","HTMLElementImpl","implementation","idlUtils","DefaultConstraintValidationImpl","ValidityState","mixin","domSymbolTree","cloningSteps","getLabelsForLabelable","formOwner","fireAnEvent","isDisabled","isValidEmailAddress","isValidAbsoluteURL","sanitizeValueByType","asciiCaseInsensitiveMatch","asciiLowercase","parseFloatingPointNumber","splitOnCommas","isDate","convertStringToNumberByType","convertStringToDateByType","serializeDateByType","convertNumberToStringByType","filesSymbol","Symbol","inputAllowedTypes","Set","variableLengthSelectionAllowedTypes","numericTypes","applicableTypesForIDLMember","valueAsDate","valueAsNumber","select","selectionStart","selectionEnd","selectionDirection","setRangeText","setSelectionRange","stepDown","stepUp","lengthPatternSizeTypes","readonlyTypes","applicableTypesForContentAttribute","list","max","maxlength","min","minlength","multiple","pattern","readonly","required","step","valueAttributeDefaultMode","valueAttributeDefaultOnMode","valueAttributeMode","type","has","getTypeFromAttribute","typeAttribute","HTMLInputElementImpl","constructor","globalObject","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_value","_dirtyValue","_checkedness","_dirtyCheckedness","_preCheckedRadioState","_legacyActivationBehaviorPreviousIndeterminateState","indeterminate","_customValidityErrorMessage","_labels","_hasActivationBehavior","_convertStringToNumber","_convertNumberToString","_convertDateToString","_convertStringToDate","_isStepAligned","v","minus","_stepBase","modulo","_allowedValueStep","isZero","_stepAlign","roundUp","allowedValueStep","stepBase","toNearest","ROUND_UP","ROUND_DOWN","add","_getValue","_legacyPreActivationBehavior","checked","_legacyCanceledActivationBehavior","_activationBehavior","event","_mutable","form","isConnected","undefined","bubbles","_selectedCoordinate","x","offsetX","y","offsetY","_doRequestSubmit","_doReset","_attrModified","name","value","oldVal","wrapper","wrapperForImpl","defaultValue","defaultChecked","_removeOtherRadioCheckedness","prevType","curType","prevValueMode","curValueMode","setAttributeNS","getAttributeNS","_signalATypeChange","previouslySelectable","_idlMemberApplies","nowSelectable","_formReset","_changedFormOwner","_otherRadioGroupElements","root","_radioButtonGroupRoot","result","descendants","treeIterator","candidate","candidateWrapper","push","radioGroupElement","e","parent","nodeName","toUpperCase","_someInRadioGroup","some","_hasAttributeAndApplies","labels","Boolean","attr","files","length","Error","val","oldValue","_getValueLength","create","_globalObject","window","_ownerDocument","_defaultView","convertedValue","Date","getTime","TypeError","isNaN","NaN","parsedValue","isFinite","_stepUpdate","n","isUp","methodName","_minimum","_maximum","candidateStepValue","lt","gt","error","valueBeforeStepping","delta","mul","neg","toNumber","arguments","createImpl","_dispatchSelectEvent","setTimeout","cancelable","start","Math","end","dir","repl","selectionMode","selStart","selEnd","slice","newEnd","id","_getAttributeIfApplies","el","getRootNode","getElementById","localName","maxLength","hasAttributeNS","parseInt","String","minLength","size","_defaultMinimum","parsed","_defaultMaximum","_contentAttributeApplies","_defaultStep","_stepScaleFactor","parsedStep","dayInMilliseconds","_defaultStepBase","attribute","member","_barredFromConstraintValidationSpecialization","willNotValidateTypes","readOnly","_required","_hasAPeriodicDomain","_hasAReversedRange","validity","_validity","reversedRangeSufferingOverUnderflow","state","valueMissing","tooLong","tooShort","rangeOverflow","rangeUnderflow","patternMismatch","regExp","RegExp","every","test","stepMismatch","number","typeMismatch","element","copy","node","prototype","module","exports"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js"],"sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception/webidl2js-wrapper\");\nconst FileList = require(\"../generated/FileList\");\nconst Decimal = require(\"decimal.js\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree, cloningSteps } = require(\"../helpers/internal-constants\");\nconst { getLabelsForLabelable, formOwner } = require(\"../helpers/form-controls\");\nconst { fireAnEvent } = require(\"../helpers/events\");\nconst {\n  isDisabled,\n  isValidEmailAddress,\n  isValidAbsoluteURL,\n  sanitizeValueByType\n} = require(\"../helpers/form-controls\");\nconst {\n  asciiCaseInsensitiveMatch,\n  asciiLowercase,\n  parseFloatingPointNumber,\n  splitOnCommas\n} = require(\"../helpers/strings\");\nconst { isDate } = require(\"../helpers/dates-and-times\");\nconst {\n  convertStringToNumberByType,\n  convertStringToDateByType,\n  serializeDateByType,\n  convertNumberToStringByType\n} = require(\"../helpers/number-and-date-inputs\");\n\nconst filesSymbol = Symbol(\"files\");\n\n// https://html.spec.whatwg.org/multipage/input.html#attr-input-type\nconst inputAllowedTypes = new Set([\n  \"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"date\",\n  \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\",\n  \"file\", \"submit\", \"image\", \"reset\", \"button\"\n]);\n\n// https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\n\nconst variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"url\", \"tel\", \"password\"]);\nconst numericTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\"]);\n\nconst applicableTypesForIDLMember = {\n  valueAsDate: new Set([\"date\", \"month\", \"week\", \"time\"]),\n  valueAsNumber: numericTypes,\n\n  select: new Set([\n    \"text\", \"search\", \"url\", \"tel\", \"email\", \"password\", \"date\", \"month\", \"week\",\n    \"time\", \"datetime-local\", \"number\", \"color\", \"file\"\n  ]),\n  selectionStart: variableLengthSelectionAllowedTypes,\n  selectionEnd: variableLengthSelectionAllowedTypes,\n  selectionDirection: variableLengthSelectionAllowedTypes,\n  setRangeText: variableLengthSelectionAllowedTypes,\n  setSelectionRange: variableLengthSelectionAllowedTypes,\n  stepDown: numericTypes,\n  stepUp: numericTypes\n};\n\nconst lengthPatternSizeTypes = new Set([\"text\", \"search\", \"url\", \"tel\", \"email\", \"password\"]);\nconst readonlyTypes =\n  new Set([...lengthPatternSizeTypes, \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\"]);\n\nconst applicableTypesForContentAttribute = {\n  list: new Set([\"text\", \"search\", \"url\", \"tel\", \"email\", ...numericTypes, \"color\"]),\n  max: numericTypes,\n  maxlength: lengthPatternSizeTypes,\n  min: numericTypes,\n  minlength: lengthPatternSizeTypes,\n  multiple: new Set([\"email\", \"file\"]),\n  pattern: lengthPatternSizeTypes,\n  readonly: readonlyTypes,\n  required: new Set([...readonlyTypes, \"checkbox\", \"radio\", \"file\"]),\n  step: numericTypes\n};\n\nconst valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nconst valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\n\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n  if (type === \"file\") {\n    return \"filename\";\n  }\n  return \"value\";\n}\n\nfunction getTypeFromAttribute(typeAttribute) {\n  if (typeof typeAttribute !== \"string\") {\n    return \"text\";\n  }\n  const type = asciiLowercase(typeAttribute);\n  return inputAllowedTypes.has(type) ? type : \"text\";\n}\n\nclass HTMLInputElementImpl extends HTMLElementImpl {\n  constructor(globalObject, args, privateData) {\n    super(globalObject, args, privateData);\n\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._value = \"\";\n    this._dirtyValue = false;\n    this._checkedness = false;\n    this._dirtyCheckedness = false;\n\n    this._preCheckedRadioState = null;\n    this._legacyActivationBehaviorPreviousIndeterminateState = false;\n\n    this.indeterminate = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n\n    this._hasActivationBehavior = true;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n  get _convertStringToNumber() {\n    return convertStringToNumberByType[this.type];\n  }\n\n  get _convertNumberToString() {\n    return convertNumberToStringByType[this.type];\n  }\n\n  get _convertDateToString() {\n    return serializeDateByType[this.type];\n  }\n\n  get _convertStringToDate() {\n    return convertStringToDateByType[this.type];\n  }\n\n  _isStepAligned(v) {\n    return new Decimal(v).minus(this._stepBase)\n      .modulo(this._allowedValueStep)\n      .isZero();\n  }\n\n  // Returns a Decimal.\n  _stepAlign(v, roundUp) {\n    const allowedValueStep = this._allowedValueStep;\n    const stepBase = this._stepBase;\n\n    return new Decimal(v).minus(stepBase)\n      .toNearest(allowedValueStep, roundUp ? Decimal.ROUND_UP : Decimal.ROUND_DOWN)\n      .add(stepBase);\n  }\n\n  // For <input>, https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-value\n  // is a simple value that is gotten and set, not computed.\n  _getValue() {\n    return this._value;\n  }\n\n  _legacyPreActivationBehavior() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n      this._legacyActivationBehaviorPreviousIndeterminateState = this.indeterminate;\n      this.indeterminate = false;\n    } else if (this.type === \"radio\") {\n      this._preCheckedRadioState = this.checked;\n      this.checked = true;\n    }\n  }\n\n  _legacyCanceledActivationBehavior() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n      this.indeterminate = this._legacyActivationBehaviorPreviousIndeterminateState;\n    } else if (this.type === \"radio\") {\n      if (this._preCheckedRadioState !== null) {\n        this.checked = this._preCheckedRadioState;\n        this._preCheckedRadioState = null;\n      }\n    }\n  }\n\n  _activationBehavior(event) {\n    if (!this._mutable && this.type !== \"checkbox\" && this.type !== \"radio\") {\n      return;\n    }\n\n    const { form } = this;\n\n    if (this.type === \"checkbox\" || (this.type === \"radio\" && !this._preCheckedRadioState)) {\n      if (this.isConnected) {\n        fireAnEvent(\"input\", this, undefined, { bubbles: true });\n        fireAnEvent(\"change\", this, undefined, { bubbles: true });\n      }\n    } else if (form && this.type === \"image\") {\n      // https://html.spec.whatwg.org/multipage/input.html#image-button-state-(type=image):input-activation-behavior\n\n      // TODO: if/when layout is implemented, record the selected coordinate at the start of dispatch and use it here,\n      // rather than relying on these getters that just mirror pageX/Y outside of dispatch\n      this._selectedCoordinate = { x: event.offsetX, y: event.offsetY };\n      form._doRequestSubmit(this);\n    } else if (form && this.type === \"submit\") {\n      form._doRequestSubmit(this);\n    } else if (form && this.type === \"reset\") {\n      form._doReset();\n    }\n  }\n\n  _attrModified(name, value, oldVal) {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (!this._dirtyValue && name === \"value\") {\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    }\n    if (!this._dirtyCheckedness && name === \"checked\") {\n      this._checkedness = wrapper.defaultChecked;\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    if (name === \"name\" || name === \"type\") {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    if (name === \"type\") {\n      const prevType = getTypeFromAttribute(oldVal);\n      const curType = getTypeFromAttribute(value);\n      // When an input element's type attribute changes stateâ€¦\n      if (prevType !== curType) {\n        const prevValueMode = valueAttributeMode(prevType);\n        const curValueMode = valueAttributeMode(curType);\n        if (prevValueMode === \"value\" && this._value !== \"\" &&\n            (curValueMode === \"default\" || curValueMode === \"default/on\")) {\n          this.setAttributeNS(null, \"value\", this._value);\n        } else if (prevValueMode !== \"value\" && curValueMode === \"value\") {\n          this._value = this.getAttributeNS(null, \"value\") || \"\";\n          this._dirtyValue = false;\n        } else if (prevValueMode !== \"filename\" && curValueMode === \"filename\") {\n          this._value = \"\";\n        }\n\n        this._signalATypeChange();\n\n        this._value = sanitizeValueByType(this, this._value);\n\n        const previouslySelectable = this._idlMemberApplies(\"setRangeText\", prevType);\n        const nowSelectable = this._idlMemberApplies(\"setRangeText\", curType);\n        if (!previouslySelectable && nowSelectable) {\n          this._selectionStart = 0;\n          this._selectionEnd = 0;\n          this._selectionDirection = \"none\";\n        }\n      }\n    }\n\n    super._attrModified(name, value, oldVal);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#signal-a-type-change\n  _signalATypeChange() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  _formReset() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    this._dirtyValue = false;\n    this._checkedness = wrapper.defaultChecked;\n    this._dirtyCheckedness = false;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  _changedFormOwner() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get _otherRadioGroupElements() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    const root = this._radioButtonGroupRoot;\n    if (!root) {\n      return [];\n    }\n\n    const result = [];\n\n    const descendants = domSymbolTree.treeIterator(root);\n    for (const candidate of descendants) {\n      if (candidate._radioButtonGroupRoot !== root) {\n        continue;\n      }\n\n      const candidateWrapper = idlUtils.wrapperForImpl(candidate);\n      if (!candidateWrapper.name || candidateWrapper.name !== wrapper.name) {\n        continue;\n      }\n\n      if (candidate !== this) {\n        result.push(candidate);\n      }\n    }\n    return result;\n  }\n\n  _removeOtherRadioCheckedness() {\n    for (const radioGroupElement of this._otherRadioGroupElements) {\n      radioGroupElement._checkedness = false;\n    }\n  }\n\n  get _radioButtonGroupRoot() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (this.type !== \"radio\" || !wrapper.name) {\n      return null;\n    }\n\n    let e = domSymbolTree.parent(this);\n    while (e) {\n      // root node of this home sub tree\n      // or the form element we belong to\n      if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n\n  _someInRadioGroup(name) {\n    if (this[name]) {\n      return true;\n    }\n    return this._otherRadioGroupElements.some(radioGroupElement => radioGroupElement[name]);\n  }\n\n  get _mutable() {\n    return !isDisabled(this) && !this._hasAttributeAndApplies(\"readonly\");\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return formOwner(this);\n  }\n\n  get checked() {\n    return this._checkedness;\n  }\n\n  set checked(checked) {\n    this._checkedness = Boolean(checked);\n    this._dirtyCheckedness = true;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get value() {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        return this._getValue();\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      case \"default\": {\n        const attr = this.getAttributeNS(null, \"value\");\n        return attr !== null ? attr : \"\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default/on\": {\n        const attr = this.getAttributeNS(null, \"value\");\n        return attr !== null ? attr : \"on\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  set value(val) {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\": {\n        const oldValue = this._value;\n        this._value = sanitizeValueByType(this, val);\n        this._dirtyValue = true;\n\n        if (oldValue !== this._value) {\n          this._selectionStart = this._selectionEnd = this._getValueLength();\n          this._selectionDirection = \"none\";\n        }\n        break;\n      }\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default\":\n      case \"default/on\":\n        this.setAttributeNS(null, \"value\", val);\n        break;\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        if (val === \"\") {\n          this.files.length = 0;\n        } else {\n          throw DOMException.create(this._globalObject, [\n            \"This input element accepts a filename, which may only be programmatically set to the empty string.\",\n            \"InvalidStateError\"\n          ]);\n        }\n        break;\n\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-valueasdate\n  get valueAsDate() {\n    if (!this._idlMemberApplies(\"valueAsDate\")) {\n      return null;\n    }\n\n    const window = this._ownerDocument._defaultView;\n    const convertedValue = this._convertStringToDate(this._value);\n\n    if (convertedValue instanceof Date) {\n      return new window.Date(convertedValue.getTime());\n    }\n\n    return null;\n  }\n\n  set valueAsDate(v) {\n    if (!this._idlMemberApplies(\"valueAsDate\")) {\n      throw DOMException.create(this._globalObject, [\n        \"Failed to set the 'valueAsDate' property on 'HTMLInputElement': This input element does not support Date \" +\n        \"values.\",\n        \"InvalidStateError\"\n      ]);\n    }\n\n    if (v !== null && !isDate(v)) {\n      throw new TypeError(\"Failed to set the 'valueAsDate' property on 'HTMLInputElement': The provided value is \" +\n        \"not a Date.\");\n    }\n\n    if (v === null || isNaN(v)) {\n      this._value = \"\";\n      return;\n    }\n\n    this._value = this._convertDateToString(v);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-valueasnumber\n  get valueAsNumber() {\n    if (!this._idlMemberApplies(\"valueAsNumber\")) {\n      return NaN;\n    }\n\n    const parsedValue = this._convertStringToNumber(this._value);\n    return parsedValue !== null ? parsedValue : NaN;\n  }\n\n  set valueAsNumber(v) {\n    if (!isFinite(v)) {\n      throw new TypeError(\"Failed to set infinite value as Number\");\n    }\n\n    if (!this._idlMemberApplies(\"valueAsNumber\")) {\n      throw DOMException.create(this._globalObject, [\n        \"Failed to set the 'valueAsNumber' property on 'HTMLInputElement': This input element does not support \" +\n        \"Number values.\",\n        \"InvalidStateError\"\n      ]);\n    }\n\n    this._value = this._convertNumberToString(v);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#dom-input-stepup\n  _stepUpdate(n, isUp) {\n    const methodName = isUp ? \"stepUp\" : \"stepDown\";\n    if (!this._idlMemberApplies(methodName)) {\n      throw DOMException.create(this._globalObject, [\n        `Failed to invoke '${methodName}' method on 'HTMLInputElement': ` +\n        \"This input element does not support Number values.\",\n        \"InvalidStateError\"\n      ]);\n    }\n\n    const allowedValueStep = this._allowedValueStep;\n    if (allowedValueStep === null) {\n      throw DOMException.create(this._globalObject, [\n        `Failed to invoke '${methodName}' method on 'HTMLInputElement': ` +\n        \"This input element does not support value step.\",\n        \"InvalidStateError\"\n      ]);\n    }\n\n    const min = this._minimum;\n    const max = this._maximum;\n\n    if (min !== null && max !== null) {\n      if (min > max) {\n        return;\n      }\n\n      const candidateStepValue = this._stepAlign(Decimal.add(min, allowedValueStep), /* roundUp = */ false);\n      if (candidateStepValue.lt(min) || candidateStepValue.gt(max)) {\n        return;\n      }\n    }\n\n    let value = 0;\n    try {\n      value = this.valueAsNumber;\n      if (isNaN(value)) { // Empty value is parsed as NaN.\n        value = 0;\n      }\n    } catch (error) {\n      // Step 5. Default value is 0.\n    }\n    value = new Decimal(value);\n\n    const valueBeforeStepping = value;\n\n    if (!this._isStepAligned(value)) {\n      value = this._stepAlign(value, /* roundUp = */ isUp);\n    } else {\n      let delta = Decimal.mul(n, allowedValueStep);\n      if (!isUp) {\n        delta = delta.neg();\n      }\n      value = value.add(delta);\n    }\n\n    if (min !== null && value.lt(min)) {\n      value = this._stepAlign(min, /* roundUp = */ true);\n    }\n\n    if (max !== null && value.gt(max)) {\n      value = this._stepAlign(max, /* roundUp = */ false);\n    }\n\n    if (isUp ? value.lt(valueBeforeStepping) : value.gt(valueBeforeStepping)) {\n      return;\n    }\n\n    this._value = this._convertNumberToString(value.toNumber());\n  }\n\n  stepDown(n = 1) {\n    return this._stepUpdate(n, false);\n  }\n\n  stepUp(n = 1) {\n    return this._stepUpdate(n, true);\n  }\n\n  get files() {\n    if (this.type === \"file\") {\n      this[filesSymbol] ||= FileList.createImpl(this._globalObject);\n    } else {\n      this[filesSymbol] = null;\n    }\n    return this[filesSymbol];\n  }\n\n  set files(value) {\n    if (this.type === \"file\" && value !== null) {\n      this[filesSymbol] = value;\n    }\n  }\n\n  get type() {\n    const typeAttribute = this.getAttributeNS(null, \"type\");\n    return getTypeFromAttribute(typeAttribute);\n  }\n\n  set type(type) {\n    this.setAttributeNS(null, \"type\", type);\n  }\n\n  _dispatchSelectEvent() {\n    setTimeout(() => fireAnEvent(\"select\", this, undefined, { bubbles: true, cancelable: false }), 0);\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    if (!this._idlMemberApplies(\"select\")) {\n      return;\n    }\n\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    if (!this._idlMemberApplies(\"selectionStart\")) {\n      return null;\n    }\n\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    if (!this._idlMemberApplies(\"selectionStart\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    if (!this._idlMemberApplies(\"selectionEnd\")) {\n      return null;\n    }\n\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    if (!this._idlMemberApplies(\"selectionEnd\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    if (!this._idlMemberApplies(\"selectionDirection\")) {\n      return null;\n    }\n\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    if (!this._idlMemberApplies(\"selectionDirection\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    if (!this._idlMemberApplies(\"setSelectionRange\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (!this._idlMemberApplies(\"setRangeText\")) {\n      throw DOMException.create(this._globalObject, [\"The object is in an invalid state.\", \"InvalidStateError\"]);\n    }\n\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + repl.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-list-attribute\n  get list() {\n    const id = this._getAttributeIfApplies(\"list\");\n    if (!id) {\n      return null;\n    }\n\n    const el = this.getRootNode({}).getElementById(id);\n\n    if (el && el.localName === \"datalist\") {\n      return el;\n    }\n\n    return null;\n  }\n\n  // Reflected IDL attribute does not care about whether the content attribute applies.\n  get maxLength() {\n    if (!this.hasAttributeNS(null, \"maxlength\")) {\n      return 524288; // stole this from chrome\n    }\n    return parseInt(this.getAttributeNS(null, \"maxlength\"));\n  }\n\n  set maxLength(value) {\n    if (value < 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"maxlength\", String(value));\n  }\n\n  get minLength() {\n    if (!this.hasAttributeNS(null, \"minlength\")) {\n      return 0;\n    }\n    return parseInt(this.getAttributeNS(null, \"minlength\"));\n  }\n\n  set minLength(value) {\n    if (value < 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"minlength\", String(value));\n  }\n\n  get size() {\n    if (!this.hasAttributeNS(null, \"size\")) {\n      return 20;\n    }\n    return parseInt(this.getAttributeNS(null, \"size\"));\n  }\n\n  set size(value) {\n    if (value <= 0) {\n      throw DOMException.create(this._globalObject, [\"The index is not in the allowed range.\", \"IndexSizeError\"]);\n    }\n    this.setAttributeNS(null, \"size\", String(value));\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n  get _minimum() {\n    let min = this._defaultMinimum;\n    const attr = this._getAttributeIfApplies(\"min\");\n    if (attr !== null && this._convertStringToNumber !== undefined) {\n      const parsed = this._convertStringToNumber(attr);\n      if (parsed !== null) {\n        min = parsed;\n      }\n    }\n    return min;\n  }\n\n  get _maximum() {\n    let max = this._defaultMaximum;\n    const attr = this._getAttributeIfApplies(\"max\");\n    if (attr !== null && this._convertStringToNumber !== undefined) {\n      const parsed = this._convertStringToNumber(attr);\n      if (parsed !== null) {\n        max = parsed;\n      }\n    }\n    return max;\n  }\n\n  get _defaultMinimum() {\n    if (this.type === \"range\") {\n      return 0;\n    }\n    return null;\n  }\n\n  get _defaultMaximum() {\n    if (this.type === \"range\") {\n      return 100;\n    }\n    return null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step\n  get _allowedValueStep() {\n    if (!this._contentAttributeApplies(\"step\")) {\n      return null;\n    }\n    const attr = this.getAttributeNS(null, \"step\");\n    if (attr === null) {\n      return this._defaultStep * this._stepScaleFactor;\n    }\n    if (asciiCaseInsensitiveMatch(attr, \"any\")) {\n      return null;\n    }\n    const parsedStep = parseFloatingPointNumber(attr);\n    if (parsedStep === null || parsedStep <= 0) {\n      return this._defaultStep * this._stepScaleFactor;\n    }\n    return parsedStep * this._stepScaleFactor;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n  get _stepScaleFactor() {\n    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n    switch (this.type) {\n      case \"week\":\n        return 7 * dayInMilliseconds;\n      case \"date\":\n        return dayInMilliseconds;\n      case \"datetime-local\":\n      case \"datetime\":\n      case \"time\":\n        return 1000;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n  get _defaultStep() {\n    if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n      return 60;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n  get _stepBase() {\n    if (this._hasAttributeAndApplies(\"min\")) {\n      const min = this._convertStringToNumber(this.getAttributeNS(null, \"min\"));\n      if (min !== null) {\n        return min;\n      }\n    }\n    if (this.hasAttributeNS(null, \"value\")) {\n      const value = this._convertStringToNumber(this.getAttributeNS(null, \"value\"));\n      if (value !== null) {\n        return value;\n      }\n    }\n    if (this._defaultStepBase !== null) {\n      return this._defaultStepBase;\n    }\n    return 0;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n  get _defaultStepBase() {\n    if (this.type === \"week\") {\n      // The start of week 1970-W01\n      return -259200000;\n    }\n    return null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#common-input-element-attributes\n  // When an attribute doesn't apply to an input element, user agents must ignore the attribute.\n  _contentAttributeApplies(attribute) {\n    return applicableTypesForContentAttribute[attribute].has(this.type);\n  }\n\n  _hasAttributeAndApplies(attribute) {\n    return this._contentAttributeApplies(attribute) && this.hasAttributeNS(null, attribute);\n  }\n\n  _getAttributeIfApplies(attribute) {\n    if (this._contentAttributeApplies(attribute)) {\n      return this.getAttributeNS(null, attribute);\n    }\n    return null;\n  }\n\n  _idlMemberApplies(member, type = this.type) {\n    return applicableTypesForIDLMember[member].has(type);\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n    // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n    // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n    const willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]);\n    // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n    const readOnly = this._hasAttributeAndApplies(\"readonly\");\n\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return willNotValidateTypes.has(this.type) || readOnly;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-required\n  get _required() {\n    return this._hasAttributeAndApplies(\"required\");\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#has-a-periodic-domain\n  get _hasAPeriodicDomain() {\n    return this.type === \"time\";\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#has-a-reversed-range\n  get _hasAReversedRange() {\n    return this._hasAPeriodicDomain && this._maximum < this._minimum;\n  }\n\n  get validity() {\n    if (!this._validity) {\n      // Constraint validation: When an element has a reversed range, and the result of applying\n      // the algorithm to convert a string to a number to the string given by the element's value\n      // is a number, and the number obtained from that algorithm is more than the maximum and less\n      // than the minimum, the element is simultaneously suffering from an underflow and suffering\n      // from an overflow.\n      const reversedRangeSufferingOverUnderflow = () => {\n        const parsedValue = this._convertStringToNumber(this._value);\n        return parsedValue !== null && parsedValue > this._maximum && parsedValue < this._minimum;\n      };\n\n      const state = {\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n        valueMissing: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-required-attribute\n          // Constraint validation: If the element is required, and its value IDL attribute applies\n          // and is in the mode value, and the element is mutable, and the element's value is the\n          // empty string, then the element is suffering from being missing.\n          //\n          // Note: As of today, the value IDL attribute always applies.\n          if (this._required && valueAttributeMode(this.type) === \"value\" && this._mutable && this._value === \"\") {\n            return true;\n          }\n\n          switch (this.type) {\n            // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n            // Constraint validation: If the element is required and its checkedness is\n            // false, then the element is suffering from being missing.\n            case \"checkbox\":\n              if (this._required && !this._checkedness) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n            // Constraint validation: If an element in the radio button group is required,\n            // and all of the input elements in the radio button group have a checkedness\n            // that is false, then the element is suffering from being missing.\n            case \"radio\":\n              if (this._someInRadioGroup(\"_required\") && !this._someInRadioGroup(\"checked\")) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#file-upload-state-(type=file)\n            // Constraint validation: If the element is required and the list of selected files is\n            // empty, then the element is suffering from being missing.\n            case \"file\":\n              if (this._required && this.files.length === 0) {\n                return true;\n              }\n              break;\n          }\n\n          return false;\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n        // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n        // to be set to false.\n        tooLong: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n        tooShort: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n        rangeOverflow: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n          if (this._hasAReversedRange) {\n            return reversedRangeSufferingOverUnderflow();\n          }\n          // Constraint validation: When the element has a maximum and does not have a reversed\n          // range, and the result of applying the algorithm to convert a string to a number to the\n          // string given by the element's value is a number, and the number obtained from that\n          // algorithm is more than the maximum, the element is suffering from an overflow.\n          if (this._maximum !== null) {\n            const parsedValue = this._convertStringToNumber(this._value);\n            if (parsedValue !== null && parsedValue > this._maximum) {\n              return true;\n            }\n          }\n          return false;\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n        rangeUnderflow: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n          if (this._hasAReversedRange) {\n            return reversedRangeSufferingOverUnderflow();\n          }\n          // Constraint validation: When the element has a minimum and does not have a reversed\n          // range, and the result of applying the algorithm to convert a string to a number to the\n          // string given by the element's value is a number, and the number obtained from that\n          // algorithm is less than the minimum, the element is suffering from an underflow.\n          if (this._minimum !== null) {\n            const parsedValue = this._convertStringToNumber(this._value);\n            if (parsedValue !== null && parsedValue < this._minimum) {\n              return true;\n            }\n          }\n          return false;\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n        patternMismatch: () => {\n          // https://html.spec.whatwg.org/multipage/input.html#the-pattern-attribute\n          if (this._value === \"\" || !this._hasAttributeAndApplies(\"pattern\")) {\n            return false;\n          }\n          let regExp;\n          try {\n            const pattern = this.getAttributeNS(null, \"pattern\");\n            // The pattern attribute should be matched against the entire value, not just any\n            // subset, so add ^ and $ anchors. But also check the validity of the regex itself\n            // first.\n            new RegExp(pattern, \"u\"); // eslint-disable-line no-new\n            regExp = new RegExp(\"^(?:\" + pattern + \")$\", \"u\");\n          } catch (e) {\n            return false;\n          }\n          if (this._hasAttributeAndApplies(\"multiple\")) {\n            return !splitOnCommas(this._value).every(value => regExp.test(value));\n          }\n          return !regExp.test(this._value);\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n        stepMismatch: () => {\n          const allowedValueStep = this._allowedValueStep;\n          if (allowedValueStep === null) {\n            return false;\n          }\n          const number = this._convertStringToNumber(this._value);\n          return number !== null && !this._isStepAligned(number);\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n        typeMismatch: () => {\n          switch (this.type) {\n            // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n            // Constraint validation: While the value of the element is neither the empty string\n            // nor a valid absolute URL, the element is suffering from a type mismatch.\n            case \"url\":\n              if (this._value !== \"\" && !isValidAbsoluteURL(this._value)) {\n                return true;\n              }\n              break;\n\n            // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n            // Constraint validation [multiple=false]: While the value of the element is neither the empty\n            // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n            // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n            // the element is suffering from a type mismatch.\n            case \"email\":\n              if (this._value !== \"\" && !isValidEmailAddress(this._getValue(), this.hasAttributeNS(null, \"multiple\"))) {\n                return true;\n              }\n              break;\n          }\n          return false;\n        }\n      };\n\n      this._validity = ValidityState.createImpl(this._globalObject, [], {\n        element: this,\n        state\n      });\n    }\n    return this._validity;\n  }\n\n  [cloningSteps](copy, node) {\n    copy._value = node._value;\n    copy._checkedness = node._checkedness;\n    copy._dirtyValue = node._dirtyValue;\n    copy._dirtyCheckedness = node._dirtyCheckedness;\n  }\n}\n\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}