{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\nconst interfaceName = \"HTMLFontElement\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'HTMLFontElement'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"HTMLFontElement\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class HTMLFontElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n    get color() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get color' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"color\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set color(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set color' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'color' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject,\n        treatNullAsEmptyString: true\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"color\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get face() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get face' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"face\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set face(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set face' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'face' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"face\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get size() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get size' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"size\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    set size(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'set size' called on an object that is not a valid instance of HTMLFontElement.\");\n      }\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'size' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject\n      });\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"size\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n  }\n  Object.defineProperties(HTMLFontElement.prototype, {\n    color: {\n      enumerable: true\n    },\n    face: {\n      enumerable: true\n    },\n    size: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"HTMLFontElement\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = HTMLFontElement;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLFontElement\n  });\n};\nconst Impl = require(\"../nodes/HTMLFontElement-impl.js\");","map":{"version":3,"names":["conversions","require","utils","HTMLConstructor_helpers_html_constructor","HTMLConstructor","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","HTMLElement","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","HTMLFontElement","constructor","target","color","esValue","getAttributeNS","V","globals","treatNullAsEmptyString","setAttributeNS","face","size","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/HTMLFontElement.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst HTMLConstructor_helpers_html_constructor = require(\"../helpers/html-constructor.js\").HTMLConstructor;\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst HTMLElement = require(\"./HTMLElement.js\");\n\nconst interfaceName = \"HTMLFontElement\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'HTMLFontElement'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"HTMLFontElement\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  HTMLElement._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class HTMLFontElement extends globalObject.HTMLElement {\n    constructor() {\n      return HTMLConstructor_helpers_html_constructor(globalObject, interfaceName, new.target);\n    }\n\n    get color() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get color' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"color\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set color(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set color' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'color' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject,\n        treatNullAsEmptyString: true\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"color\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get face() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get face' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"face\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set face(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set face' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'face' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"face\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get size() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get size' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        const value = esValue[implSymbol].getAttributeNS(null, \"size\");\n        return value === null ? \"\" : value;\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    set size(V) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'set size' called on an object that is not a valid instance of HTMLFontElement.\"\n        );\n      }\n\n      V = conversions[\"DOMString\"](V, {\n        context: \"Failed to set the 'size' property on 'HTMLFontElement': The provided value\",\n        globals: globalObject\n      });\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        esValue[implSymbol].setAttributeNS(null, \"size\", V);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n  }\n  Object.defineProperties(HTMLFontElement.prototype, {\n    color: { enumerable: true },\n    face: { enumerable: true },\n    size: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"HTMLFontElement\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = HTMLFontElement;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: HTMLFontElement\n  });\n};\n\nconst Impl = require(\"../nodes/HTMLFontElement-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}