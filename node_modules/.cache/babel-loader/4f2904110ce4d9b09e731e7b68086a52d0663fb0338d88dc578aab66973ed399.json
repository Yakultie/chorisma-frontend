{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst DocumentType = require(\"./DocumentType.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"DOMImplementation\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'DOMImplementation'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"DOMImplementation\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class DOMImplementation {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n    createDocumentType(qualifiedName, publicId, systemId) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'createDocumentType' called on an object that is not a valid instance of DOMImplementation.\");\n      }\n      if (arguments.length < 3) {\n        throw new globalObject.TypeError(`Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createDocumentType(...args));\n    }\n    createDocument(namespace, qualifiedName) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'createDocument' called on an object that is not a valid instance of DOMImplementation.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n          globals: globalObject,\n          treatNullAsEmptyString: true\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = DocumentType.convert(globalObject, curArg, {\n              context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n            });\n          }\n        } else {\n          curArg = null;\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createDocument(...args));\n    }\n    createHTMLDocument() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'createHTMLDocument' called on an object that is not a valid instance of DOMImplementation.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createHTMLDocument(...args));\n    }\n    hasFeature() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'hasFeature' called on an object that is not a valid instance of DOMImplementation.\");\n      }\n      return esValue[implSymbol].hasFeature();\n    }\n  }\n  Object.defineProperties(DOMImplementation.prototype, {\n    createDocumentType: {\n      enumerable: true\n    },\n    createDocument: {\n      enumerable: true\n    },\n    createHTMLDocument: {\n      enumerable: true\n    },\n    hasFeature: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"DOMImplementation\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = DOMImplementation;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMImplementation\n  });\n};\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");","map":{"version":3,"names":["conversions","require","utils","DocumentType","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","DOMImplementation","constructor","createDocumentType","qualifiedName","publicId","systemId","esValue","args","curArg","globals","push","tryWrapperForImpl","createDocument","namespace","treatNullAsEmptyString","createHTMLDocument","hasFeature","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/DOMImplementation.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst DocumentType = require(\"./DocumentType.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"DOMImplementation\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'DOMImplementation'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"DOMImplementation\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class DOMImplementation {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n\n    createDocumentType(qualifiedName, publicId, systemId) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'createDocumentType' called on an object that is not a valid instance of DOMImplementation.\"\n        );\n      }\n\n      if (arguments.length < 3) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'createDocumentType' on 'DOMImplementation': 3 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocumentType' on 'DOMImplementation': parameter 3\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createDocumentType(...args));\n    }\n\n    createDocument(namespace, qualifiedName) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'createDocument' called on an object that is not a valid instance of DOMImplementation.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'createDocument' on 'DOMImplementation': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg === null || curArg === undefined) {\n          curArg = null;\n        } else {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 1\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 2\",\n          globals: globalObject,\n          treatNullAsEmptyString: true\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        if (curArg !== undefined) {\n          if (curArg === null || curArg === undefined) {\n            curArg = null;\n          } else {\n            curArg = DocumentType.convert(globalObject, curArg, {\n              context: \"Failed to execute 'createDocument' on 'DOMImplementation': parameter 3\"\n            });\n          }\n        } else {\n          curArg = null;\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createDocument(...args));\n    }\n\n    createHTMLDocument() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'createHTMLDocument' called on an object that is not a valid instance of DOMImplementation.\"\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"DOMString\"](curArg, {\n            context: \"Failed to execute 'createHTMLDocument' on 'DOMImplementation': parameter 1\",\n            globals: globalObject\n          });\n        }\n        args.push(curArg);\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].createHTMLDocument(...args));\n    }\n\n    hasFeature() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'hasFeature' called on an object that is not a valid instance of DOMImplementation.\"\n        );\n      }\n\n      return esValue[implSymbol].hasFeature();\n    }\n  }\n  Object.defineProperties(DOMImplementation.prototype, {\n    createDocumentType: { enumerable: true },\n    createDocument: { enumerable: true },\n    createHTMLDocument: { enumerable: true },\n    hasFeature: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"DOMImplementation\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = DOMImplementation;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: DOMImplementation\n  });\n};\n\nconst Impl = require(\"../nodes/DOMImplementation-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}