{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Node = require(\"./Node.js\");\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst AbstractRange = require(\"./AbstractRange.js\");\nconst interfaceName = \"Range\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'Range'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"Range\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  AbstractRange._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class Range extends globalObject.AbstractRange {\n    constructor() {\n      return exports.setup(Object.create(new.target.prototype), globalObject, undefined);\n    }\n    setStart(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStart' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'setStart' on 'Range': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStart' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setStart' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStart(...args);\n    }\n    setEnd(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEnd' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'setEnd' on 'Range': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setEnd' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setEnd' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEnd(...args);\n    }\n    setStartBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStartBefore' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'setStartBefore' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStartBefore' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartBefore(...args);\n    }\n    setStartAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStartAfter' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'setStartAfter' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStartAfter' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartAfter(...args);\n    }\n    setEndBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEndBefore' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'setEndBefore' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setEndBefore' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndBefore(...args);\n    }\n    setEndAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEndAfter' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'setEndAfter' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setEndAfter' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndAfter(...args);\n    }\n    collapse() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'collapse' called on an object that is not a valid instance of Range.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'collapse' on 'Range': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = false;\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].collapse(...args);\n    }\n    selectNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'selectNode' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'selectNode' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'selectNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNode(...args);\n    }\n    selectNodeContents(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'selectNodeContents' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'selectNodeContents' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'selectNodeContents' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNodeContents(...args);\n    }\n    compareBoundaryPoints(how, sourceRange) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'compareBoundaryPoints' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'compareBoundaryPoints' on 'Range': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned short\"](curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = exports.convert(globalObject, curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].compareBoundaryPoints(...args);\n    }\n    deleteContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'deleteContents' called on an object that is not a valid instance of Range.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].deleteContents();\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    extractContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'extractContents' called on an object that is not a valid instance of Range.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].extractContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    cloneContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'cloneContents' called on an object that is not a valid instance of Range.\");\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].cloneContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    insertNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'insertNode' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'insertNode' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'insertNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].insertNode(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    surroundContents(newParent) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'surroundContents' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'surroundContents' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'surroundContents' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].surroundContents(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    cloneRange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'cloneRange' called on an object that is not a valid instance of Range.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol].cloneRange());\n    }\n    detach() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'detach' called on an object that is not a valid instance of Range.\");\n      }\n      return esValue[implSymbol].detach();\n    }\n    isPointInRange(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'isPointInRange' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'isPointInRange' on 'Range': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'isPointInRange' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'isPointInRange' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].isPointInRange(...args);\n    }\n    comparePoint(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'comparePoint' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to execute 'comparePoint' on 'Range': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'comparePoint' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'comparePoint' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].comparePoint(...args);\n    }\n    intersectsNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'intersectsNode' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'intersectsNode' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'intersectsNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].intersectsNode(...args);\n    }\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of Range.\");\n      }\n      return esValue[implSymbol].toString();\n    }\n    createContextualFragment(fragment) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'createContextualFragment' called on an object that is not a valid instance of Range.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'createContextualFragment' on 'Range': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createContextualFragment' on 'Range': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].createContextualFragment(...args));\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n    get commonAncestorContainer() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get commonAncestorContainer' called on an object that is not a valid instance of Range.\");\n      }\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"commonAncestorContainer\"]);\n    }\n  }\n  Object.defineProperties(Range.prototype, {\n    setStart: {\n      enumerable: true\n    },\n    setEnd: {\n      enumerable: true\n    },\n    setStartBefore: {\n      enumerable: true\n    },\n    setStartAfter: {\n      enumerable: true\n    },\n    setEndBefore: {\n      enumerable: true\n    },\n    setEndAfter: {\n      enumerable: true\n    },\n    collapse: {\n      enumerable: true\n    },\n    selectNode: {\n      enumerable: true\n    },\n    selectNodeContents: {\n      enumerable: true\n    },\n    compareBoundaryPoints: {\n      enumerable: true\n    },\n    deleteContents: {\n      enumerable: true\n    },\n    extractContents: {\n      enumerable: true\n    },\n    cloneContents: {\n      enumerable: true\n    },\n    insertNode: {\n      enumerable: true\n    },\n    surroundContents: {\n      enumerable: true\n    },\n    cloneRange: {\n      enumerable: true\n    },\n    detach: {\n      enumerable: true\n    },\n    isPointInRange: {\n      enumerable: true\n    },\n    comparePoint: {\n      enumerable: true\n    },\n    intersectsNode: {\n      enumerable: true\n    },\n    toString: {\n      enumerable: true\n    },\n    createContextualFragment: {\n      enumerable: true\n    },\n    commonAncestorContainer: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"Range\",\n      configurable: true\n    },\n    START_TO_START: {\n      value: 0,\n      enumerable: true\n    },\n    START_TO_END: {\n      value: 1,\n      enumerable: true\n    },\n    END_TO_END: {\n      value: 2,\n      enumerable: true\n    },\n    END_TO_START: {\n      value: 3,\n      enumerable: true\n    }\n  });\n  Object.defineProperties(Range, {\n    START_TO_START: {\n      value: 0,\n      enumerable: true\n    },\n    START_TO_END: {\n      value: 1,\n      enumerable: true\n    },\n    END_TO_END: {\n      value: 2,\n      enumerable: true\n    },\n    END_TO_START: {\n      value: 3,\n      enumerable: true\n    }\n  });\n  ctorRegistry[interfaceName] = Range;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Range\n  });\n};\nconst Impl = require(\"../range/Range-impl.js\");","map":{"version":3,"names":["conversions","require","utils","Node","ceReactionsPreSteps_helpers_custom_elements","ceReactionsPreSteps","ceReactionsPostSteps_helpers_custom_elements","ceReactionsPostSteps","implSymbol","ctorRegistrySymbol","AbstractRange","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","Range","constructor","target","setStart","node","offset","esValue","args","curArg","push","globals","setEnd","setStartBefore","setStartAfter","setEndBefore","setEndAfter","collapse","selectNode","selectNodeContents","compareBoundaryPoints","how","sourceRange","deleteContents","extractContents","tryWrapperForImpl","cloneContents","insertNode","surroundContents","newParent","cloneRange","detach","isPointInRange","comparePoint","intersectsNode","toString","createContextualFragment","fragment","commonAncestorContainer","defineProperties","enumerable","Symbol","toStringTag","START_TO_START","START_TO_END","END_TO_END","END_TO_START","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/Range.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Node = require(\"./Node.js\");\nconst ceReactionsPreSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPreSteps;\nconst ceReactionsPostSteps_helpers_custom_elements = require(\"../helpers/custom-elements.js\").ceReactionsPostSteps;\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst AbstractRange = require(\"./AbstractRange.js\");\n\nconst interfaceName = \"Range\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'Range'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"Range\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  AbstractRange._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class Range extends globalObject.AbstractRange {\n    constructor() {\n      return exports.setup(Object.create(new.target.prototype), globalObject, undefined);\n    }\n\n    setStart(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStart' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setStart' on 'Range': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStart' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setStart' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStart(...args);\n    }\n\n    setEnd(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEnd' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setEnd' on 'Range': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, { context: \"Failed to execute 'setEnd' on 'Range': parameter 1\" });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'setEnd' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEnd(...args);\n    }\n\n    setStartBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStartBefore' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setStartBefore' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStartBefore' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartBefore(...args);\n    }\n\n    setStartAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setStartAfter' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setStartAfter' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setStartAfter' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setStartAfter(...args);\n    }\n\n    setEndBefore(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEndBefore' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setEndBefore' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setEndBefore' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndBefore(...args);\n    }\n\n    setEndAfter(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'setEndAfter' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'setEndAfter' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'setEndAfter' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].setEndAfter(...args);\n    }\n\n    collapse() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'collapse' called on an object that is not a valid instance of Range.\");\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (curArg !== undefined) {\n          curArg = conversions[\"boolean\"](curArg, {\n            context: \"Failed to execute 'collapse' on 'Range': parameter 1\",\n            globals: globalObject\n          });\n        } else {\n          curArg = false;\n        }\n        args.push(curArg);\n      }\n      return esValue[implSymbol].collapse(...args);\n    }\n\n    selectNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'selectNode' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'selectNode' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'selectNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNode(...args);\n    }\n\n    selectNodeContents(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'selectNodeContents' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'selectNodeContents' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'selectNodeContents' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].selectNodeContents(...args);\n    }\n\n    compareBoundaryPoints(how, sourceRange) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'compareBoundaryPoints' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'compareBoundaryPoints' on 'Range': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned short\"](curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = exports.convert(globalObject, curArg, {\n          context: \"Failed to execute 'compareBoundaryPoints' on 'Range': parameter 2\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].compareBoundaryPoints(...args);\n    }\n\n    deleteContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'deleteContents' called on an object that is not a valid instance of Range.\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].deleteContents();\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    extractContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'extractContents' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].extractContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    cloneContents() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'cloneContents' called on an object that is not a valid instance of Range.\");\n      }\n\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].cloneContents());\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    insertNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'insertNode' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'insertNode' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'insertNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].insertNode(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    surroundContents(newParent) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'surroundContents' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'surroundContents' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'surroundContents' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return esValue[implSymbol].surroundContents(...args);\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    cloneRange() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'cloneRange' called on an object that is not a valid instance of Range.\");\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol].cloneRange());\n    }\n\n    detach() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'detach' called on an object that is not a valid instance of Range.\");\n      }\n\n      return esValue[implSymbol].detach();\n    }\n\n    isPointInRange(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'isPointInRange' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'isPointInRange' on 'Range': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'isPointInRange' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'isPointInRange' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].isPointInRange(...args);\n    }\n\n    comparePoint(node, offset) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'comparePoint' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'comparePoint' on 'Range': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'comparePoint' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'comparePoint' on 'Range': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].comparePoint(...args);\n    }\n\n    intersectsNode(node) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'intersectsNode' called on an object that is not a valid instance of Range.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'intersectsNode' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = Node.convert(globalObject, curArg, {\n          context: \"Failed to execute 'intersectsNode' on 'Range': parameter 1\"\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].intersectsNode(...args);\n    }\n\n    toString() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'toString' called on an object that is not a valid instance of Range.\");\n      }\n\n      return esValue[implSymbol].toString();\n    }\n\n    createContextualFragment(fragment) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'createContextualFragment' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'createContextualFragment' on 'Range': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'createContextualFragment' on 'Range': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      ceReactionsPreSteps_helpers_custom_elements(globalObject);\n      try {\n        return utils.tryWrapperForImpl(esValue[implSymbol].createContextualFragment(...args));\n      } finally {\n        ceReactionsPostSteps_helpers_custom_elements(globalObject);\n      }\n    }\n\n    get commonAncestorContainer() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get commonAncestorContainer' called on an object that is not a valid instance of Range.\"\n        );\n      }\n\n      return utils.tryWrapperForImpl(esValue[implSymbol][\"commonAncestorContainer\"]);\n    }\n  }\n  Object.defineProperties(Range.prototype, {\n    setStart: { enumerable: true },\n    setEnd: { enumerable: true },\n    setStartBefore: { enumerable: true },\n    setStartAfter: { enumerable: true },\n    setEndBefore: { enumerable: true },\n    setEndAfter: { enumerable: true },\n    collapse: { enumerable: true },\n    selectNode: { enumerable: true },\n    selectNodeContents: { enumerable: true },\n    compareBoundaryPoints: { enumerable: true },\n    deleteContents: { enumerable: true },\n    extractContents: { enumerable: true },\n    cloneContents: { enumerable: true },\n    insertNode: { enumerable: true },\n    surroundContents: { enumerable: true },\n    cloneRange: { enumerable: true },\n    detach: { enumerable: true },\n    isPointInRange: { enumerable: true },\n    comparePoint: { enumerable: true },\n    intersectsNode: { enumerable: true },\n    toString: { enumerable: true },\n    createContextualFragment: { enumerable: true },\n    commonAncestorContainer: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"Range\", configurable: true },\n    START_TO_START: { value: 0, enumerable: true },\n    START_TO_END: { value: 1, enumerable: true },\n    END_TO_END: { value: 2, enumerable: true },\n    END_TO_START: { value: 3, enumerable: true }\n  });\n  Object.defineProperties(Range, {\n    START_TO_START: { value: 0, enumerable: true },\n    START_TO_END: { value: 1, enumerable: true },\n    END_TO_END: { value: 2, enumerable: true },\n    END_TO_START: { value: 3, enumerable: true }\n  });\n  ctorRegistry[interfaceName] = Range;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: Range\n  });\n};\n\nconst Impl = require(\"../range/Range-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}