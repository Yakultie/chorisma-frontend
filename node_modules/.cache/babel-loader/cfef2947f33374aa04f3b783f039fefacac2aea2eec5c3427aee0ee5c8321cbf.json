{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"MimeTypeArray\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'MimeTypeArray'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"MimeTypeArray\"].prototype;\n  }\n  return Object.create(proto);\n}\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n  return new Proxy(wrapper, proxyHandler);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  let wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper = makeProxy(wrapper, globalObject);\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class MimeTypeArray {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n    item(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'item' called on an object that is not a valid instance of MimeTypeArray.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'item' on 'MimeTypeArray': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'item' on 'MimeTypeArray': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].item(...args);\n    }\n    namedItem(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'namedItem' called on an object that is not a valid instance of MimeTypeArray.\");\n      }\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(`Failed to execute 'namedItem' on 'MimeTypeArray': 1 argument required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'namedItem' on 'MimeTypeArray': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].namedItem(...args);\n    }\n    get length() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get length' called on an object that is not a valid instance of MimeTypeArray.\");\n      }\n      return esValue[implSymbol][\"length\"];\n    }\n  }\n  Object.defineProperties(MimeTypeArray.prototype, {\n    item: {\n      enumerable: true\n    },\n    namedItem: {\n      enumerable: true\n    },\n    length: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"MimeTypeArray\",\n      configurable: true\n    },\n    [Symbol.iterator]: {\n      value: globalObject.Array.prototype[Symbol.iterator],\n      configurable: true,\n      writable: true\n    }\n  });\n  ctorRegistry[interfaceName] = MimeTypeArray;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MimeTypeArray\n  });\n};\nconst proxyHandlerCache = new WeakMap();\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  }\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  }\n  ownKeys(target) {\n    const keys = new Set();\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\n      keys.add(`${key}`);\n    }\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  }\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      const indexedValue = target[implSymbol].item(index);\n      if (indexedValue !== null) {\n        return {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n      ignoreNamedProps = true;\n    }\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\n      const globalObject = this._globalObject;\n    }\n    let ownDesc;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      const indexedValue = target[implSymbol].item(index);\n      if (indexedValue !== null) {\n        ownDesc = {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: undefined\n      };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = {\n        value: V\n      };\n    } else {\n      valueDesc = {\n        writable: true,\n        enumerable: true,\n        configurable: true,\n        value: V\n      };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n    const globalObject = this._globalObject;\n    if (utils.isArrayIndexPropName(P)) {\n      return false;\n    }\n    return Reflect.defineProperty(target, P, desc);\n  }\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n    const globalObject = this._globalObject;\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      return !(target[implSymbol].item(index) !== null);\n    }\n    return Reflect.deleteProperty(target, P);\n  }\n  preventExtensions() {\n    return false;\n  }\n}\nconst Impl = require(\"../navigator/MimeTypeArray-impl.js\");","map":{"version":3,"names":["conversions","require","utils","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","makeProxy","wrapper","proxyHandler","proxyHandlerCache","get","ProxyHandler","set","Proxy","constructorArgs","privateData","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","MimeTypeArray","constructor","item","index","esValue","args","curArg","globals","push","namedItem","name","defineProperties","enumerable","Symbol","toStringTag","iterator","Array","writable","WeakMap","_globalObject","target","P","receiver","Reflect","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","apply","ownKeys","keys","key","supportedPropertyIndices","add","ignoreNamedProps","isArrayIndexPropName","indexedValue","tryWrapperForImpl","V","ownDesc","existingDesc","valueDesc","deleteProperty","preventExtensions"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/MimeTypeArray.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"MimeTypeArray\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'MimeTypeArray'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"MimeTypeArray\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nfunction makeProxy(wrapper, globalObject) {\n  let proxyHandler = proxyHandlerCache.get(globalObject);\n  if (proxyHandler === undefined) {\n    proxyHandler = new ProxyHandler(globalObject);\n    proxyHandlerCache.set(globalObject, proxyHandler);\n  }\n  return new Proxy(wrapper, proxyHandler);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  let wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper = makeProxy(wrapper, globalObject);\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class MimeTypeArray {\n    constructor() {\n      throw new globalObject.TypeError(\"Illegal constructor\");\n    }\n\n    item(index) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'item' called on an object that is not a valid instance of MimeTypeArray.\");\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'item' on 'MimeTypeArray': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"unsigned long\"](curArg, {\n          context: \"Failed to execute 'item' on 'MimeTypeArray': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].item(...args);\n    }\n\n    namedItem(name) {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'namedItem' called on an object that is not a valid instance of MimeTypeArray.\"\n        );\n      }\n\n      if (arguments.length < 1) {\n        throw new globalObject.TypeError(\n          `Failed to execute 'namedItem' on 'MimeTypeArray': 1 argument required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        curArg = conversions[\"DOMString\"](curArg, {\n          context: \"Failed to execute 'namedItem' on 'MimeTypeArray': parameter 1\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      return esValue[implSymbol].namedItem(...args);\n    }\n\n    get length() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get length' called on an object that is not a valid instance of MimeTypeArray.\"\n        );\n      }\n\n      return esValue[implSymbol][\"length\"];\n    }\n  }\n  Object.defineProperties(MimeTypeArray.prototype, {\n    item: { enumerable: true },\n    namedItem: { enumerable: true },\n    length: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"MimeTypeArray\", configurable: true },\n    [Symbol.iterator]: { value: globalObject.Array.prototype[Symbol.iterator], configurable: true, writable: true }\n  });\n  ctorRegistry[interfaceName] = MimeTypeArray;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: MimeTypeArray\n  });\n};\n\nconst proxyHandlerCache = new WeakMap();\nclass ProxyHandler {\n  constructor(globalObject) {\n    this._globalObject = globalObject;\n  }\n\n  get(target, P, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.get(target, P, receiver);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc === undefined) {\n      const parent = Object.getPrototypeOf(target);\n      if (parent === null) {\n        return undefined;\n      }\n      return Reflect.get(target, P, receiver);\n    }\n    if (!desc.get && !desc.set) {\n      return desc.value;\n    }\n    const getter = desc.get;\n    if (getter === undefined) {\n      return undefined;\n    }\n    return Reflect.apply(getter, receiver, []);\n  }\n\n  has(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.has(target, P);\n    }\n    const desc = this.getOwnPropertyDescriptor(target, P);\n    if (desc !== undefined) {\n      return true;\n    }\n    const parent = Object.getPrototypeOf(target);\n    if (parent !== null) {\n      return Reflect.has(parent, P);\n    }\n    return false;\n  }\n\n  ownKeys(target) {\n    const keys = new Set();\n\n    for (const key of target[implSymbol][utils.supportedPropertyIndices]) {\n      keys.add(`${key}`);\n    }\n\n    for (const key of Reflect.ownKeys(target)) {\n      keys.add(key);\n    }\n    return [...keys];\n  }\n\n  getOwnPropertyDescriptor(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    let ignoreNamedProps = false;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      const indexedValue = target[implSymbol].item(index);\n      if (indexedValue !== null) {\n        return {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n      ignoreNamedProps = true;\n    }\n\n    return Reflect.getOwnPropertyDescriptor(target, P);\n  }\n\n  set(target, P, V, receiver) {\n    if (typeof P === \"symbol\") {\n      return Reflect.set(target, P, V, receiver);\n    }\n    // The `receiver` argument refers to the Proxy exotic object or an object\n    // that inherits from it, whereas `target` refers to the Proxy target:\n    if (target[implSymbol][utils.wrapperSymbol] === receiver) {\n      const globalObject = this._globalObject;\n    }\n    let ownDesc;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      const indexedValue = target[implSymbol].item(index);\n      if (indexedValue !== null) {\n        ownDesc = {\n          writable: false,\n          enumerable: true,\n          configurable: true,\n          value: utils.tryWrapperForImpl(indexedValue)\n        };\n      }\n    }\n\n    if (ownDesc === undefined) {\n      ownDesc = Reflect.getOwnPropertyDescriptor(target, P);\n    }\n    if (ownDesc === undefined) {\n      const parent = Reflect.getPrototypeOf(target);\n      if (parent !== null) {\n        return Reflect.set(parent, P, V, receiver);\n      }\n      ownDesc = { writable: true, enumerable: true, configurable: true, value: undefined };\n    }\n    if (!ownDesc.writable) {\n      return false;\n    }\n    if (!utils.isObject(receiver)) {\n      return false;\n    }\n    const existingDesc = Reflect.getOwnPropertyDescriptor(receiver, P);\n    let valueDesc;\n    if (existingDesc !== undefined) {\n      if (existingDesc.get || existingDesc.set) {\n        return false;\n      }\n      if (!existingDesc.writable) {\n        return false;\n      }\n      valueDesc = { value: V };\n    } else {\n      valueDesc = { writable: true, enumerable: true, configurable: true, value: V };\n    }\n    return Reflect.defineProperty(receiver, P, valueDesc);\n  }\n\n  defineProperty(target, P, desc) {\n    if (typeof P === \"symbol\") {\n      return Reflect.defineProperty(target, P, desc);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (utils.isArrayIndexPropName(P)) {\n      return false;\n    }\n\n    return Reflect.defineProperty(target, P, desc);\n  }\n\n  deleteProperty(target, P) {\n    if (typeof P === \"symbol\") {\n      return Reflect.deleteProperty(target, P);\n    }\n\n    const globalObject = this._globalObject;\n\n    if (utils.isArrayIndexPropName(P)) {\n      const index = P >>> 0;\n      return !(target[implSymbol].item(index) !== null);\n    }\n\n    return Reflect.deleteProperty(target, P);\n  }\n\n  preventExtensions() {\n    return false;\n  }\n}\n\nconst Impl = require(\"../navigator/MimeTypeArray-impl.js\");\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AACjD,MAAMC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEnC,MAAME,UAAU,GAAGD,KAAK,CAACC,UAAU;AACnC,MAAMC,kBAAkB,GAAGF,KAAK,CAACE,kBAAkB;AAEnD,MAAMC,aAAa,GAAG,eAAe;AAErCC,OAAO,CAACC,EAAE,GAAGC,KAAK,IAAI;EACpB,OAAON,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAC,IAAIN,KAAK,CAACQ,MAAM,CAACF,KAAK,EAAEL,UAAU,CAAC,IAAIK,KAAK,CAACL,UAAU,CAAC,YAAYQ,IAAI,CAACC,cAAc;AACrH,CAAC;AACDN,OAAO,CAACO,MAAM,GAAGL,KAAK,IAAI;EACxB,OAAON,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAC,IAAIA,KAAK,YAAYG,IAAI,CAACC,cAAc;AACtE,CAAC;AACDN,OAAO,CAACQ,OAAO,GAAG,UAACC,YAAY,EAAEP,KAAK,EAA8C;EAAA,IAA5C;IAAEQ,OAAO,GAAG;EAAqB,CAAC,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7E,IAAIX,OAAO,CAACC,EAAE,CAACC,KAAK,CAAC,EAAE;IACrB,OAAON,KAAK,CAACkB,cAAc,CAACZ,KAAK,CAAC;EACpC;EACA,MAAM,IAAIO,YAAY,CAACM,SAAS,CAAE,GAAEL,OAAQ,kCAAiC,CAAC;AAChF,CAAC;AAED,SAASM,WAAWA,CAACP,YAAY,EAAEQ,SAAS,EAAE;EAC5C,IAAIC,KAAK;EACT,IAAID,SAAS,KAAKJ,SAAS,EAAE;IAC3BK,KAAK,GAAGD,SAAS,CAACE,SAAS;EAC7B;EAEA,IAAI,CAACvB,KAAK,CAACO,QAAQ,CAACe,KAAK,CAAC,EAAE;IAC1BA,KAAK,GAAGT,YAAY,CAACX,kBAAkB,CAAC,CAAC,eAAe,CAAC,CAACqB,SAAS;EACrE;EAEA,OAAOC,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC;AAC7B;AAEA,SAASI,SAASA,CAACC,OAAO,EAAEd,YAAY,EAAE;EACxC,IAAIe,YAAY,GAAGC,iBAAiB,CAACC,GAAG,CAACjB,YAAY,CAAC;EACtD,IAAIe,YAAY,KAAKX,SAAS,EAAE;IAC9BW,YAAY,GAAG,IAAIG,YAAY,CAAClB,YAAY,CAAC;IAC7CgB,iBAAiB,CAACG,GAAG,CAACnB,YAAY,EAAEe,YAAY,CAAC;EACnD;EACA,OAAO,IAAIK,KAAK,CAACN,OAAO,EAAEC,YAAY,CAAC;AACzC;AAEAxB,OAAO,CAACqB,MAAM,GAAG,CAACZ,YAAY,EAAEqB,eAAe,EAAEC,WAAW,KAAK;EAC/D,MAAMR,OAAO,GAAGP,WAAW,CAACP,YAAY,CAAC;EACzC,OAAOT,OAAO,CAACgC,KAAK,CAACT,OAAO,EAAEd,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;AAC3E,CAAC;AAED/B,OAAO,CAACiC,UAAU,GAAG,CAACxB,YAAY,EAAEqB,eAAe,EAAEC,WAAW,KAAK;EACnE,MAAMR,OAAO,GAAGvB,OAAO,CAACqB,MAAM,CAACZ,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;EAC1E,OAAOnC,KAAK,CAACkB,cAAc,CAACS,OAAO,CAAC;AACtC,CAAC;AAEDvB,OAAO,CAACkC,cAAc,GAAG,CAACX,OAAO,EAAEd,YAAY,KAAK,CAAC,CAAC;AAEtDT,OAAO,CAACgC,KAAK,GAAG,UAACT,OAAO,EAAEd,YAAY,EAA6C;EAAA,IAA3CqB,eAAe,GAAAnB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEoB,WAAW,GAAApB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC5EoB,WAAW,CAACR,OAAO,GAAGA,OAAO;EAE7BvB,OAAO,CAACkC,cAAc,CAACX,OAAO,EAAEd,YAAY,CAAC;EAC7CW,MAAM,CAACe,cAAc,CAACZ,OAAO,EAAE1B,UAAU,EAAE;IACzCK,KAAK,EAAE,IAAIG,IAAI,CAACC,cAAc,CAACG,YAAY,EAAEqB,eAAe,EAAEC,WAAW,CAAC;IAC1EK,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFb,OAAO,GAAGD,SAAS,CAACC,OAAO,EAAEd,YAAY,CAAC;EAE1Cc,OAAO,CAAC1B,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,GAAGd,OAAO;EAClD,IAAIlB,IAAI,CAACiC,IAAI,EAAE;IACbjC,IAAI,CAACiC,IAAI,CAACf,OAAO,CAAC1B,UAAU,CAAC,CAAC;EAChC;EACA,OAAO0B,OAAO;AAChB,CAAC;AAEDvB,OAAO,CAACuC,GAAG,GAAG,CAAC9B,YAAY,EAAEQ,SAAS,KAAK;EACzC,IAAIM,OAAO,GAAGP,WAAW,CAACP,YAAY,EAAEQ,SAAS,CAAC;EAElDjB,OAAO,CAACkC,cAAc,CAACX,OAAO,EAAEd,YAAY,CAAC;EAC7CW,MAAM,CAACe,cAAc,CAACZ,OAAO,EAAE1B,UAAU,EAAE;IACzCK,KAAK,EAAEkB,MAAM,CAACC,MAAM,CAAChB,IAAI,CAACC,cAAc,CAACa,SAAS,CAAC;IACnDiB,YAAY,EAAE;EAChB,CAAC,CAAC;EAEFb,OAAO,GAAGD,SAAS,CAACC,OAAO,EAAEd,YAAY,CAAC;EAE1Cc,OAAO,CAAC1B,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,GAAGd,OAAO;EAClD,IAAIlB,IAAI,CAACiC,IAAI,EAAE;IACbjC,IAAI,CAACiC,IAAI,CAACf,OAAO,CAAC1B,UAAU,CAAC,CAAC;EAChC;EACA,OAAO0B,OAAO,CAAC1B,UAAU,CAAC;AAC5B,CAAC;AAED,MAAM2C,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAEnCzC,OAAO,CAAC0C,OAAO,GAAG,CAACjC,YAAY,EAAEkC,WAAW,KAAK;EAC/C,IAAI,CAACA,WAAW,CAACC,IAAI,CAACC,UAAU,IAAIL,OAAO,CAACM,GAAG,CAACD,UAAU,CAAC,CAAC,EAAE;IAC5D;EACF;EAEA,MAAME,YAAY,GAAGnD,KAAK,CAACoD,gBAAgB,CAACvC,YAAY,CAAC;EACzD,MAAMwC,aAAa,CAAC;IAClBC,WAAWA,CAAA,EAAG;MACZ,MAAM,IAAIzC,YAAY,CAACM,SAAS,CAAC,qBAAqB,CAAC;IACzD;IAEAoC,IAAIA,CAACC,KAAK,EAAE;MACV,MAAMC,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKxC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACoD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI5C,YAAY,CAACM,SAAS,CAAC,2EAA2E,CAAC;MAC/G;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,8EAA6EJ,SAAS,CAACC,MAAO,WACjG,CAAC;MACH;MACA,MAAM0C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG5C,SAAS,CAAC,CAAC,CAAC;QACzB4C,MAAM,GAAG7D,WAAW,CAAC,eAAe,CAAC,CAAC6D,MAAM,EAAE;UAC5C7C,OAAO,EAAE,0DAA0D;UACnE8C,OAAO,EAAE/C;QACX,CAAC,CAAC;QACF6C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOF,OAAO,CAACxD,UAAU,CAAC,CAACsD,IAAI,CAAC,GAAGG,IAAI,CAAC;IAC1C;IAEAI,SAASA,CAACC,IAAI,EAAE;MACd,MAAMN,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKxC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MACzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACoD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI5C,YAAY,CAACM,SAAS,CAC9B,gFACF,CAAC;MACH;MAEA,IAAIJ,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;QACxB,MAAM,IAAIH,YAAY,CAACM,SAAS,CAC7B,mFAAkFJ,SAAS,CAACC,MAAO,WACtG,CAAC;MACH;MACA,MAAM0C,IAAI,GAAG,EAAE;MACf;QACE,IAAIC,MAAM,GAAG5C,SAAS,CAAC,CAAC,CAAC;QACzB4C,MAAM,GAAG7D,WAAW,CAAC,WAAW,CAAC,CAAC6D,MAAM,EAAE;UACxC7C,OAAO,EAAE,+DAA+D;UACxE8C,OAAO,EAAE/C;QACX,CAAC,CAAC;QACF6C,IAAI,CAACG,IAAI,CAACF,MAAM,CAAC;MACnB;MACA,OAAOF,OAAO,CAACxD,UAAU,CAAC,CAAC6D,SAAS,CAAC,GAAGJ,IAAI,CAAC;IAC/C;IAEA,IAAI1C,MAAMA,CAAA,EAAG;MACX,MAAMyC,OAAO,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,KAAKxC,SAAS,GAAG,IAAI,GAAGJ,YAAY;MAEzE,IAAI,CAACT,OAAO,CAACC,EAAE,CAACoD,OAAO,CAAC,EAAE;QACxB,MAAM,IAAI5C,YAAY,CAACM,SAAS,CAC9B,iFACF,CAAC;MACH;MAEA,OAAOsC,OAAO,CAACxD,UAAU,CAAC,CAAC,QAAQ,CAAC;IACtC;EACF;EACAuB,MAAM,CAACwC,gBAAgB,CAACX,aAAa,CAAC9B,SAAS,EAAE;IAC/CgC,IAAI,EAAE;MAAEU,UAAU,EAAE;IAAK,CAAC;IAC1BH,SAAS,EAAE;MAAEG,UAAU,EAAE;IAAK,CAAC;IAC/BjD,MAAM,EAAE;MAAEiD,UAAU,EAAE;IAAK,CAAC;IAC5B,CAACC,MAAM,CAACC,WAAW,GAAG;MAAE7D,KAAK,EAAE,eAAe;MAAEkC,YAAY,EAAE;IAAK,CAAC;IACpE,CAAC0B,MAAM,CAACE,QAAQ,GAAG;MAAE9D,KAAK,EAAEO,YAAY,CAACwD,KAAK,CAAC9C,SAAS,CAAC2C,MAAM,CAACE,QAAQ,CAAC;MAAE5B,YAAY,EAAE,IAAI;MAAE8B,QAAQ,EAAE;IAAK;EAChH,CAAC,CAAC;EACFnB,YAAY,CAAChD,aAAa,CAAC,GAAGkD,aAAa;EAE3C7B,MAAM,CAACe,cAAc,CAAC1B,YAAY,EAAEV,aAAa,EAAE;IACjDqC,YAAY,EAAE,IAAI;IAClB8B,QAAQ,EAAE,IAAI;IACdhE,KAAK,EAAE+C;EACT,CAAC,CAAC;AACJ,CAAC;AAED,MAAMxB,iBAAiB,GAAG,IAAI0C,OAAO,CAAC,CAAC;AACvC,MAAMxC,YAAY,CAAC;EACjBuB,WAAWA,CAACzC,YAAY,EAAE;IACxB,IAAI,CAAC2D,aAAa,GAAG3D,YAAY;EACnC;EAEAiB,GAAGA,CAAC2C,MAAM,EAAEC,CAAC,EAAEC,QAAQ,EAAE;IACvB,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAC9C,GAAG,CAAC2C,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;IACzC;IACA,MAAME,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACrD,IAAIG,IAAI,KAAK5D,SAAS,EAAE;MACtB,MAAM8D,MAAM,GAAGvD,MAAM,CAACwD,cAAc,CAACP,MAAM,CAAC;MAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;QACnB,OAAO9D,SAAS;MAClB;MACA,OAAO2D,OAAO,CAAC9C,GAAG,CAAC2C,MAAM,EAAEC,CAAC,EAAEC,QAAQ,CAAC;IACzC;IACA,IAAI,CAACE,IAAI,CAAC/C,GAAG,IAAI,CAAC+C,IAAI,CAAC7C,GAAG,EAAE;MAC1B,OAAO6C,IAAI,CAACvE,KAAK;IACnB;IACA,MAAM2E,MAAM,GAAGJ,IAAI,CAAC/C,GAAG;IACvB,IAAImD,MAAM,KAAKhE,SAAS,EAAE;MACxB,OAAOA,SAAS;IAClB;IACA,OAAO2D,OAAO,CAACM,KAAK,CAACD,MAAM,EAAEN,QAAQ,EAAE,EAAE,CAAC;EAC5C;EAEAzB,GAAGA,CAACuB,MAAM,EAAEC,CAAC,EAAE;IACb,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAC1B,GAAG,CAACuB,MAAM,EAAEC,CAAC,CAAC;IAC/B;IACA,MAAMG,IAAI,GAAG,IAAI,CAACC,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACrD,IAAIG,IAAI,KAAK5D,SAAS,EAAE;MACtB,OAAO,IAAI;IACb;IACA,MAAM8D,MAAM,GAAGvD,MAAM,CAACwD,cAAc,CAACP,MAAM,CAAC;IAC5C,IAAIM,MAAM,KAAK,IAAI,EAAE;MACnB,OAAOH,OAAO,CAAC1B,GAAG,CAAC6B,MAAM,EAAEL,CAAC,CAAC;IAC/B;IACA,OAAO,KAAK;EACd;EAEAS,OAAOA,CAACV,MAAM,EAAE;IACd,MAAMW,IAAI,GAAG,IAAIvC,GAAG,CAAC,CAAC;IAEtB,KAAK,MAAMwC,GAAG,IAAIZ,MAAM,CAACxE,UAAU,CAAC,CAACD,KAAK,CAACsF,wBAAwB,CAAC,EAAE;MACpEF,IAAI,CAACG,GAAG,CAAE,GAAEF,GAAI,EAAC,CAAC;IACpB;IAEA,KAAK,MAAMA,GAAG,IAAIT,OAAO,CAACO,OAAO,CAACV,MAAM,CAAC,EAAE;MACzCW,IAAI,CAACG,GAAG,CAACF,GAAG,CAAC;IACf;IACA,OAAO,CAAC,GAAGD,IAAI,CAAC;EAClB;EAEAN,wBAAwBA,CAACL,MAAM,EAAEC,CAAC,EAAE;IAClC,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACpD;IACA,IAAIc,gBAAgB,GAAG,KAAK;IAE5B,IAAIxF,KAAK,CAACyF,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMlB,KAAK,GAAGkB,CAAC,KAAK,CAAC;MACrB,MAAMgB,YAAY,GAAGjB,MAAM,CAACxE,UAAU,CAAC,CAACsD,IAAI,CAACC,KAAK,CAAC;MACnD,IAAIkC,YAAY,KAAK,IAAI,EAAE;QACzB,OAAO;UACLpB,QAAQ,EAAE,KAAK;UACfL,UAAU,EAAE,IAAI;UAChBzB,YAAY,EAAE,IAAI;UAClBlC,KAAK,EAAEN,KAAK,CAAC2F,iBAAiB,CAACD,YAAY;QAC7C,CAAC;MACH;MACAF,gBAAgB,GAAG,IAAI;IACzB;IAEA,OAAOZ,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;EACpD;EAEA1C,GAAGA,CAACyC,MAAM,EAAEC,CAAC,EAAEkB,CAAC,EAAEjB,QAAQ,EAAE;IAC1B,IAAI,OAAOD,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAAC5C,GAAG,CAACyC,MAAM,EAAEC,CAAC,EAAEkB,CAAC,EAAEjB,QAAQ,CAAC;IAC5C;IACA;IACA;IACA,IAAIF,MAAM,CAACxE,UAAU,CAAC,CAACD,KAAK,CAACyC,aAAa,CAAC,KAAKkC,QAAQ,EAAE;MACxD,MAAM9D,YAAY,GAAG,IAAI,CAAC2D,aAAa;IACzC;IACA,IAAIqB,OAAO;IAEX,IAAI7F,KAAK,CAACyF,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMlB,KAAK,GAAGkB,CAAC,KAAK,CAAC;MACrB,MAAMgB,YAAY,GAAGjB,MAAM,CAACxE,UAAU,CAAC,CAACsD,IAAI,CAACC,KAAK,CAAC;MACnD,IAAIkC,YAAY,KAAK,IAAI,EAAE;QACzBG,OAAO,GAAG;UACRvB,QAAQ,EAAE,KAAK;UACfL,UAAU,EAAE,IAAI;UAChBzB,YAAY,EAAE,IAAI;UAClBlC,KAAK,EAAEN,KAAK,CAAC2F,iBAAiB,CAACD,YAAY;QAC7C,CAAC;MACH;IACF;IAEA,IAAIG,OAAO,KAAK5E,SAAS,EAAE;MACzB4E,OAAO,GAAGjB,OAAO,CAACE,wBAAwB,CAACL,MAAM,EAAEC,CAAC,CAAC;IACvD;IACA,IAAImB,OAAO,KAAK5E,SAAS,EAAE;MACzB,MAAM8D,MAAM,GAAGH,OAAO,CAACI,cAAc,CAACP,MAAM,CAAC;MAC7C,IAAIM,MAAM,KAAK,IAAI,EAAE;QACnB,OAAOH,OAAO,CAAC5C,GAAG,CAAC+C,MAAM,EAAEL,CAAC,EAAEkB,CAAC,EAAEjB,QAAQ,CAAC;MAC5C;MACAkB,OAAO,GAAG;QAAEvB,QAAQ,EAAE,IAAI;QAAEL,UAAU,EAAE,IAAI;QAAEzB,YAAY,EAAE,IAAI;QAAElC,KAAK,EAAEW;MAAU,CAAC;IACtF;IACA,IAAI,CAAC4E,OAAO,CAACvB,QAAQ,EAAE;MACrB,OAAO,KAAK;IACd;IACA,IAAI,CAACtE,KAAK,CAACO,QAAQ,CAACoE,QAAQ,CAAC,EAAE;MAC7B,OAAO,KAAK;IACd;IACA,MAAMmB,YAAY,GAAGlB,OAAO,CAACE,wBAAwB,CAACH,QAAQ,EAAED,CAAC,CAAC;IAClE,IAAIqB,SAAS;IACb,IAAID,YAAY,KAAK7E,SAAS,EAAE;MAC9B,IAAI6E,YAAY,CAAChE,GAAG,IAAIgE,YAAY,CAAC9D,GAAG,EAAE;QACxC,OAAO,KAAK;MACd;MACA,IAAI,CAAC8D,YAAY,CAACxB,QAAQ,EAAE;QAC1B,OAAO,KAAK;MACd;MACAyB,SAAS,GAAG;QAAEzF,KAAK,EAAEsF;MAAE,CAAC;IAC1B,CAAC,MAAM;MACLG,SAAS,GAAG;QAAEzB,QAAQ,EAAE,IAAI;QAAEL,UAAU,EAAE,IAAI;QAAEzB,YAAY,EAAE,IAAI;QAAElC,KAAK,EAAEsF;MAAE,CAAC;IAChF;IACA,OAAOhB,OAAO,CAACrC,cAAc,CAACoC,QAAQ,EAAED,CAAC,EAAEqB,SAAS,CAAC;EACvD;EAEAxD,cAAcA,CAACkC,MAAM,EAAEC,CAAC,EAAEG,IAAI,EAAE;IAC9B,IAAI,OAAOH,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACrC,cAAc,CAACkC,MAAM,EAAEC,CAAC,EAAEG,IAAI,CAAC;IAChD;IAEA,MAAMhE,YAAY,GAAG,IAAI,CAAC2D,aAAa;IAEvC,IAAIxE,KAAK,CAACyF,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,OAAO,KAAK;IACd;IAEA,OAAOE,OAAO,CAACrC,cAAc,CAACkC,MAAM,EAAEC,CAAC,EAAEG,IAAI,CAAC;EAChD;EAEAmB,cAAcA,CAACvB,MAAM,EAAEC,CAAC,EAAE;IACxB,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,OAAOE,OAAO,CAACoB,cAAc,CAACvB,MAAM,EAAEC,CAAC,CAAC;IAC1C;IAEA,MAAM7D,YAAY,GAAG,IAAI,CAAC2D,aAAa;IAEvC,IAAIxE,KAAK,CAACyF,oBAAoB,CAACf,CAAC,CAAC,EAAE;MACjC,MAAMlB,KAAK,GAAGkB,CAAC,KAAK,CAAC;MACrB,OAAO,EAAED,MAAM,CAACxE,UAAU,CAAC,CAACsD,IAAI,CAACC,KAAK,CAAC,KAAK,IAAI,CAAC;IACnD;IAEA,OAAOoB,OAAO,CAACoB,cAAc,CAACvB,MAAM,EAAEC,CAAC,CAAC;EAC1C;EAEAuB,iBAAiBA,CAAA,EAAG;IAClB,OAAO,KAAK;EACd;AACF;AAEA,MAAMxF,IAAI,GAAGV,OAAO,CAAC,oCAAoC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}