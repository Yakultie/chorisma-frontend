{"ast":null,"code":"\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Blob = require(\"./Blob.js\");\nconst FilePropertyBag = require(\"./FilePropertyBag.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\nconst interfaceName = \"File\";\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = function (globalObject, value) {\n  let {\n    context = \"The provided value\"\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'File'.`);\n};\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"File\"].prototype;\n  }\n  return Object.create(proto);\n}\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\nexports._internalSetup = (wrapper, globalObject) => {\n  Blob._internalSetup(wrapper, globalObject);\n};\nexports.setup = function (wrapper, globalObject) {\n  let constructorArgs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  let privateData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  privateData.wrapper = wrapper;\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\nconst exposed = new Set([\"Window\", \"Worker\"]);\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class File extends globalObject.Blob {\n    constructor(fileBits, fileName) {\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (!utils.isObject(curArg)) {\n          throw new globalObject.TypeError(\"Failed to construct 'File': parameter 1\" + \" is not an iterable object.\");\n        } else {\n          const V = [];\n          const tmp = curArg;\n          for (let nextItem of tmp) {\n            if (Blob.is(nextItem)) {\n              nextItem = utils.implForWrapper(nextItem);\n            } else if (utils.isArrayBuffer(nextItem)) {} else if (ArrayBuffer.isView(nextItem)) {} else {\n              nextItem = conversions[\"USVString\"](nextItem, {\n                context: \"Failed to construct 'File': parameter 1\" + \"'s element\",\n                globals: globalObject\n              });\n            }\n            V.push(nextItem);\n          }\n          curArg = V;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'File': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = FilePropertyBag.convert(globalObject, curArg, {\n          context: \"Failed to construct 'File': parameter 3\"\n        });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get name' called on an object that is not a valid instance of File.\");\n      }\n      return esValue[implSymbol][\"name\"];\n    }\n    get lastModified() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get lastModified' called on an object that is not a valid instance of File.\");\n      }\n      return esValue[implSymbol][\"lastModified\"];\n    }\n  }\n  Object.defineProperties(File.prototype, {\n    name: {\n      enumerable: true\n    },\n    lastModified: {\n      enumerable: true\n    },\n    [Symbol.toStringTag]: {\n      value: \"File\",\n      configurable: true\n    }\n  });\n  ctorRegistry[interfaceName] = File;\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: File\n  });\n};\nconst Impl = require(\"../file-api/File-impl.js\");","map":{"version":3,"names":["conversions","require","utils","Blob","FilePropertyBag","implSymbol","ctorRegistrySymbol","interfaceName","exports","is","value","isObject","hasOwn","Impl","implementation","isImpl","convert","globalObject","context","arguments","length","undefined","implForWrapper","TypeError","makeWrapper","newTarget","proto","prototype","Object","create","constructorArgs","privateData","wrapper","setup","createImpl","_internalSetup","defineProperty","configurable","wrapperSymbol","init","new","exposed","Set","install","globalNames","some","globalName","has","ctorRegistry","initCtorRegistry","File","constructor","fileBits","fileName","args","curArg","V","tmp","nextItem","isArrayBuffer","ArrayBuffer","isView","globals","push","target","name","esValue","lastModified","defineProperties","enumerable","Symbol","toStringTag","writable"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/generated/File.js"],"sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst Blob = require(\"./Blob.js\");\nconst FilePropertyBag = require(\"./FilePropertyBag.js\");\nconst implSymbol = utils.implSymbol;\nconst ctorRegistrySymbol = utils.ctorRegistrySymbol;\n\nconst interfaceName = \"File\";\n\nexports.is = value => {\n  return utils.isObject(value) && utils.hasOwn(value, implSymbol) && value[implSymbol] instanceof Impl.implementation;\n};\nexports.isImpl = value => {\n  return utils.isObject(value) && value instanceof Impl.implementation;\n};\nexports.convert = (globalObject, value, { context = \"The provided value\" } = {}) => {\n  if (exports.is(value)) {\n    return utils.implForWrapper(value);\n  }\n  throw new globalObject.TypeError(`${context} is not of type 'File'.`);\n};\n\nfunction makeWrapper(globalObject, newTarget) {\n  let proto;\n  if (newTarget !== undefined) {\n    proto = newTarget.prototype;\n  }\n\n  if (!utils.isObject(proto)) {\n    proto = globalObject[ctorRegistrySymbol][\"File\"].prototype;\n  }\n\n  return Object.create(proto);\n}\n\nexports.create = (globalObject, constructorArgs, privateData) => {\n  const wrapper = makeWrapper(globalObject);\n  return exports.setup(wrapper, globalObject, constructorArgs, privateData);\n};\n\nexports.createImpl = (globalObject, constructorArgs, privateData) => {\n  const wrapper = exports.create(globalObject, constructorArgs, privateData);\n  return utils.implForWrapper(wrapper);\n};\n\nexports._internalSetup = (wrapper, globalObject) => {\n  Blob._internalSetup(wrapper, globalObject);\n};\n\nexports.setup = (wrapper, globalObject, constructorArgs = [], privateData = {}) => {\n  privateData.wrapper = wrapper;\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: new Impl.implementation(globalObject, constructorArgs, privateData),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper;\n};\n\nexports.new = (globalObject, newTarget) => {\n  const wrapper = makeWrapper(globalObject, newTarget);\n\n  exports._internalSetup(wrapper, globalObject);\n  Object.defineProperty(wrapper, implSymbol, {\n    value: Object.create(Impl.implementation.prototype),\n    configurable: true\n  });\n\n  wrapper[implSymbol][utils.wrapperSymbol] = wrapper;\n  if (Impl.init) {\n    Impl.init(wrapper[implSymbol]);\n  }\n  return wrapper[implSymbol];\n};\n\nconst exposed = new Set([\"Window\", \"Worker\"]);\n\nexports.install = (globalObject, globalNames) => {\n  if (!globalNames.some(globalName => exposed.has(globalName))) {\n    return;\n  }\n\n  const ctorRegistry = utils.initCtorRegistry(globalObject);\n  class File extends globalObject.Blob {\n    constructor(fileBits, fileName) {\n      if (arguments.length < 2) {\n        throw new globalObject.TypeError(\n          `Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`\n        );\n      }\n      const args = [];\n      {\n        let curArg = arguments[0];\n        if (!utils.isObject(curArg)) {\n          throw new globalObject.TypeError(\"Failed to construct 'File': parameter 1\" + \" is not an iterable object.\");\n        } else {\n          const V = [];\n          const tmp = curArg;\n          for (let nextItem of tmp) {\n            if (Blob.is(nextItem)) {\n              nextItem = utils.implForWrapper(nextItem);\n            } else if (utils.isArrayBuffer(nextItem)) {\n            } else if (ArrayBuffer.isView(nextItem)) {\n            } else {\n              nextItem = conversions[\"USVString\"](nextItem, {\n                context: \"Failed to construct 'File': parameter 1\" + \"'s element\",\n                globals: globalObject\n              });\n            }\n            V.push(nextItem);\n          }\n          curArg = V;\n        }\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[1];\n        curArg = conversions[\"USVString\"](curArg, {\n          context: \"Failed to construct 'File': parameter 2\",\n          globals: globalObject\n        });\n        args.push(curArg);\n      }\n      {\n        let curArg = arguments[2];\n        curArg = FilePropertyBag.convert(globalObject, curArg, { context: \"Failed to construct 'File': parameter 3\" });\n        args.push(curArg);\n      }\n      return exports.setup(Object.create(new.target.prototype), globalObject, args);\n    }\n\n    get name() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\"'get name' called on an object that is not a valid instance of File.\");\n      }\n\n      return esValue[implSymbol][\"name\"];\n    }\n\n    get lastModified() {\n      const esValue = this !== null && this !== undefined ? this : globalObject;\n\n      if (!exports.is(esValue)) {\n        throw new globalObject.TypeError(\n          \"'get lastModified' called on an object that is not a valid instance of File.\"\n        );\n      }\n\n      return esValue[implSymbol][\"lastModified\"];\n    }\n  }\n  Object.defineProperties(File.prototype, {\n    name: { enumerable: true },\n    lastModified: { enumerable: true },\n    [Symbol.toStringTag]: { value: \"File\", configurable: true }\n  });\n  ctorRegistry[interfaceName] = File;\n\n  Object.defineProperty(globalObject, interfaceName, {\n    configurable: true,\n    writable: true,\n    value: File\n  });\n};\n\nconst Impl = require(\"../file-api/File-impl.js\");\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}