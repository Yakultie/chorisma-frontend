{"ast":null,"code":"\"use strict\";\n\nconst nodeTypes = require(\"../node-type\");\nconst {\n  domSymbolTree\n} = require(\"../helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\nexports.getChildNodes = node => domSymbolTree.childrenToArray(node);\nexports.getParentNode = node => node.parentNode;\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n  return attributeList;\n};\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\nexports.getDocumentTypeNodeName = node => node.name;\nexports.getDocumentTypeNodePublicId = node => node.publicId;\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\nexports.getTemplateContent = templateElement => templateElement._templateContents;\nexports.getDocumentMode = document => document._mode;\n\n// Node types\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n\n// Source code location\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\n  Object.assign(node.sourceCodeLocation, endLocation);\n};","map":{"version":3,"names":["nodeTypes","require","domSymbolTree","exports","getFirstChild","node","firstChild","getChildNodes","childrenToArray","getParentNode","parentNode","getAttrList","element","attributeList","_attributeList","_isValue","every","attr","name","unshift","namespace","prefix","value","getTagName","_qualifiedName","getNamespaceURI","namespaceURI","getTextNodeContent","getCommentNodeContent","data","getDocumentTypeNodeName","getDocumentTypeNodePublicId","publicId","getDocumentTypeNodeSystemId","systemId","getTemplateContent","templateElement","_templateContents","getDocumentMode","document","_mode","isTextNode","nodeType","TEXT_NODE","isCommentNode","COMMENT_NODE","isDocumentTypeNode","DOCUMENT_TYPE_NODE","isElementNode","ELEMENT_NODE","setNodeSourceCodeLocation","location","sourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","Object","assign"],"sources":["/Users/bernard/Downloads/my-app/node_modules/jsdom/lib/jsdom/living/domparsing/parse5-adapter-serialization.js"],"sourcesContent":["\"use strict\";\nconst nodeTypes = require(\"../node-type\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\n// Serialization only requires a subset of the tree adapter interface.\n\n// Tree traversing\nexports.getFirstChild = node => node.firstChild;\n\nexports.getChildNodes = node => domSymbolTree.childrenToArray(node);\n\nexports.getParentNode = node => node.parentNode;\n\nexports.getAttrList = element => {\n  const attributeList = [...element._attributeList];\n\n  if (element._isValue && attributeList.every(attr => attr.name !== \"is\")) {\n    attributeList.unshift({\n      name: \"is\",\n      namespace: null,\n      prefix: null,\n      value: element._isValue\n    });\n  }\n\n  return attributeList;\n};\n\n// Node data\nexports.getTagName = element => element._qualifiedName; // https://github.com/inikulin/parse5/issues/231\n\nexports.getNamespaceURI = element => element.namespaceURI;\n\nexports.getTextNodeContent = exports.getCommentNodeContent = node => node.data;\n\nexports.getDocumentTypeNodeName = node => node.name;\n\nexports.getDocumentTypeNodePublicId = node => node.publicId;\n\nexports.getDocumentTypeNodeSystemId = node => node.systemId;\n\nexports.getTemplateContent = templateElement => templateElement._templateContents;\n\nexports.getDocumentMode = document => document._mode;\n\n// Node types\nexports.isTextNode = node => node.nodeType === nodeTypes.TEXT_NODE;\n\nexports.isCommentNode = node => node.nodeType === nodeTypes.COMMENT_NODE;\n\nexports.isDocumentTypeNode = node => node.nodeType === nodeTypes.DOCUMENT_TYPE_NODE;\n\nexports.isElementNode = node => node.nodeType === nodeTypes.ELEMENT_NODE;\n\n// Source code location\nexports.setNodeSourceCodeLocation = (node, location) => {\n  node.sourceCodeLocation = location;\n};\n\nexports.getNodeSourceCodeLocation = node => node.sourceCodeLocation;\n\nexports.updateNodeSourceCodeLocation = (node, endLocation) => {\n  Object.assign(node.sourceCodeLocation, endLocation);\n};\n"],"mappings":"AAAA,YAAY;;AACZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;AACzC,MAAM;EAAEC;AAAc,CAAC,GAAGD,OAAO,CAAC,+BAA+B,CAAC;AAClE;;AAEA;AACAE,OAAO,CAACC,aAAa,GAAGC,IAAI,IAAIA,IAAI,CAACC,UAAU;AAE/CH,OAAO,CAACI,aAAa,GAAGF,IAAI,IAAIH,aAAa,CAACM,eAAe,CAACH,IAAI,CAAC;AAEnEF,OAAO,CAACM,aAAa,GAAGJ,IAAI,IAAIA,IAAI,CAACK,UAAU;AAE/CP,OAAO,CAACQ,WAAW,GAAGC,OAAO,IAAI;EAC/B,MAAMC,aAAa,GAAG,CAAC,GAAGD,OAAO,CAACE,cAAc,CAAC;EAEjD,IAAIF,OAAO,CAACG,QAAQ,IAAIF,aAAa,CAACG,KAAK,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,IAAI,CAAC,EAAE;IACvEL,aAAa,CAACM,OAAO,CAAC;MACpBD,IAAI,EAAE,IAAI;MACVE,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAEV,OAAO,CAACG;IACjB,CAAC,CAAC;EACJ;EAEA,OAAOF,aAAa;AACtB,CAAC;;AAED;AACAV,OAAO,CAACoB,UAAU,GAAGX,OAAO,IAAIA,OAAO,CAACY,cAAc,CAAC,CAAC;;AAExDrB,OAAO,CAACsB,eAAe,GAAGb,OAAO,IAAIA,OAAO,CAACc,YAAY;AAEzDvB,OAAO,CAACwB,kBAAkB,GAAGxB,OAAO,CAACyB,qBAAqB,GAAGvB,IAAI,IAAIA,IAAI,CAACwB,IAAI;AAE9E1B,OAAO,CAAC2B,uBAAuB,GAAGzB,IAAI,IAAIA,IAAI,CAACa,IAAI;AAEnDf,OAAO,CAAC4B,2BAA2B,GAAG1B,IAAI,IAAIA,IAAI,CAAC2B,QAAQ;AAE3D7B,OAAO,CAAC8B,2BAA2B,GAAG5B,IAAI,IAAIA,IAAI,CAAC6B,QAAQ;AAE3D/B,OAAO,CAACgC,kBAAkB,GAAGC,eAAe,IAAIA,eAAe,CAACC,iBAAiB;AAEjFlC,OAAO,CAACmC,eAAe,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,KAAK;;AAEpD;AACArC,OAAO,CAACsC,UAAU,GAAGpC,IAAI,IAAIA,IAAI,CAACqC,QAAQ,KAAK1C,SAAS,CAAC2C,SAAS;AAElExC,OAAO,CAACyC,aAAa,GAAGvC,IAAI,IAAIA,IAAI,CAACqC,QAAQ,KAAK1C,SAAS,CAAC6C,YAAY;AAExE1C,OAAO,CAAC2C,kBAAkB,GAAGzC,IAAI,IAAIA,IAAI,CAACqC,QAAQ,KAAK1C,SAAS,CAAC+C,kBAAkB;AAEnF5C,OAAO,CAAC6C,aAAa,GAAG3C,IAAI,IAAIA,IAAI,CAACqC,QAAQ,KAAK1C,SAAS,CAACiD,YAAY;;AAExE;AACA9C,OAAO,CAAC+C,yBAAyB,GAAG,CAAC7C,IAAI,EAAE8C,QAAQ,KAAK;EACtD9C,IAAI,CAAC+C,kBAAkB,GAAGD,QAAQ;AACpC,CAAC;AAEDhD,OAAO,CAACkD,yBAAyB,GAAGhD,IAAI,IAAIA,IAAI,CAAC+C,kBAAkB;AAEnEjD,OAAO,CAACmD,4BAA4B,GAAG,CAACjD,IAAI,EAAEkD,WAAW,KAAK;EAC5DC,MAAM,CAACC,MAAM,CAACpD,IAAI,CAAC+C,kBAAkB,EAAEG,WAAW,CAAC;AACrD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}